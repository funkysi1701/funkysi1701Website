<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DNS on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/dns/</link><description>Recent content in DNS on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 09 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/dns/index.xml" rel="self" type="application/rss+xml"/><item><title>DNS for Developers</title><link>https://www.funkysi1701.com/posts/2018/dns-for-developers/</link><pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2018/dns-for-developers/</guid><description>&lt;p>DNS is the backbone of the internet and as such I believe every developer should know something about the basics and not just leave it for the sysadmin to sort.&lt;/p>
&lt;h3 id="what-is-dns">What is DNS?&lt;a class="anchor ms-1" href="#what-is-dns">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>DNS or Domain Name System is what translates Domain names to IP addresses and vice versa.&lt;/p>
&lt;h3 id="wait-what-is-an-ip-address-and-what-are-domain-names">Wait what is an IP address and what are domain names?&lt;a class="anchor ms-1" href="#wait-what-is-an-ip-address-and-what-are-domain-names">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>You do realise this is a developer blog? An IP address is a unique address on the internet and a domain name is a user friendly label for one or more of these.&lt;/p>
&lt;p>An example might be google.com which for me resolves to 216.58.204.14&lt;/p>
&lt;h3 id="how-it-works">How it works&lt;a class="anchor ms-1" href="#how-it-works">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2018/04/dns-rev-1.gif?resize=360%2C320&amp;amp;ssl=1" loading="lazy"
/>
When your browser makes a request to google.com it makes a request to your ISPs DNS Servers. This resolves google.com to 216.58.204.14&lt;/p>
&lt;p>In more detail your ISPs DNS server will forward the DNS query to another DNS server and will cache the results for a set amount of time. This is the TTL or Time To Live. Next time the ISP DNS Server will be able to reply directly without needing to forward requests.&lt;/p>
&lt;p>This forwarding and caching is what makes making a DNS change not instantaneous. The TTL needs to be reached so that no results are still being fetched from the cache of DNS servers across the globe.&lt;/p>
&lt;h3 id="dns-records">DNS Records&lt;a class="anchor ms-1" href="#dns-records">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Now we know roughly how DNS works let’s look at the most common type of records&lt;/p>
&lt;h4 id="a">A&lt;a class="anchor ms-1" href="#a">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>A (Host) records are the most simple records which translate domain names to IPs&lt;/p>
&lt;p>eg &lt;a href="https://www.google.com" target="_blank" rel="noopener noreferrer">www.google.com&lt;/a>
to 216.58.204.14&lt;/p>
&lt;h4 id="cname">CNAME&lt;a class="anchor ms-1" href="#cname">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>A CNAME (Canonical Name) record is different to an A record in that it maps a domain name to another domain name when no A record exists.&lt;/p>
&lt;p>eg &lt;a href="https://www.google.com" target="_blank" rel="noopener noreferrer">www.google.com&lt;/a>
to somethingelse.google.com&lt;/p>
&lt;p>Typically Azure makes use of CNAMEs for many of its services especially adding a custom domain name&lt;/p>
&lt;h4 id="mx">MX&lt;a class="anchor ms-1" href="#mx">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>MX stands for Mail Exchange and is used for configuring email&lt;/p>
&lt;h4 id="name-server">Name Server&lt;a class="anchor ms-1" href="#name-server">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>Every domain has a number of Name Servers which tells you what servers control the DNS settings for that domain. If you change your Name Servers then the new Name servers will be where you can change your DNS settings.&lt;/p>
&lt;p>If you want to use a service like &lt;a href="https://dnsimple.com/" target="_blank" rel="noopener noreferrer">DNSimple&lt;/a>
instead of &lt;a href="https://www.123-reg.co.uk/" target="_blank" rel="noopener noreferrer">123reg&lt;/a>
or where ever you registered your domain then all you need to do is change your Name servers.&lt;/p>
&lt;h4 id="aaaa">AAAA&lt;a class="anchor ms-1" href="#aaaa">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>Like A record but for ipv6&lt;/p>
&lt;h3 id="what-next">What next?&lt;a class="anchor ms-1" href="#what-next">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Want to put some different DNS records into practise? Buy a domain name and publish some content to it. Check out my previous post about &lt;a href="https://www.funkysi1701.com/creating-dns-records-programmatically">programmatically adding records&lt;/a>
. Want an SSL certificate? Get a wildcard one and then you can apply it to any subdomain you add to your domain.&lt;/p>
&lt;p>If you have a new website you want to publish consider which of the following is better:&lt;/p>
&lt;p>&lt;a href="https://www.example.com/newsite" target="_blank" rel="noopener noreferrer">https://www.example.com/newsite&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://newsite.example.com" target="_blank" rel="noopener noreferrer">https://newsite.example.com&lt;/a>
&lt;/p>
&lt;p>I much prefer the second option, it looks cleaner, there is no potential conflict with the parent site, no subfolder issues between production and development.&lt;/p></description></item><item><title>Creating DNS records programmatically</title><link>https://www.funkysi1701.com/posts/2017/creating-dns-records-programmatically/</link><pubDate>Mon, 16 Oct 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/creating-dns-records-programmatically/</guid><description>&lt;p>DNS is the backbone of the internet. It converts domain names into IP addresses. But how can we do clever things with it?&lt;/p>
&lt;p>Making DNS changes has always been a pain. You have to remember what company you registered your domain name with, then locate the login details for their website, login and fill in some web form and wait for the changes to replicate across the internet.&lt;/p>
&lt;p>There are various websites that assign you a custom subdomain name like name.domain.com, obviously they must do this programmatically, they don’t have a guy following the above process.&lt;/p>
&lt;p>Lets see how we could do this.&lt;/p>
&lt;p>My first thought was to make use of the DNSimple API. &lt;a href="https://developer.dnsimple.com/v2/" target="_blank" rel="noopener noreferrer">https://developer.dnsimple.com/v2/&lt;/a>
The API allows all sort of DNS changes to be made, however this is a paid service so let’s look at other options.&lt;/p>
&lt;p>Azure now has a DNS section. You can go to the portal, add a DNS zone, and then add as many A, CNAME and MX records as you need. This is of course no better than doing it manually.&lt;/p>
&lt;p>Azure offers a &lt;a href="https://docs.microsoft.com/en-us/azure/dns/dns-sdk" target="_blank" rel="noopener noreferrer">SDK&lt;/a>
and an example Visual Studio project. Lets look at how it works.&lt;/p>
&lt;p>First you need to setup some credentials to use your Azure subscription. The easiest way to do this is with powershell.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Login&lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>AzureRmAccount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$sp = New-AzureRmADServicePrincipal &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>DisplayName exampleapp &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>Password &lt;span style="color:#e6db74">&amp;#34;{provide-password}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sleep 20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>New-AzureRmRoleAssignment &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>RoleDefinitionName Contributor &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>ServicePrincipalName $sp.ApplicationId
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a AD Service Principal which has access to your Azure subscription.&lt;/p>
&lt;p>You need to get the following IDs from the Azure portal.&lt;/p>
&lt;p>subscriptionId for your subscription&lt;br>
tenantId or the Azure AD Directory ID&lt;br>
applicationId of the service principal created above&lt;br>
password you entered into the powershell script above&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> serviceCreds = &lt;span style="color:#66d9ef">await&lt;/span> ApplicationTokenProvider.LoginSilentAsync(tenantId, clientId, secret);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> dnsClient = &lt;span style="color:#66d9ef">new&lt;/span> DnsManagementClient(serviceCreds);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnsClient.SubscriptionId = subscriptionId;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSetParams = &lt;span style="color:#66d9ef">new&lt;/span> RecordSet();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.TTL = &lt;span style="color:#ae81ff">3600&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.ARecords = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;ARecord&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.ARecords.Add(&lt;span style="color:#66d9ef">new&lt;/span> ARecord(&lt;span style="color:#e6db74">&amp;#34;1.2.3.4&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSet = &lt;span style="color:#66d9ef">await&lt;/span> dnsClient.RecordSets.CreateOrUpdateAsync(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A, recordSetParams);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above code connects to Azure and creates an A record for test.funkysi1701.com that points at the ip address 1.2.3.4.&lt;/p>
&lt;p>Other DNS records can be created in a similar way.&lt;/p>
&lt;p>The above example creates a new RecordSet but you can use the following to delete or get existing records.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSet = dnsClient.RecordSets.Get(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnsClient.RecordSets.Delete(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I have found out that I can write a console app to edit my DNS records I need to change the nameservers for all my domains so I can take advantage of this new feature.&lt;/p></description></item></channel></rss>