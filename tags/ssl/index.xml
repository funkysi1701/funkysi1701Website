<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SSL on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/ssl/</link><description>Recent content in SSL on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 03 Mar 2020 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/ssl/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing for expiring SSL Certificates</title><link>https://www.funkysi1701.com/posts/2020/testing-for-expiring-ssl-certificates/</link><pubDate>Tue, 03 Mar 2020 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2020/testing-for-expiring-ssl-certificates/</guid><description>&lt;p>Let&amp;rsquo;s Encrypt is amazing, you can easily add SSL certificates to any website and automate the renewal process. I have talked &lt;a href="https://www.funkysi1701.com/posts/let-s-encrypt-is-awesome-3f5j/">before&lt;/a>
about how impressive it is.&lt;/p>
&lt;p>Once you start adding SSL certificates to your production sites however you may want to check when they expire so you don&amp;rsquo;t get caught out. You can always open your site in your favourite browser and view the certificate information and expiry date.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="SSL Cert" src="https://dev-to-uploads.s3.amazonaws.com/i/jb78re4fmm1ofx81f3mu.JPG" loading="lazy"
/>
However there is a way to automate this check.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">[Fact]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> IsSSLExpiring()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> handler = &lt;span style="color:#66d9ef">new&lt;/span> HttpClientHandler
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ServerCertificateCustomValidationCallback = CustomCallback
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> client = &lt;span style="color:#66d9ef">new&lt;/span> HttpClient(handler);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpResponseMessage response = client.GetAsync(&lt;span style="color:#e6db74">&amp;#34;https://www.example.com&amp;#34;&lt;/span>).GetAwaiter().GetResult();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assert.True(response.IsSuccessStatusCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> CustomCallback(HttpRequestMessage arg1, X509Certificate2 arg2, X509Chain arg3, SslPolicyErrors arg4)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> now = DateTime.UtcNow;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> expire = arg2.NotAfter;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> diff = (expire - now).TotalDays;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assert.InRange(diff, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">1000&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> arg4 == SslPolicyErrors.None;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This code gets the SSL expiry date from &lt;a href="https://www.example.com" target="_blank" rel="noopener noreferrer">https://www.example.com&lt;/a>
and will fail the xunit test if the expiry date is less than 30 days in the future. I then schedule my tests to run regularly on all my environments with a Let&amp;rsquo;s Encrypt Certificate and this gives me advanced warning if a SSL certificate is about to expire.&lt;/p>
&lt;p>The Assert.InRange(diff, 30, 1000) line will fail the test if the expiry date is less than 30 days or greater than 1000, but as the default expiry for Let&amp;rsquo;s Encrypt certificates is three months it will never be greater than 1000 days even with a freshly installed certificate. These values can be tweaked to suit your use case, however 30 days is enough time for me to investigate what is happening.&lt;/p>
&lt;p>To execute my tests I use a scheduled build in Azure DevOps, but anything that regularly can run your tests will do the job.&lt;/p>
&lt;p>The code above is just a simple example to get your started for my purposes I have put all my URLs into config files and just pass these into my tests, so I don&amp;rsquo;t need a custom test for every different URL.&lt;/p></description></item><item><title>How good is your SSL?</title><link>https://www.funkysi1701.com/posts/2017/how-good-is-your-ssl/</link><pubDate>Mon, 17 Jul 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/how-good-is-your-ssl/</guid><description>&lt;p>&lt;img class="img-fluid" alt="Troy Hunt SSL expert" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/07/Troy-Hunt-Profile-Photo.jpg?resize=150%2C150&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I recently watched Troy Huntâ€™s &lt;a href="https://www.pluralsight.com/courses/https-every-developer-must-know" target="_blank" rel="noopener noreferrer">What Every Developer Must Know about HTTPS&lt;/a>
course on Pluralsight. Its very good and really make you think about SSL certificates and how to correctly implement them.&lt;/p>
&lt;p>One thing in particular Troy mentions is the website &lt;a href="https://www.ssllabs.com/ssltest/index.html" target="_blank" rel="noopener noreferrer">SSL Labs&lt;/a>
. This website allows you to test a websites implementation of SSL. A grade of A to F is assigned with A being the best and F being the worst.&lt;/p>
&lt;p>Troy Hunt has a &lt;a href="https://www.troyhunt.com/do-you-really-want-bank-grade-security/" target="_blank" rel="noopener noreferrer">blog&lt;/a>
post where he discusses how Australian Banks score. Lets look at a few UK banks.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Bank&lt;/strong>&lt;/th>
&lt;th>&lt;strong>SSL Certificate&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Grade&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Home Page Under SSL&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>HSBC&lt;/td>
&lt;td>&lt;a href="https://www.hsbc.co.uk" target="_blank" rel="noopener noreferrer">www.hsbc.co.uk&lt;/a>
&lt;/td>
&lt;td>B&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Nationwide&lt;/td>
&lt;td>onlinebanking.nationwide.co.uk&lt;/td>
&lt;td>C&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NatWest&lt;/td>
&lt;td>&lt;a href="https://www.nwolb.com" target="_blank" rel="noopener noreferrer">www.nwolb.com&lt;/a>
&lt;/td>
&lt;td>C&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Barclaycard&lt;/td>
&lt;td>&lt;a href="https://www.barclaycard.co.uk" target="_blank" rel="noopener noreferrer">www.barclaycard.co.uk&lt;/a>
&lt;/td>
&lt;td>A-&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Barclays&lt;/td>
&lt;td>bank.barclays.co.uk&lt;/td>
&lt;td>A-&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lloyds Bank&lt;/td>
&lt;td>&lt;a href="https://www.lloydsbank.com" target="_blank" rel="noopener noreferrer">www.lloydsbank.com&lt;/a>
&lt;/td>
&lt;td>A&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Royal Bank of Scotland&lt;/td>
&lt;td>&lt;a href="https://www.rbsdigital.com" target="_blank" rel="noopener noreferrer">www.rbsdigital.com&lt;/a>
&lt;/td>
&lt;td>C&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Standard Chartered&lt;/td>
&lt;td>&lt;a href="https://www.sc.com" target="_blank" rel="noopener noreferrer">www.sc.com&lt;/a>
&lt;/td>
&lt;td>C&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Virgin Money&lt;/td>
&lt;td>uk.virginmoney.com&lt;/td>
&lt;td>A+&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Santander&lt;/td>
&lt;td>retail.santander.co.uk&lt;/td>
&lt;td>A-&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>On the whole the ratings are all quite good with all being in the range A-C. However I have also indicated if they have SSL on the home page. Only 4 out 10 website listed above have the home page load under SSL.&lt;/p>
&lt;p>Why does this matter as long as the login is under SSL? Any page that loads over http is potentially at risk from a man in the middle attack. A fake malicious home page could contain links to any page and trick users into entering personal information.&lt;/p>
&lt;p>If you want to test a bank or other website not listed here. Go to &lt;a href="https://www.ssllabs.com/ssltest/index.html" target="_blank" rel="noopener noreferrer">https://www.ssllabs.com/ssltest/index.html&lt;/a>
and type the address that is on the SSL certificate in to the search. The good news is that this site scores a A.&lt;/p>
&lt;p>Troy mentions that there is rapid growth in the adoption of SSL, there is also rapid growth in improving ratings. One of these banks went from a C to an A during the course of writing this blog.&lt;/p></description></item></channel></rss>