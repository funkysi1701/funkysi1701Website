<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/database/</link><description>Recent content in Database on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 17 Dec 2017 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started with Azure Table Storage</title><link>https://www.funkysi1701.com/posts/2017/azure-table-storage/</link><pubDate>Sun, 17 Dec 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/azure-table-storage/</guid><description>&lt;p>Azure Table storage is cheap way to store data, however it has some drawbacks that you should be aware of.&lt;/p>
&lt;p>Azure Table storage is a simple way to store NoSQL data with key/attribute pairs. I am very familiar with storing data in SQL databases and would still choose SQL over Table storage, however Table storage is significantly cheaper so could be worth investigating depending on your project.&lt;/p>
&lt;p>&lt;a href="https://www.troyhunt.com/working-with-154-million-records-on/" target="_blank" rel="noopener noreferrer">Troy Hunt&lt;/a>
makes use of Table storage for his Have I been pwned? website so there are projects out there that make use of it to great affect.&lt;/p>
&lt;p>To work with Table storage you need to use a nuget package &lt;strong>WindowsAzure.Storage&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Install-Package WindowsAzure.Storage&lt;/strong>&lt;/p>
&lt;p>To load data from a Table in Azure Table storage I use the following code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>CloudStorageAccount storageAccount = CloudStorageAccount.Parse(connectionString);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTableClient tableClient = storageAccount.CreateCloudTableClient();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTable table = tableClient.GetTableReference(&lt;span style="color:#e6db74">&amp;#34;tablename&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TableOperation retrieveOperation = TableOperation.Retrieve&amp;lt;Entity&amp;gt;(PartitionKey, Rowkey);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>table.CreateIfNotExists();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TableResult retrievedResult = table.Execute(retrieveOperation);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Example eg = &lt;span style="color:#66d9ef">new&lt;/span> Example();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (retrievedResult.Result != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eg.ID = ((Entity)retrievedResult.Result).Id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eg.Date = ((Entity)retrievedResult.Result).Date;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> eg;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You need to create a class (called Entity in the example above) derived from TableEntity which defines the Partitionkey and Rowkey, plus and other columns you want to store in table storage. The row key and partition key uniquely identify the data in the table, think of this as the primary key of the table if you are used to SQL. This class must also contain a parameterless constructor.&lt;/p>
&lt;p>This is the only way to retrieve data, using the partitionkey and rowkey. If you want to retrieve a specific piece of data you would need to retrieve all rows and then search them for what you need. For me this is not a big problem as I only have 150 rows but if you have millions of rows you may need to think carefully how to use this.&lt;/p>
&lt;p>To save data I use a very similar piece of code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>CloudStorageAccount storageAccount = CloudStorageAccount.Parse(path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTableClient tableClient = storageAccount.CreateCloudTableClient();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTable table = tableClient.GetTableReference(&lt;span style="color:#e6db74">&amp;#34;tablename&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Entity post = &lt;span style="color:#66d9ef">new&lt;/span> Entity(ID, DateTime.Now);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TableOperation insertOperation = TableOperation.InsertOrReplace(post);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>table.CreateIfNotExists();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>table.Execute(insertOperation);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I create a Entity object and then pass this as a parameter into the InsertOrReplace method.&lt;/p>
&lt;p>To delete data it is also very similar, you create an entity object and pass this as a parameter to the Delete method.&lt;/p>
&lt;p>When debugging my table storage code I found the &lt;a href="https://azure.microsoft.com/en-gb/features/storage-explorer/" target="_blank" rel="noopener noreferrer">Azure Storage Explorer&lt;/a>
very useful for seeing what data actually existed in the table and what might be throwing an error, usually something wrong with my Entity.&lt;/p>
&lt;p>I mentioned earlier that Table Storage was cheaper than SQL Azure. Well for my simple playing about with things I have found my monthly charge of £10+ has been reduced to £1+ If I were to build anything that is more than just me learning about how it works I would probably continue to use SQL but for the cost of learning new tech it is well worth giving table storage a try.&lt;/p></description></item><item><title>SQL with Visual Studio Code</title><link>https://www.funkysi1701.com/posts/2017/sql-with-visual-studio-code/</link><pubDate>Mon, 06 Nov 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/sql-with-visual-studio-code/</guid><description>&lt;p>Writing SQL queries is typically done with SQL Management Studio (SSMS). However this tool is a bit of a beast so let’s look at how you could use Visual Studio Code instead.&lt;/p>
&lt;p>Visual Studio Code is a free text editor but it is so much more than just a text editor. VS Code can be downloaded from &lt;a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">https://code.visualstudio.com/Download&lt;/a>
&lt;/p>
&lt;p>To work with SQL Server download the mssql extension. Press &lt;strong>CTRL+SHIFT+P&lt;/strong> and then Select &lt;strong>Install Extension&lt;/strong> and type &lt;strong>mssql&lt;/strong>.&lt;/p>
&lt;p>Intellisense in Visual Studio Code is brilliant, better than SSMS. Lets look at how to get it all set up.&lt;/p>
&lt;p>Create a new file and set the language type to SQL (Press &lt;strong>CTRL+K,M&lt;/strong> )&lt;/p>
&lt;p>Open the command palette, &lt;strong>CTRL+SHIFT+P&lt;/strong> and type SQL to show the mssql commands. Select the Connect command.&lt;/p>
&lt;p>Then select &lt;strong>Create Connection Profile&lt;/strong> , this creates a profile to connect with your SQL Server. Follow the prompts to get it all setup.&lt;/p>
&lt;p>Look in the bottom right corner of the status bar and you should see you are connected.&lt;/p>
&lt;p>Now if you type sql you will see a long list of SQL code snippets that you could use.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/11/vscode-sql-snippets.png?resize=662%2C348&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Choose a snippet to create, and edit it as required. When you are happy press **CTRL+SHIFT+E ** to execute.&lt;/p>
&lt;p>This is basically all there is to it. However this is an incredibly powerful way of working, the intellisense instantly tells you what database objects you can use in your query and there is a wealth of different snippets you can use.&lt;/p>
&lt;p>When returning data you get a similar view to SSMS but you can save as Excel, CSV or JSON.&lt;/p>
&lt;p>SSMS is a very graphical way of doing things, you can double click a table and see its columns or indexes. VS Code relies on TSQL commands but you have access to exactly the same information.&lt;/p>
&lt;p>For more information about VS Code and the mssql extension check out &lt;a href="https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-develop-use-vscode" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-develop-use-vscode&lt;/a>
&lt;/p></description></item><item><title>Clever things with MS Access</title><link>https://www.funkysi1701.com/posts/2016/clever-things-ms-access/</link><pubDate>Thu, 07 Jul 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/clever-things-ms-access/</guid><description>&lt;p>I hate MS Access and especially developing with it as you can’t do any thing clever with it.&lt;/p>
&lt;p>&lt;strong>Wrong, Wrong, Wrong!&lt;/strong>&lt;/p>
&lt;p>There are a few clever things I have been able to script to make developing with it passable. I still would rather use Visual Studio but this improves the experience a fair bit.&lt;/p>
&lt;h2 id="source-control">Source Control&lt;a class="anchor ms-1" href="#source-control">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Access files are binary (I use the ADP/ADE file format but I assume other Access file formats have the same problem) and so you can’t diff them to see what has changed. This is bad.&lt;/p>
&lt;p>However there is a solution to this. A tool called Access SVN and can be downloaded from &lt;a href="https://accesssvn.codeplex.com/" target="_blank" rel="noopener noreferrer">https://accesssvn.codeplex.com/&lt;/a>
, this gives you a way to extract to text files all the forms and reports that are in Access. Before every commit I would manually run this tool on my ADP file and extract to text files, then I would commit these text files to source control and could easily see what had changed in each commit.&lt;/p>
&lt;p>Despite the name Access SVN, the tool is not tied to subversion, you can use any source control system, I use git.&lt;/p>
&lt;p>Also included in this tool is a way to do this with the command line, so you can make this a build step on your build server. I have not used this extensively yet, but the syntax is fairly simple&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>asvn.exe e &lt;span style="color:#e6db74">&amp;#34;path to Access file&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;path to txt files&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*.*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The filter at the end &lt;em>.&lt;/em> allows you to specify what to extract so you could extract all forms/reports beginning with D with &amp;ldquo;&lt;em>.D&lt;/em>&amp;rdquo;. I had trouble using &lt;em>.&lt;/em> because the names of my forms/reports contain characters not allowed in a windows file name. I am sure there is a way round this but I haven’t had chance to look into it further yet.&lt;/p>
&lt;h2 id="testing-ms-access">Testing MS Access&lt;a class="anchor ms-1" href="#testing-ms-access">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Surely testing is not possible with MS Access? I would have agreed with that statement the other day until I found a neat way of testing if a feature is enabled.&lt;/p>
&lt;p>Firstly a bit of background. I develop using MS Access 2003 because the design view is far easier to use, however because it is out of support all my users use MS Access 2010. MS Access 2010 has a feature called Tabbed Documents which allows all forms and reports to open in new tabs so you can easily switch between them. This feature can only be enabled in MS Access 2010 and has no effect if opening with MS Access 2003.&lt;/p>
&lt;p>If you use Access SVN on your Access file with tabbed documents turned on and off you will see UseMDIMode: 0 and UseMDIMode: 1 show up in the Database properties file. UseMDIMode: 0 means that tabbed documents is turned on.&lt;/p>
&lt;p>In powershell I can now write a test to see if UseMDIMode: 0 can be found in the database properties file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Get-Content &lt;span style="color:#e6db74">&amp;#34;General\Database properties.dbp.txt&amp;#34;&lt;/span> | Select-String &lt;span style="color:#e6db74">&amp;#34;UseMDIMode: 0&amp;#34;&lt;/span> -quiet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the test passes True will be returned, if it fails null will be returned.&lt;/p>
&lt;p>On my build server I scripted the extraction of Database properties.dbp.txt from the ADP file with asvn.exe before running this test. While not strictly needed as Database properties.dbp.txt should be in source control, it is possible that someone could forget to extract the text files from the ADP, with this step you are always testing what is enabled in the binary file.&lt;/p>
&lt;h2 id="ms-access-connection-strings">MS Access Connection Strings&lt;a class="anchor ms-1" href="#ms-access-connection-strings">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>While developing with MS Access I often swap the database connection to point to my local machine or a build server. I always try and remember to only ever commit with this set to the live database to avoid obvious problems.&lt;/p>
&lt;p>The other day I found on &lt;a href="https://stackoverflow.com/questions/16411430/change-access-server-connection-from-command-line" target="_blank" rel="noopener noreferrer">stackoverflow&lt;/a>
a way to script this. I love this! I can include this step in my deployment process and it will overwrite what ever the connection string is in source control with what your production environment needs.&lt;/p>
&lt;p>All you need to run this step is, (note it is spaces between the parameters not commas)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cscript connect.vbs Project.adp &lt;span style="color:#e6db74">&amp;#34;ServerName&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;DatabaseName&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The contents of connect.vbs can be found on the &lt;a href="https://stackoverflow.com/questions/16411430/change-access-server-connection-from-command-line" target="_blank" rel="noopener noreferrer">stackoverflow article&lt;/a>
. It is also possible to pass username and password if your environment requires this.&lt;/p>
&lt;h2 id="compiled-ade">Compiled ADE&lt;a class="anchor ms-1" href="#compiled-ade">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>The last clever thing I do with MS Access is convert my ADP file into the compiled ADE version. To manually do this there is an option in the tools menu.&lt;/p>
&lt;p>To automate this I run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cscript createADE.vbs &lt;span style="color:#e6db74">&amp;#34;path to ADP&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;path to ADE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The contents of createADE came from this &lt;a href="https://social.msdn.microsoft.com/Forums/office/en-US/01fd48a9-258e-4405-86f1-adfb2f1057ee/create-an-access-2007-ade-from-a-adp-via-commandline?forum=accessdev" target="_blank" rel="noopener noreferrer">forum post&lt;/a>
, the only change I made was to comment out some of the echo statements so it would run silently as part of my build process. It should be noted that cscript and wscript are almost identical and either will run these scripts however in a command line environment cscript is preferable, and wscript should be used in a windows environment.&lt;/p>
&lt;p>I am quite surprised at how much I have managed to do in terms of scripting the build and deployment process for MS Access. I still don’t like developing with Access but this has definitely improved things.&lt;/p></description></item><item><title>SQL Transaction Log Backups</title><link>https://www.funkysi1701.com/posts/2016/transaction-log-backups/</link><pubDate>Thu, 04 Feb 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/transaction-log-backups/</guid><description>&lt;p>Like many DBAs I spend a lot of time maintaining my SQL Server backups.&lt;/p>
&lt;p>From SQL Server I maintain both full backups and transaction log backups. I have often restored my full backups but until recently I have never restored a transaction log backup. All backup strategy’s are only as good as the last time you tested the restore process.&lt;/p>
&lt;h2 id="so-what-is-a-transaction-log-backup">So what is a transaction log backup?&lt;a class="anchor ms-1" href="#so-what-is-a-transaction-log-backup">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>A transaction log backup contains all the transaction log records generated since the last full backup and is used to allow the database to be recovered to a specific point in time (usually the time right before a disaster strikes). Since these are incremental, if you want to restore the database to a particular point in time, you need to have all the transaction log records necessary to replay database changes up to that point in time.&lt;/p>
&lt;h2 id="how-to-do-the-restore">How to do the restore.&lt;a class="anchor ms-1" href="#how-to-do-the-restore">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>First right click on Databases in SQL Management Studio and select restore database. You should then get a screen similar to this.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/02/restore1.jpg?resize=768%2C640&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>In source click the &amp;hellip; to allow you to select your backup files.&lt;/p>
&lt;p>Now normally I have only ever selected one file here, the *.bak file. Instead select the *.bak and all the *.trn files as well. After SQL Server has chugged for a few minutes (time will depend on number of transaction files and server/disk speed etc) the restore plan section should fill up with files.&lt;/p>
&lt;p>In the destination database box, type in the name of the database you want to restore. I recommend using a different name to avoid overwriting the original database, appending Test or a datetime to the name is what I usually do.&lt;/p>
&lt;p>On my test server I need to untick the take tail-log backups option off the options screen before I can execute the restore.&lt;/p>
&lt;p>Now you can either check the tick boxes in the restore plan section or (more fun) click the timeline button to select at what point in time you want to restore to.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/02/restore2.jpg?resize=768%2C457&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>You can either select the point in time with your mouse or specify the exact point in the time textbox. Alternatively you can just select the most recent point, probably the most likely option when disaster strikes.&lt;/p>
&lt;p>Now that I have tried doing this on my test server I feel much more confident that when disaster does strike I can get things restored quickly and painlessly.&lt;/p>
&lt;h2 id="how-often-should-you-run-transaction-backups">How often should you run transaction backups?&lt;a class="anchor ms-1" href="#how-often-should-you-run-transaction-backups">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>The answer to this question depends on how critical your data is. Until very recently I ran mine ever 15 minutes, I have increased this to every 5 minutes, but I have seen recommendations of running it &lt;a href="https://www.brentozar.com/archive/2014/02/back-transaction-logs-every-minute-yes-really/" target="_blank" rel="noopener noreferrer">every minute&lt;/a>
. The more critical your data the more often you should run them.&lt;/p></description></item><item><title>SQL Server Management Studio</title><link>https://www.funkysi1701.com/posts/2015/sql-server-management-studio/</link><pubDate>Thu, 03 Dec 2015 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2015/sql-server-management-studio/</guid><description>&lt;p>I use SQL Server Management Studio all the time for writing queries, getting data and general SQL development.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="SQL Server Management Studio" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2015/12/sql-server-2012-management-studio-splash-screen.png?resize=529%2C360" loading="lazy"
/>
&lt;/p>
&lt;p>I have enjoyed seeing the improvements that each new version of SQL Server Management Studio (SSMS) introduced. One great improvement was intellisense.&lt;/p>
&lt;p>This feature saves typing and reduces errors by automatically suggesting tables, column names or other database objects.&lt;/p>
&lt;p>A common query that I get asked to write is provide a spreadsheet that gives the information that satisfies certain criteria. This is easy to do in SSMS, you can write the query, click execute and the rows that satisfy the criteria are displayed. These rows can then be easily copy/pasted into Excel or other spreadsheets.&lt;/p>
&lt;p>A common data item that gets stored in databases is addresses and addresses often contain line breaks to make the data display better. In the earlier versions of SSMS, when you copied and pasted these line breaks were ignored and the data displayed the same in SSMS as it did in Excel. However in the more recent version, theses line breaks got copied across breaking your spreadsheet and making it hard to see what data corresponded with what.&lt;/p>
&lt;p>Now I don’t know if this should be described as introducing a bug or fixing one. I can easily argue both sides. If your data contains a line break and you copy this data it should include the line break in the destination, but if it does that it displays badly in Excel.&lt;/p>
&lt;p>The fix I have been using until recently is to use the following TSQL command in my queries.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#66d9ef">REPLACE&lt;/span>(&lt;span style="color:#66d9ef">REPLACE&lt;/span>(&lt;span style="color:#f92672">@&lt;/span>str, CHAR(&lt;span style="color:#ae81ff">13&lt;/span>), &lt;span style="color:#e6db74">&amp;#34;), CHAR(10), &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command replaces any line breaks with an empty string. Both Char(10) and Char(13) are needed because you can have different types of line breaks. This is great if you are writing the script from scratch but isn’t great if your are running a stored procedure or your query has a lot of columns.&lt;/p>
&lt;p>The answer to this is to use Visual Studio to run your SQL query. In Visual Studio you can write and run queries via Server Explorer and the results produced don’t contain line breaks. I have only just discovered this solution, but so far it has worked and is very easy to do, plus as I do most of my development in Visual Studio anyway it saves me having to open SSMS to test my queries.&lt;/p></description></item><item><title>My Love/Hate Relationship with Microsoft Access</title><link>https://www.funkysi1701.com/posts/2015/microsoft-access/</link><pubDate>Fri, 24 Jul 2015 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2015/microsoft-access/</guid><description>&lt;p>For historical reasons I use Microsoft Access as the front-end for all my line of business databases.&lt;/p>
&lt;p>Access allows you to create an ADP file that can connect to your SQL Server database. However Office has dropped support for this, so the last version of office that I can use is Office 2010.&lt;/p>
&lt;p>Before I start hating on Access there are some good things about the platform. Users with very little knowledge can create a database fairly quickly. Development time is also fairly low as it doesn’t take long to create a new form, and add a few buttons which open different reports.&lt;/p>
&lt;p>For the last 5 years or so I have built a range of different forms in Access, (and even if I do say so myself), I have got quite good at creating forms that users can be more productive with. Access has the concept of a subform which is a form embedded in a form, each form can be connected to a different query and can be connected to each other so it is relatively easy to create something quite powerful.&lt;/p>
&lt;p>Access report are an easy way to create professional looking reports that can be sent out to clients, or used by management and they also have the concept of subreports, (same as subforms but embedded in a report), this means you don’t have to write one query to pull back every piece of data that shows up in a report.&lt;/p>
&lt;p>VBA or Visual Basic for Access allows you easily do things programmatically, like run something if something is selected or a button is clicked. This is not the easiest programming language to work with, however once you have used it for a while you get used to its quirks. My favourite function is IIF, the syntax is fairly simple IIF(expr, truepart, falsepart), if expr evaluates to true the truepart is executed (executed can be as simple as displaying certain text in certain conditions), if it is false the falsepart is executed, and you can also chain them together which I have done to produce something very complex looking.&lt;/p>
&lt;p>Now for the negative side of things. Access creates a binary ADP file, binary files can not be version controlled in git or subversion. This is a big problem as I want to keep track of every change I make. It also means that branching or working with others on big projects is also difficult.&lt;/p>
&lt;p>One work around I have found to this problem is &lt;a href="https://accesssvn.codeplex.com/" target="_blank" rel="noopener noreferrer">AccessSVN&lt;/a>
. This program takes an ADP and creates text files of every form and report. It also can create an ADP from these files as well, however I have had varying success with this feature so I prefer to just create the text files if possible. What I do after I have made a change to the ADP is to run AccessSVN, create text files and commit these to source control. You can then see what controls have been changed or added. It also helps with bugs as I have found that sometimes while testing access will apply a filter to a form, which will break things if deployed, which is very annoying.&lt;/p>
&lt;p>Access can only do what access was designed to do. There are some advanced features that we would like to add to our databases. Things like sending emails or uploading reports to a website. This is not Access fault as it was never designed to be able to do such things but I am often asked about what is possible.&lt;/p>
&lt;p>End of support for Office 2010 is approaching and I have plans to stop using Access but until then I need to keep supporting our existing front ends.&lt;/p></description></item><item><title>To boldly go where no SQL has gone before Part 2</title><link>https://www.funkysi1701.com/posts/2014/to-boldly-go-where-no-sql-has-gone-before-part-2/</link><pubDate>Tue, 21 Oct 2014 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2014/to-boldly-go-where-no-sql-has-gone-before-part-2/</guid><description>&lt;p>Let’s continue looking at a database schema for storing details of every Star Trek Episode. If you are new to databases, a schema is just the design of the structure of the database.&lt;/p>
&lt;p>We have three tables, Episode, EpisodeWriter and Writer. See my last post for more details of these. It has been suggested that a slight change to this structure would enable storage of more of the creative staff.&lt;/p>
&lt;p>Lets rename Writer and call it Credit, and rename EpisodeWriter and call it EpisodeCredit. Now any creative staff member involved in an episode can be stored in the Credit table. Lets alter EpisodeCredit and add an extra column called CreditType. CreditType is just a text field that stores the role that creative person had on that episode, it can be anything from Director, Writer, Actor, Science Consultant etc.&lt;/p>
&lt;p>We now have the ability to store information relating to the episode in the episode table and any creative people in the credit table. What else can we add to the database? How about a table that can be used to record when an episode was last watched. I am probably weird but sometimes I want to watch a Star Trek episode that I like but I haven’t watched in ages.&lt;/p>
&lt;p>The last watched table is really simple and just have a datetime field and episodeId. This can be further expanded to have a userId field if you wanted to keep track of what episodes your friends had been watching.&lt;/p>
&lt;p>Another idea could be to tag episodes with certain themes or topics like Klingon episodes or meaning of life episodes or Kirk talks a computer to death episodes. Again this is fairly simple table containing TagName and EpisodeId.&lt;/p></description></item><item><title>To boldly go where no SQL has gone before</title><link>https://www.funkysi1701.com/posts/2014/to-boldly-go-where-no-sql-has-gone-before/</link><pubDate>Sun, 12 Oct 2014 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2014/to-boldly-go-where-no-sql-has-gone-before/</guid><description>&lt;p>My last post proved quite popular so I am wondering if I can combine a post about IT and Star Trek.&lt;/p>
&lt;p>Years ago I used to have lists of Star Trek episodes, which included such information like original air date, production number, episode title and brief description.&lt;/p>
&lt;p>One thing that was hard to keep track of was how many episodes were written by a specific person. This is because episodes are written by multiple people. A column called writer would then need to contain multiple people, another option would be to have columns called writer1, writer2 etc. This wouldn’t help either as you wouldn’t know which column a specific writer had been saved in.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2014/10/manytomany.jpg?w=559&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>The relationship between writer and episode is known as a many to many relationship. An episode can have many writers and a writer can have written many episodes. To achieve this structure in a SQL database you will need three database tables as it is not possible to create a many to many join between two tables. The first table will contain all the episodes, the second table will contain all the writers, the third table known as a junction table, will contain the relationship between the two.&lt;/p>
&lt;p>Let’s do an example so we can see how this would work. Gene Roddenberry creator of Star Trek wrote the pilot episode ‘The Cage’. So Gene would be added to the writers table with an id of 1 and The Cage would be added to the episode table with an id of 1. In the junction table, it has two columns episode and writer, so we would enter 1 and 1 into these columns.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> Episode e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Join&lt;/span> EpisodeWriter ew &lt;span style="color:#66d9ef">on&lt;/span> e.id &lt;span style="color:#f92672">=&lt;/span> ew.EpisodeId
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Join&lt;/span> Writer w &lt;span style="color:#66d9ef">on&lt;/span> w.id &lt;span style="color:#f92672">=&lt;/span> ew.WriterId
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But if Gene Coon and Gene Roddenberry had writing credits on The Cage we would need to add Gene Coon to the writing table and add an extra entry to the episodewriter table.&lt;/p>
&lt;p>I am going to do more posts based on this as I expand the database structure to include other information, I may go on to create stored procedures for bringing back certain information or I may use this as an example to talk about coding a user interface.&lt;/p></description></item></channel></rss>