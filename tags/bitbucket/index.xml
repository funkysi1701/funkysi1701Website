<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bitbucket on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/bitbucket/</link><description>Recent content in Bitbucket on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 25 Jul 2022 18:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/bitbucket/index.xml" rel="self" type="application/rss+xml"/><item><title>A brief history of Source Control</title><link>https://www.funkysi1701.com/posts/2022/a-brief-history-of-source-control/</link><pubDate>Mon, 25 Jul 2022 18:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/a-brief-history-of-source-control/</guid><description>&lt;p>I have been thinking back to when I started using source control and some of the different tools I have used over the years.&lt;/p>
&lt;p>When I was learning to code it was some time after I had learned the basics that I learnt about source control. Back when I started writing webpages I would have a folder containing all my html, css, images etc and I would FTP these up to my web server. If I made a change to a file I would reupload the file I changed, or reupload all my files to make sure I didn&amp;rsquo;t miss anything.&lt;/p>
&lt;p>It was sometime later that I learnt about source control. I can&amp;rsquo;t remember exactly when, but I suspect it was after I had used it at work. (between 2006 and 2010 as a best guess, my oldest repo says it is 12 years old!)&lt;/p>
&lt;p>Source control (or version control) is the practice of tracking and managing changes to code. These tools provide a running history of code development and help to resolve conflicts when merging.&lt;/p>
&lt;img src="https://www.funkysi1701.com/images/svn.jpg" width="400px" align="left" />
&lt;p>The first source control tool I remember using was subversion. The windows client for this was called &lt;a href="https://tortoisesvn.net/downloads.html" target="_blank" rel="noopener noreferrer">TortoiseSVN&lt;/a>
and is still available today. I know this as my current job has some legacy code which still uses it.&lt;/p>
&lt;p>Back then, to use Subversion you needed to set up a linux server with subversion on it, and you would then connect over your LAN to it from your development machine. This was before the days of github, where everything was hosted on a SaaS service somewhere. I do not remember the process of getting everything setup, but with it being linux, there was no doubt a load of config files to edit, and different dependencies to install.&lt;/p>
&lt;p>Over the years I installed various web interfaces to allow &amp;ldquo;&lt;em>browsing&lt;/em>&amp;rdquo; of source code, some even had bug trackers built in. The ones I can remember are &lt;a href="https://trac.edgewall.org/" target="_blank" rel="noopener noreferrer">Trac&lt;/a>
and &lt;a href="https://www.redmine.org/" target="_blank" rel="noopener noreferrer">Redmine&lt;/a>
. Both look to still be available and you can probably install them if you want to remember way back when.&lt;/p>
&lt;img src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/03/github-octocat.png?resize=300%2C158&amp;ssl=1" width="400px" align="right" />
&lt;p>The first hosted source control tool I remember using was &lt;a href="https://bitbucket.org/product/" target="_blank" rel="noopener noreferrer">bitbucket&lt;/a>
and this as far as I can tell has only ever supported git. So I am guessing I imported my subversion repos into git ones at this point. The reason for bitbucket was chosen was it allowed private repositories for free, at that point github was probably available but only provided public repositories.&lt;/p>
&lt;p>After bitbucket the git repos where moved to Azure DevOps or Visual Studio Team Services as it was called back then. This move was mainly to take advantage of the builds and releases feature and to decommission some aging build servers.&lt;/p>
&lt;img src="https://www.funkysi1701.com/images/azuredevops.png" align="left" width="400px" />
&lt;p>This brings me to today where I have a mix of public repos on github and private repos on Azure DevOps. For building my code I use a mix of github actions and Azure Pipelines. As Microsoft own both services now, there is a fair amount of crossover between the two services, however it is far from certain which service is the future.&lt;/p>
&lt;p>Wow, my code has moved around a lot over the years. From no source control, to subversion, to git, to Bitbucket to Azure DevOps!&lt;/p></description></item><item><title>Github Vs Bitbucket Vs Visual Studio Team Services</title><link>https://www.funkysi1701.com/posts/2017/github-vs-bitbucket-vs-vsts/</link><pubDate>Mon, 06 Mar 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/github-vs-bitbucket-vs-vsts/</guid><description>&lt;p>As a developer using source control and git is bread and butter of what we do. Github is probably the most popular and widely known hosting service for source control but I have also used Bitbucket and Visual Studio Team Services. Lets have a look at each one and what they offer. Note while I have included prices I have only tried out the free versions.&lt;/p>
&lt;h3 id="github">Github&lt;a class="anchor ms-1" href="#github">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/03/github-octocat.png?resize=300%2C158&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;ul>
&lt;li>URL: &lt;a href="https://github.com/" target="_blank" rel="noopener noreferrer">https://github.com/&lt;/a>
&lt;/li>
&lt;li>Private Repositories: Not Available for free&lt;/li>
&lt;li>Public Repositories: Unlimited&lt;/li>
&lt;li>Team Size: Unlimited&lt;/li>
&lt;li>Prices: $7 per month for unlimited private repositories, $25 per month for 5 users then $9 per month per user&lt;/li>
&lt;/ul>
&lt;p>This is probably the most widely used service for hosting code. Over 13 million repositories of code. This is an ideal solution if you want your code to be publicly viewable, but take care not to publish passwords, private keys or your companies trade secrets. Every developer should have a Github account for displaying bits of code they are proud of.&lt;/p>
&lt;p>There are a number of externally built APIs that link into Github for doing extra features, like building, code coverage etc&lt;/p>
&lt;h3 id="bitbucket">Bitbucket&lt;a class="anchor ms-1" href="#bitbucket">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/03/d8TRzzL.png?resize=150%2C150&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;ul>
&lt;li>URL: &lt;a href="https://bitbucket.org/" target="_blank" rel="noopener noreferrer">https://bitbucket.org/&lt;/a>
&lt;/li>
&lt;li>Private Repositories: Unlimited&lt;/li>
&lt;li>Public Repositories: Unlimited&lt;/li>
&lt;li>Team Size: Less than 5&lt;/li>
&lt;li>Prices: $10 per month for 10 Users, $100 per month for 100 Users, $200 per month for Unlimited Users&lt;/li>
&lt;/ul>
&lt;p>At my last job we used Bitbucket extensively for all our projects. All the code was private so only the team could access it, however before I left we were approaching the 5 user limit (but looking at these prices cost seems very reasonable)&lt;/p>
&lt;h3 id="visual-studio-team-services">Visual Studio Team Services&lt;a class="anchor ms-1" href="#visual-studio-team-services">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/11/Visual-Studio-Team-Services.png?resize=300%2C136&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;ul>
&lt;li>URL: &lt;a href="https://www.visualstudio.com/team-services/" target="_blank" rel="noopener noreferrer">https://www.visualstudio.com/team-services/&lt;/a>
&lt;/li>
&lt;li>Private Repositories: Unlimited&lt;/li>
&lt;li>Public Repositories: Not Available&lt;/li>
&lt;li>Team Size: Less than 5&lt;/li>
&lt;li>Prices: $30 per month for 10 users, and other features paid for via Azure Invoices&lt;/li>
&lt;/ul>
&lt;p>Visual Studio Team Services or VSTS is Microsoftâ€™s version control solution and I have only just started using it, however what I have seen I like. There are lots of options for building your code so VSTS is more than just hosting your code it is verging on a Continuous Integration/Delivery solution. Being a Microsoft product there are numerous links to Azure and it is easy to deploy stuff to that platform.&lt;/p>
&lt;p>All three have options for tracking issues but VSTS have options to add Stakeholder users which would allow none developers to add and keep track of issues and progress with them.&lt;/p>
&lt;p>If I want to run tests, look at code coverage VSTS is probably the solution I would go for, if I want something that is public I would go for Github. What do you think which of these is your favourite?&lt;/p></description></item></channel></rss>