<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PwnedPass on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/pwnedpass/</link><description>Recent content in PwnedPass on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 23 Jan 2019 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/pwnedpass/index.xml" rel="self" type="application/rss+xml"/><item><title>Pwned Pass Update</title><link>https://www.funkysi1701.com/posts/2019/pwned-pass-update/</link><pubDate>Wed, 23 Jan 2019 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2019/pwned-pass-update/</guid><description>&lt;p>Its been a while since I first released Pwned Pass so lets have a look at where we are now.&lt;/p>
&lt;p>We are very close to 500 Downloads from &lt;a href="https://play.google.com/store/apps/details?id=pwnedpasswords.pwnedpasswords" target="_blank" rel="noopener noreferrer">Google Play&lt;/a>
and we have recently smashed past 100 active installs, peaking at 116 and even now we are still over 100. I have had 9 reviews (6 x 5*, 2 x 1 * and a 4 *) which averages out at 4 *
&lt;img class="img-fluid" alt="Alt Text" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/01/image.png?w=662&amp;amp;ssl=1" loading="lazy"
/>
Over Christmas I released a UWP version that can be found in the &lt;a href="https://www.microsoft.com/store/apps/9NM2WHNZTNLT" target="_blank" rel="noopener noreferrer">Microsoft Store&lt;/a>
. This has currently had 9 downloads and even had a download to windows mobile (someone out there still likes the platform!)
&lt;img class="img-fluid" alt="Alt Text" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/01/image-1.png?w=662&amp;amp;ssl=1" loading="lazy"
/>
I have a fairly smooth deployment process using Azure DevOps. After every check in of code a build runs which compiles the UWP and Android versions. The build also increments the version numbers that is required to deploy to either of the app stores.&lt;/p>
&lt;p>Every successful build of the master branch will kick off a release to the Beta track of Google Play. If I am happy I then release to 10% of the Production track, which can then be increased to 100% (or halted). The release to Microsoft Store happens after the Beta track of Google Play. Only reason for this order is that there isn’t a beta area for UWP apps so I want to quickly test change on android before rolling out for windows.&lt;/p>
&lt;p>All these steps require confirmation by me before proceeding and often don’t get further than the beta track.&lt;/p>
&lt;p>A further development is that I have open sourced the source code to &lt;a href="">github&lt;/a>
do take a look if you are curious or want to contribute. With the purchase by Microsoft there are easy ways to connect github repositories to Azure DevOps. Once I create a Pull Request in github it creates a build in Azure DevOps and all the build and release steps can happen.&lt;/p>
&lt;p>I am still not 100% sure if I want to keep my bug and issue tracking in github or Azure DevOps as both have features for doing so.&lt;/p>
&lt;p>One future improvement I want to make is to automate the creation of screenshots. When I create a new feature and it gets checked in. I would like to automatically created screenshots of the key pages and submit them to the different app stores. Currently I am not sure if this is possible or how to go about it. I have some ideas to experiment with so we will see what I can do.&lt;/p></description></item><item><title>New version of Pwned Pass</title><link>https://www.funkysi1701.com/posts/2018/new-version-pwned-pass/</link><pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2018/new-version-pwned-pass/</guid><description>&lt;p>&lt;img class="img-fluid" alt="Pwned Pass" src="https://lh3.googleusercontent.com/qZTLiWRfQwS7pT6gExLMTvU1pl8NtTU-kbeoSzD68p1D-EPY3Pg7cz2AN66QJpTTp1c=h900-rw" loading="lazy"
/>
A new version of Pwned Pass is available from &lt;a href="https://play.google.com/store/apps/details?id=pwnedpasswords.pwnedpasswords" target="_blank" rel="noopener noreferrer">Google Play&lt;/a>
.&lt;/p>
&lt;p>A couple of weeks ago &lt;a href="https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2/" target="_blank" rel="noopener noreferrer">Troy Hunt&lt;/a>
released V2 of Pwned Pass onto his &lt;a href="https://haveibeenpwned.com/" target="_blank" rel="noopener noreferrer">haveibeenpwned&lt;/a>
website. There are now over half a billion passwords that have appeared in data breaches for you to search.&lt;/p>
&lt;p>This time Troy has included information about how many times a password has appeared in his data. So “password” returns a value of 3,303,003 so is a really, really bad choice of password to use. However the password “windows 10” has only appeared twice so is much better, however I would still recommend avoiding using it.&lt;/p>
&lt;p>One of the great things about the internet is that on the day of release I was tweeting Troy so I could get my android app updated to take advantage of these new features. I even helped him identify an issue with the documentation on his site. He has also kindly add a link to my app onto his website.&lt;/p>
&lt;p>That conversation and link has lead to a massive increase in app downloads. Before I was going steady on about 14 installs, now I have 86 active installs. I am not sure if this will increase anymore but if you are reading this because you downloaded my app, then thank you.&lt;/p>
&lt;p>My app has four main features:&lt;/p>
&lt;p>Password Check – this allows you to search a password and see if it has appeared in a data breach and also the number of times that password has appeared.&lt;/p>
&lt;p>Email Check – this allows you to search your email address and see which data breach it has been involved in.&lt;/p>
&lt;p>List of Data Breaches – this lists the data breaches from haveibeenpwned.com you can also sort by Date Added, Number of accounts and name.&lt;/p>
&lt;p>Calendar of Breaches – this shows a github like chart of what days breaches are added&lt;/p>
&lt;p>If you like my app do let me know. I have received a few ratings on google play it would be great to get a few more. If you want me to add a feature or have ideas of how I could improve it let me know as well.&lt;/p>
&lt;p>To download take a look at &lt;a href="https://play.google.com/store/apps/details?id=pwnedpasswords.pwnedpasswords" target="_blank" rel="noopener noreferrer">https://play.google.com/store/apps/details?id=pwnedpasswords.pwnedpasswords&lt;/a>
&lt;/p></description></item><item><title>Pwned Pass – Available from the Play Store</title><link>https://www.funkysi1701.com/posts/2017/pwned-pass-available-from-the-play-store/</link><pubDate>Mon, 14 Aug 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/pwned-pass-available-from-the-play-store/</guid><description>&lt;p>Pwned Pass is now available from the &lt;a href="https://play.google.com/store/apps/details?id=pwnedpasswords.pwnedpasswords" target="_blank" rel="noopener noreferrer">Google Play Store&lt;/a>
.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Pwned Pass" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/08/Screenshot_20170813-205152.png?resize=169%2C300&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Pwned Pass is a simple android app that allows you to type in a password and tells you if it has been used in a data breach.&lt;/p>
&lt;p>Troy Hunt of &lt;a href="https://haveibeenpwned.com/" target="_blank" rel="noopener noreferrer">Have I Been Pwned?&lt;/a>
recently added a new API to his website which allows you to search his extensive database of pwned passwords, 306 million of them. I have simply created a Android frontend to this API.&lt;/p>
&lt;p>The API itself takes a SHA1 hash of the password and either returns a HTTP 200 if the password is found or a HTTP 404 if the password does not exist in the HIBP database. For more details of how Troy Hunt created this check out his &lt;a href="https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/" target="_blank" rel="noopener noreferrer">blog post&lt;/a>
.&lt;/p>
&lt;p>My app simply generates a SHA1 hash of anything that is typed in and then passes this to Troy Hunt’s API. I then get the HTTP return code so I know if the password exists or not.&lt;/p>
&lt;p>It should be noted that: &lt;strong>Do not send any password you actively use to a third-party service – even this one!&lt;/strong> I don’t log anything that you type into my app and all I am then doing is passing a SHA1 hash over SSL to HIBP. However you shouldn’t trust my word alone.&lt;/p>
&lt;p>The app itself is written in Visual Studio with Xamarin Forms in a similar fashion to the app I talked about &lt;a href="https://www.funkysi1701.com/posts/android-app-development-and-the-visual-studio-mobile-centre">last week&lt;/a>
.&lt;/p>
&lt;p>As I am using Xamarin Forms there is the potential that I may develop iPhone or UWP versions of this code in the future. With that in mind I have made use of interfaces for the android specific parts of the code.&lt;/p>
&lt;p>I also make use of the &lt;a href="https://www.nuget.org/packages/modernhttpclient/" target="_blank" rel="noopener noreferrer">modernhttpclient&lt;/a>
nuget package due to problems I encountered with httpclient and SSL. This is due to limitations of what libraries are available in mono and what has been implemented, I suspect there are better ways to solve this but that is all part of the fun.&lt;/p>
&lt;p>Please do have a look at Pwned Pass and let me know what you think. Especially if it doesn’t work or throws errors. I would like to spend time making this app as good as I can make it.&lt;/p></description></item></channel></rss>