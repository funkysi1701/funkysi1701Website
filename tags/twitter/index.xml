<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Twitter on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/twitter/</link><description>Recent content in Twitter on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 22 Dec 2020 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/twitter/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Twitter Clone</title><link>https://www.funkysi1701.com/posts-old/building-a-twitter-clone/</link><pubDate>Tue, 22 Dec 2020 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts-old/building-a-twitter-clone/</guid><description>&lt;p>I saw a tweet about building a twitter clone being harder than you would think. So this of course started me thinking how I would go about building something like that.&lt;/p>
&lt;p>Ok so where would I start? First a few assumptions.&lt;/p>
&lt;ol>
&lt;li>Development by a lone developer ie me&lt;/li>
&lt;li>Tech stack will be dotnet and other tech I am familiar with&lt;/li>
&lt;li>Database backend, probably SQL Server but I might use table storage for cost reasons should I try and actually build this. However if I design this well this should be something that could be swapped out as the system grows&lt;/li>
&lt;li>User accounts on the system will be small as I can&amp;rsquo;t imagine anyone ever signing up. Why sign up to a social media platform with no users?&lt;/li>
&lt;/ol>
&lt;h2 id="i-guess-the-next-question-is-what-is-twitter">I guess the next question is what is Twitter?&lt;a class="anchor ms-1" href="#i-guess-the-next-question-is-what-is-twitter">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>A website that allows you to share 280 characters of text with your followers, allows you to follow other users updates and allows other user to follow your updates.&lt;/p>
&lt;p>It also has an API that allow you to do almost everything that you can with the website.&lt;/p>
&lt;p>Then there are of course mobile apps to consider but I am going to assume this is out of scope, however assuming a good enough API then this shouldn&amp;rsquo;t be a problem for future development.&lt;/p>
&lt;h2 id="first-steps">First Steps&lt;a class="anchor ms-1" href="#first-steps">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>To start off with I would concentrate on the API, and then build a web client that makes use of the API.&lt;/p>
&lt;p>So what would my MVP (minimum viable product) be?&lt;/p>
&lt;ol>
&lt;li>User can authenticate with my API to get a token which allows access to other API endpoints&lt;/li>
&lt;li>User can create a tweet&lt;/li>
&lt;li>User can view own tweets&lt;/li>
&lt;li>User can view tweets of another user&lt;/li>
&lt;li>User can view tweets in their timeline&lt;/li>
&lt;li>User can follow/unfollow other users&lt;/li>
&lt;li>User can search for other users&lt;/li>
&lt;li>User can search for keywords in tweets&lt;/li>
&lt;/ol>
&lt;p>I think that is probably sufficient to build my MVP for the API.&lt;/p>
&lt;p>An interesting side note is that I could use the OAuth Twitter authentication to allow users to login to my twitter clone with the real twitter login details. However this makes no sense to me as we are essentially adding a dependency on the real twitter.&lt;/p>
&lt;p>So what would I use for the frontend? I would start off with a Client Side Blazor frontend. Once I had a proof of concept that worked, I would think about styling and adding the UI elements that are familiar to twitter users.&lt;/p>
&lt;p>The beauty of Client Side Blazor is that I can host cheaply in azure storage and distribute around the world via a CDN.&lt;/p>
&lt;p>Due to the high number of times that follower and following count and other stats are queried I would consider storing these in the database and include a regular job to recalculate them so they don&amp;rsquo;t get out of sync with the data.&lt;/p>
&lt;p>Having said all of this I am very tempted to fire up Visual Studio and see how far I get, and what problems I encounter along the way.&lt;/p></description></item><item><title>#005: Twitter Cards</title><link>https://www.funkysi1701.com/2020/005-twitter-cards/</link><pubDate>Sat, 12 Dec 2020 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/2020/005-twitter-cards/</guid><description>&lt;p>It has been a bit of a mad week this week. I joined a new team so lots of time learning what&amp;rsquo;s what and also being pulled in two directions as usual demands come through on top of that.&lt;/p>
&lt;p>My blog runs on Blazor and I have been making use of JavaScript interop to update the html headers and update the page title to match the blog post article. This works great, I load the page and check the headers and they were saying what I wanted.&lt;/p>
&lt;p>The problem was I wanted to add tags for &lt;a href="https://developer.twitter.com/en/docs/twitter-for-websites/cards/guides/getting-started" target="_blank" rel="noopener noreferrer">twitter cards&lt;/a>
This means that when I paste a link to my blog on twitter you get a nice preview and pic of me in the tweet. This was not working at all even though I had the correct headers.&lt;/p>
&lt;p>I eventually figured out that the problem was the fact I was using JavaScript to update my headers after the page had been initially loaded. Twitter was fetching my page before these headers got added and therefore couldn&amp;rsquo;t see the twitter card headers.&lt;/p>
&lt;p>My solution was to use invalid html. Not ideal but it works. I added the required html tags in the body of my page using Blazor/C# instead of using JavaScript to add them into the header. Twitter appears to not be fussy in finding them in the wrong place.&lt;/p>
&lt;p>Twitter provides a validator tool at &lt;a href="https://cards-dev.twitter.com/validator" target="_blank" rel="noopener noreferrer">Twitter Card Validator&lt;/a>
which my website now passes.&lt;/p>
&lt;p>Not much else to say this week, apart from I am missing Visual Studio and C#, I have been mostly using VS Code on Linux and looking at php which isn&amp;rsquo;t as much fun as my usual day job.&lt;/p></description></item></channel></rss>