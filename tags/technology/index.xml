<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Technology on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/technology/</link><description>Recent content in Technology on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 22 Sep 2016 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/technology/index.xml" rel="self" type="application/rss+xml"/><item><title>10 Ways to Survive as an IT Manager</title><link>https://www.funkysi1701.com/posts/2016/10-ways-to-survive-as-an-it-manager/</link><pubDate>Thu, 22 Sep 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/10-ways-to-survive-as-an-it-manager/</guid><description>&lt;p>So after five and a bit years of being an IT Manager here is some advice I have learned along the way in no particular order. On the whole I have enjoyed myself but it has been a real challenge at times.&lt;/p>
&lt;h2 id="1-figure-out-what-plates-are-still-spinning">1. Figure out what plates are still spinning&lt;a class="anchor ms-1" href="#1-figure-out-what-plates-are-still-spinning">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Being an IT Manager is all about keeping everything running all of the time. A bit like spinning 5 or 6 plates. You have plates for your servers and network infrastructure, you have plates for bespoke databases that you maintain, you have plates for your staff (including any external contractors), you have plates for any websites or apps that you develop. That is a lot of plates to keep spinning and that before you start thinking about what your boss wants you to deliver. Make sure you know what is happening with all these plates, which ones are happy, which ones are on the way to the floor and which ones you need to get the glue out and repair.&lt;/p>
&lt;h2 id="2-make-it-someone-elses-problem">2. Make it someone else’s problem&lt;a class="anchor ms-1" href="#2-make-it-someone-elses-problem">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>If you can blame someone else do so. If your internet goes down it is your ISPs fault. If your website dies its your hosting company’s fault. Take responsibility for problems but if when something goes wrong you can pick up the phone and ask for help, it will make your life easier.&lt;/p>
&lt;h2 id="3-hire-good-staff">3. Hire good staff&lt;a class="anchor ms-1" href="#3-hire-good-staff">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Hiring poor staff wastes time and money and makes you look bad by others. Demand the highest salary band for new staff that you can afford and don’t agree to hiring anyone that you have doubts about. It is easy to bow to the pressure to get someone quickly but this will always result in worse problems in the long run. Once you have a good team do your best to keep them, and warn upper management of the problems if staff leaves (basically make it their problem not yours!).&lt;/p>
&lt;h2 id="4-learn-learn-learn">4. Learn, Learn, Learn&lt;a class="anchor ms-1" href="#4-learn-learn-learn">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>You may or may not have the opportunity to go on training courses. Whatever your situation spend time learning new stuff that will benefit the company and yourself. You can learn a lot by reading online, you can petition for training from your managers, you can fund training yourself, you can ask for help from your different suppliers. The more you learn, the more you can do and the more useful you can be to the company, plus the more interesting you will find the job.&lt;/p>
&lt;h2 id="5-say-no">5. Say No!&lt;a class="anchor ms-1" href="#5-say-no">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Don’t be afraid to say no. You will always be asked to do the impossible and if something is impossible say so at the start. It wastes everyone’s time if you spend a lot of time trying to do the impossible. Always give your reasons for saying no, and if you always say no people will think you are unhelpful. A better way to say no is to come up with a better solution. No I can’t do it your way but here is a better solution.&lt;/p>
&lt;h2 id="6-dont-give-estimates">6. Don’t give estimates&lt;a class="anchor ms-1" href="#6-dont-give-estimates">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>If you are asked how long something will take you don’t answer straight away or give an exaggerated estimate. Go away and spend some time thinking of everything that is involved before replying. There will always be something that you forgot to consider when first asked about it and looking at the different components will help plan out the work needed as well as provide an estimate.&lt;/p>
&lt;h2 id="7-know-what-to-tell-your-boss-and-what-not-to">7. Know what to tell your boss, and what not to&lt;a class="anchor ms-1" href="#7-know-what-to-tell-your-boss-and-what-not-to">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>This is a hard one to get the balance right for. You need to tell your boss enough so that they appreciate all that you do, but too much and they will stop listening and accuse you of talking in technobabble. I have never got the balance right with this one. I have always aired on the side of not telling my boss enough, and hence they don’t realize that I saved the day on Sunday night as everything is working again on Monday. Do repeat yourself. If your server is running low on resources start asking for replacement hardware early, and increase the frequency and the panic in line with the problems it is causing.&lt;/p>
&lt;h2 id="8-understand-the-problems-of-the-business">8. Understand the problems of the business&lt;a class="anchor ms-1" href="#8-understand-the-problems-of-the-business">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/09/bhrzpww6aehdx1wvrrug.jpg?w=800&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Businesses need to make money. If the one you work for isn’t making enough money you will soon be looking for another. If you work for IT you will quickly start to see the problems of the business, think about what simple changes IT could make to improve things that would benefit the whole company. Some of your suggestions won’t go anywhere, but some may have a massive impact. I can think of a few changes that IT have spearheaded that I am very proud of, upgrading our internet connection, simplifying or automating processes and delivering new versions of software.&lt;/p>
&lt;h2 id="9-ask-for-help">9. Ask for help&lt;a class="anchor ms-1" href="#9-ask-for-help">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Don’t be afraid of asking for help. There are lots of places to look for help. Other departments could take more on, you could recruit extra help, you could hire external contractors. You can ask questions on support forums like &lt;a href="https://serverfault.com/" target="_blank" rel="noopener noreferrer">ServerFault&lt;/a>
or &lt;a href="https://stackoverflow.com/" target="_blank" rel="noopener noreferrer">StackOverflow&lt;/a>
, many software re-sellers or other suppliers are a good point of contact for questions about things they supply. Microsoft Support was also invaluable for a server issue.&lt;/p>
&lt;h2 id="10-think-about-disasters">10. Think about disasters&lt;a class="anchor ms-1" href="#10-think-about-disasters">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Write a disaster recovery plan or backup policy. Yes there will always be something more important that needs doing, but just stop for a moment to think how you would feel if everything died on your watch. The one thing you can rely on with technology is that it will fail at some point. A back of the envelope plan of action is better than no plan at all, even better is a detailed plan of what to do when each and every service you rely on fails. Plan additional services with an idea of adding extra redundancy. Always have multiple Domain Controllers, think about what data you could run from the Cloud. VMs could be replicated to the Cloud, and servers could be run from there.&lt;/p></description></item></channel></rss>