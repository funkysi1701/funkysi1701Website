<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ApplicationInsights on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/applicationinsights/</link><description>Recent content in ApplicationInsights on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 05 Apr 2019 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/applicationinsights/index.xml" rel="self" type="application/rss+xml"/><item><title>Gated Release</title><link>https://www.funkysi1701.com/posts/2019/gated-release/</link><pubDate>Fri, 05 Apr 2019 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2019/gated-release/</guid><description>&lt;p>Automated releases of software are great but how can we add an element of feedback so only good releases go live.&lt;/p>
&lt;p>I have been using Azure DevOps to release my &lt;a href="https://www.funkysi1701.com/pwned-pass/">PwnedPass&lt;/a>
android app to the Google Play Store for a while now. There are options to deploy to the alpha, Beta or Production tracks and even to set % of users to target. For the full range of options check out the Google Play &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vsclient.google-play" target="_blank" rel="noopener noreferrer">extension&lt;/a>
for Azure DevOps.&lt;/p>
&lt;p>My release starts by publishing to 10% of users on the production track, my next step makes use of the increase rollout option to increase this %, you can have as many of these additional steps as you want until you reach 100% of your users.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Image" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/04/image.png?fit=662%2C116&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Now if you run this release now it will just run through each of the steps one after the other. Now of course you can add a pre or post approval to your pipeline but this just adds a manual dependency to your release. Whoever does the approving needs to check things are working before approving or worse just approves regardless.&lt;/p>
&lt;p>Azure DevOps has the concept of &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/deploy-using-approvals?view=azure-devops" target="_blank" rel="noopener noreferrer">gated releases&lt;/a>
which allows you to add automated checks before or after a release happens. These automated checks can be any of the following:&lt;/p>
&lt;ul>
&lt;li>An Azure Function&lt;/li>
&lt;li>A Rest API call&lt;/li>
&lt;li>Azure Monitor Alert&lt;/li>
&lt;li>Query Work Items&lt;/li>
&lt;li>Security and Compliance Assessment&lt;/li>
&lt;/ul>
&lt;p>We are going to make use of the Azure Monitor Alert, to create an alert from your Application Insights data and only continue the rollout if no failures are detected.&lt;/p>
&lt;p>Open up your application insights resource in the Azure portal and look in alerts. Click add new alert rule.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Image" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/04/image-1.png?fit=662%2C552&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Select your application insights resource in Resource, In Condition choose a condition to check, I chose Failed Requests, so every time a failure is registered in my API I can stop the deployment. The exact criteria you want to use is entirely up to you.&lt;/p>
&lt;p>Create an action group, I just set my alert to send an email to myself but there are other alert actions you may want to try. Give your alert a name and description and click save.&lt;/p>
&lt;p>Now all we need to do is make Azure DevOps make use of this alert. In your release pipeline select the pre-deployment conditions of your second step and open up the Gates section.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Image" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/04/image-2.png?fit=662%2C498&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Choose a suitable time to evaluate, I have been using something long like 12 or 24 hours so if there are problems there is time for it to be noticed. Choose Version 1 of the task (I was not able to get it to work with Version 0)&lt;/p>
&lt;p>Now select your Azure subscription and Resource Group and leave the rest of the settings as they are. Now your Deployment will stop and analyse application insights for any Failed requests and will halt if it finds any.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Image" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/04/image-3.png?fit=662%2C88&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I am still testing this out but it will take a few days to figure out if this what I want due to the large time scales involved. I feel this is going to be an improvement of manually approving release steps.&lt;/p></description></item><item><title>Azure Friday</title><link>https://www.funkysi1701.com/posts/2017/azure-friday/</link><pubDate>Mon, 18 Sep 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/azure-friday/</guid><description>&lt;p>I think Azure is great, but there is loads to it so I can never know about all of its features. There is a video series hosted by Scott Hanselman called &lt;a href="https://channel9.msdn.com/Shows/Azure-Friday" target="_blank" rel="noopener noreferrer">Azure Fridays&lt;/a>
which I have started to watch in an effort to keep more up to date about some of its cool features.&lt;/p>
&lt;iframe src="https://docs.microsoft.com/en-us/shows/azure-friday/debug-net-apps-in-production-snapshot-debugger-in-application-insights/player" width="960" height="540" frameborder="0" allowfullscreen="allowfullscreen">&lt;/iframe>
&lt;p>I watched this video recently and it is all about application insights and new ways you can debug your web applications by creating snapshots. I am a big fan of application insights so adding extra ways to debug my apps is a big win for me. Once I get this feature working in my code I will no doubt blog about it.&lt;/p></description></item><item><title>What the heck is Business Intelligence?</title><link>https://www.funkysi1701.com/posts/2017/businessintelligence/</link><pubDate>Mon, 05 Jun 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/businessintelligence/</guid><description>&lt;p>The term &lt;strong>Business Intelligence (BI)&lt;/strong> refers to technologies, applications and practices for the collection, integration, analysis, and presentation of business information. The purpose of Business Intelligence is to support better business decision making. Essentially, Business Intelligence systems are data-driven Decision Support Systems (DSS). Business Intelligence is sometimes used interchangeably with briefing books, report and query tools and executive information systems.&lt;/p>
&lt;h3 id="what-is-power-bi">What is Power BI?&lt;a class="anchor ms-1" href="#what-is-power-bi">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;strong>Power BI&lt;/strong> is a business analytics service provided by Microsoft. It provides interactive visualisations with self-service business intelligence capabilities, where end users can create reports and dashboards by themselves, without having to depend on any information technology staff or database administrator.&lt;/p>
&lt;p>Microsoft describe it as follows: &lt;strong>Power BI&lt;/strong> is a suite of business analytics tools that deliver insights throughout your organisation. Connect to hundreds of data sources, simplify data prep, and drive ad hoc analysis. Produce beautiful reports, then publish them for your organisation to consume on the web and across mobile devices. Everyone can create personalised dashboards with a unique, 360-degree view of their business. And scale across the enterprise, with governance and security built-in.&lt;/p>
&lt;h3 id="what-can-you-do-with-it">What can you do with it?&lt;a class="anchor ms-1" href="#what-can-you-do-with-it">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>One of the first thing you can do with Power Bi is connect some of the apps that you use.&lt;/p>
&lt;p>To sign up to use Power BI go to &lt;a href="https://powerbi.microsoft.com/en-us/" target="_blank" rel="noopener noreferrer">https://powerbi.microsoft.com/en-us/&lt;/a>
&lt;/p>
&lt;p>Once you are signed in click the get data link in the bottom left corner and browse through the apps you can use.&lt;/p>
&lt;p>If your website uses google analytics you can connect it up to Power BI and see some cool analytics. The below map was generated from some google analytics data, you can see that this website has had users across the globe, with UK and USA getting a lot of hits. &lt;img class="img-fluid" alt="Business Intelligence from Google Analytics" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/06/Capture.jpg?resize=662%2C349&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Another thing you can do is connect Azure Application Insights. This provides some similar data to google analytics about who is visiting your site.&lt;/p>
&lt;p>If your code is hosted in Visual Studio Team Services you can get some cool analytics from your commit history. &lt;img class="img-fluid" alt="Business Intelligence from VSTS" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/06/Capture-1.jpg?resize=662%2C177&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>There is a huge long list of apps you can connect to power BI so you can start getting all sorts of analysis very easily. I am hopefully going to talk another time about getting custom data into Power BI.&lt;/p></description></item></channel></rss>