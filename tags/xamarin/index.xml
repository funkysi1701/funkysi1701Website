<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Xamarin on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/xamarin/</link><description>Recent content in Xamarin on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 23 Jan 2019 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/xamarin/index.xml" rel="self" type="application/rss+xml"/><item><title>Pwned Pass Update</title><link>https://www.funkysi1701.com/posts/2019/pwned-pass-update/</link><pubDate>Wed, 23 Jan 2019 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2019/pwned-pass-update/</guid><description>&lt;p>Its been a while since I first released Pwned Pass so lets have a look at where we are now.&lt;/p>
&lt;p>We are very close to 500 Downloads from &lt;a href="https://play.google.com/store/apps/details?id=pwnedpasswords.pwnedpasswords" target="_blank" rel="noopener noreferrer">Google Play&lt;/a>
and we have recently smashed past 100 active installs, peaking at 116 and even now we are still over 100. I have had 9 reviews (6 x 5*, 2 x 1 * and a 4 *) which averages out at 4 *
&lt;img class="img-fluid" alt="Alt Text" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/01/image.png?w=662&amp;amp;ssl=1" loading="lazy"
/>
Over Christmas I released a UWP version that can be found in the &lt;a href="https://www.microsoft.com/store/apps/9NM2WHNZTNLT" target="_blank" rel="noopener noreferrer">Microsoft Store&lt;/a>
. This has currently had 9 downloads and even had a download to windows mobile (someone out there still likes the platform!)
&lt;img class="img-fluid" alt="Alt Text" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2019/01/image-1.png?w=662&amp;amp;ssl=1" loading="lazy"
/>
I have a fairly smooth deployment process using Azure DevOps. After every check in of code a build runs which compiles the UWP and Android versions. The build also increments the version numbers that is required to deploy to either of the app stores.&lt;/p>
&lt;p>Every successful build of the master branch will kick off a release to the Beta track of Google Play. If I am happy I then release to 10% of the Production track, which can then be increased to 100% (or halted). The release to Microsoft Store happens after the Beta track of Google Play. Only reason for this order is that there isn’t a beta area for UWP apps so I want to quickly test change on android before rolling out for windows.&lt;/p>
&lt;p>All these steps require confirmation by me before proceeding and often don’t get further than the beta track.&lt;/p>
&lt;p>A further development is that I have open sourced the source code to &lt;a href="">github&lt;/a>
do take a look if you are curious or want to contribute. With the purchase by Microsoft there are easy ways to connect github repositories to Azure DevOps. Once I create a Pull Request in github it creates a build in Azure DevOps and all the build and release steps can happen.&lt;/p>
&lt;p>I am still not 100% sure if I want to keep my bug and issue tracking in github or Azure DevOps as both have features for doing so.&lt;/p>
&lt;p>One future improvement I want to make is to automate the creation of screenshots. When I create a new feature and it gets checked in. I would like to automatically created screenshots of the key pages and submit them to the different app stores. Currently I am not sure if this is possible or how to go about it. I have some ideas to experiment with so we will see what I can do.&lt;/p></description></item><item><title>Android Development Options</title><link>https://www.funkysi1701.com/posts/2018/android-development-optionsandroid-development-options/</link><pubDate>Mon, 26 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2018/android-development-optionsandroid-development-options/</guid><description>&lt;p>A friend asked me how to get started in Android Development and I thought I might have a go at answering that question here.&lt;/p>
&lt;p>I am by no means an expert in Android development, I do have an app in the play store so I know something.&lt;/p>
&lt;h4 id="manifest-file">Manifest File&lt;a class="anchor ms-1" href="#manifest-file">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>This is probably the easiest option and also doesn’t actually create an android app so I am not sure if it should be included in this list of not.&lt;/p>
&lt;p>If you have a website and you want to create an app for that you could just create a manifest file and add this to your website.&lt;/p>
&lt;p>Once your website has a manifest file, if you visit your website using a mobile phone or tablet you will get the option to add a shortcut to the home screen. You then have an app like experience in that you can click an icon to launch your website.&lt;/p>
&lt;p>A manifest file is a simple text file which specifies a few settings like the icon size, filename, what page loads when clicked and name of your “app”&lt;/p>
&lt;p>&lt;a href="https://developers.google.com/web/fundamentals/web-app-manifest/" target="_blank" rel="noopener noreferrer">More information&lt;/a>
&lt;/p>
&lt;h4 id="visual-studio">Visual Studio&lt;a class="anchor ms-1" href="#visual-studio">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>This is the option I know most about as is what I have used.&lt;/p>
&lt;p>If you are familiar with Visual Studio you can use the Xamarin Forms software to create your app in C#. Xamarin Forms allows you to easily create cross platform apps that run on Android, IOS and windows phone. So far I have only experimented with Android but it should be relatively easy to extend my code to run on other platforms.&lt;/p>
&lt;p>Xamarin Forms allows you to write one a single codebase that can be compiled to run on the different platforms. Xamarin requires the use of XAML a XML like markup language for designing UI elements.&lt;/p>
&lt;p>More Information on &lt;a href="https://www.visualstudio.com/" target="_blank" rel="noopener noreferrer">Visual Studio&lt;/a>
, &lt;a href="https://www.xamarin.com/forms" target="_blank" rel="noopener noreferrer">Xamarin Forms&lt;/a>
&lt;/p>
&lt;h4 id="android-studio">Android Studio&lt;a class="anchor ms-1" href="#android-studio">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>I don’t know much about this option so do correct me if I don’t get the details correct.&lt;/p>
&lt;p>Android Studio can be downloaded from Google this allows you to create java code to run directly on an android device. From what I know this is fairly similar experience to Visual Studio but instead of writing your code in C# you use Android Studio and write it directly in java.&lt;/p>
&lt;p>&lt;a href="https://developer.android.com/studio/index.html" target="_blank" rel="noopener noreferrer">More information&lt;/a>
&lt;/p>
&lt;h4 id="cordova">Cordova&lt;a class="anchor ms-1" href="#cordova">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>Cordova allows you to use HTML, CSS and javascript to create cross platform apps. I have no idea why I haven’t heard of this technology until today as it sounds very flexible especially if you know a little bit of javascript.&lt;/p>
&lt;p>&lt;a href="https://cordova.apache.org/docs/en/latest/guide/overview/" target="_blank" rel="noopener noreferrer">More information&lt;/a>
&lt;/p>
&lt;p>To summarize there are lots of different options available to create an android app. What you choose depends on what you want to build, what language and experience you have and if your app needs to be cross platform.&lt;/p></description></item></channel></rss>