<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Access on Funky Si's Blog</title><link>https://www.funkysi1701.com/tags/access/</link><description>Recent content in Access on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 07 Jul 2016 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/tags/access/index.xml" rel="self" type="application/rss+xml"/><item><title>Clever things with MS Access</title><link>https://www.funkysi1701.com/posts/2016/clever-things-ms-access/</link><pubDate>Thu, 07 Jul 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/clever-things-ms-access/</guid><description>&lt;p>I hate MS Access and especially developing with it as you can’t do any thing clever with it.&lt;/p>
&lt;p>&lt;strong>Wrong, Wrong, Wrong!&lt;/strong>&lt;/p>
&lt;p>There are a few clever things I have been able to script to make developing with it passable. I still would rather use Visual Studio but this improves the experience a fair bit.&lt;/p>
&lt;h2 id="source-control">Source Control&lt;a class="anchor ms-1" href="#source-control">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Access files are binary (I use the ADP/ADE file format but I assume other Access file formats have the same problem) and so you can’t diff them to see what has changed. This is bad.&lt;/p>
&lt;p>However there is a solution to this. A tool called Access SVN and can be downloaded from &lt;a href="https://accesssvn.codeplex.com/" target="_blank" rel="noopener noreferrer">https://accesssvn.codeplex.com/&lt;/a>
, this gives you a way to extract to text files all the forms and reports that are in Access. Before every commit I would manually run this tool on my ADP file and extract to text files, then I would commit these text files to source control and could easily see what had changed in each commit.&lt;/p>
&lt;p>Despite the name Access SVN, the tool is not tied to subversion, you can use any source control system, I use git.&lt;/p>
&lt;p>Also included in this tool is a way to do this with the command line, so you can make this a build step on your build server. I have not used this extensively yet, but the syntax is fairly simple&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>asvn.exe e &lt;span style="color:#e6db74">&amp;#34;path to Access file&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;path to txt files&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*.*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The filter at the end &lt;em>.&lt;/em> allows you to specify what to extract so you could extract all forms/reports beginning with D with &amp;ldquo;&lt;em>.D&lt;/em>&amp;rdquo;. I had trouble using &lt;em>.&lt;/em> because the names of my forms/reports contain characters not allowed in a windows file name. I am sure there is a way round this but I haven’t had chance to look into it further yet.&lt;/p>
&lt;h2 id="testing-ms-access">Testing MS Access&lt;a class="anchor ms-1" href="#testing-ms-access">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Surely testing is not possible with MS Access? I would have agreed with that statement the other day until I found a neat way of testing if a feature is enabled.&lt;/p>
&lt;p>Firstly a bit of background. I develop using MS Access 2003 because the design view is far easier to use, however because it is out of support all my users use MS Access 2010. MS Access 2010 has a feature called Tabbed Documents which allows all forms and reports to open in new tabs so you can easily switch between them. This feature can only be enabled in MS Access 2010 and has no effect if opening with MS Access 2003.&lt;/p>
&lt;p>If you use Access SVN on your Access file with tabbed documents turned on and off you will see UseMDIMode: 0 and UseMDIMode: 1 show up in the Database properties file. UseMDIMode: 0 means that tabbed documents is turned on.&lt;/p>
&lt;p>In powershell I can now write a test to see if UseMDIMode: 0 can be found in the database properties file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Get-Content &lt;span style="color:#e6db74">&amp;#34;General\Database properties.dbp.txt&amp;#34;&lt;/span> | Select-String &lt;span style="color:#e6db74">&amp;#34;UseMDIMode: 0&amp;#34;&lt;/span> -quiet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the test passes True will be returned, if it fails null will be returned.&lt;/p>
&lt;p>On my build server I scripted the extraction of Database properties.dbp.txt from the ADP file with asvn.exe before running this test. While not strictly needed as Database properties.dbp.txt should be in source control, it is possible that someone could forget to extract the text files from the ADP, with this step you are always testing what is enabled in the binary file.&lt;/p>
&lt;h2 id="ms-access-connection-strings">MS Access Connection Strings&lt;a class="anchor ms-1" href="#ms-access-connection-strings">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>While developing with MS Access I often swap the database connection to point to my local machine or a build server. I always try and remember to only ever commit with this set to the live database to avoid obvious problems.&lt;/p>
&lt;p>The other day I found on &lt;a href="https://stackoverflow.com/questions/16411430/change-access-server-connection-from-command-line" target="_blank" rel="noopener noreferrer">stackoverflow&lt;/a>
a way to script this. I love this! I can include this step in my deployment process and it will overwrite what ever the connection string is in source control with what your production environment needs.&lt;/p>
&lt;p>All you need to run this step is, (note it is spaces between the parameters not commas)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cscript connect.vbs Project.adp &lt;span style="color:#e6db74">&amp;#34;ServerName&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;DatabaseName&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The contents of connect.vbs can be found on the &lt;a href="https://stackoverflow.com/questions/16411430/change-access-server-connection-from-command-line" target="_blank" rel="noopener noreferrer">stackoverflow article&lt;/a>
. It is also possible to pass username and password if your environment requires this.&lt;/p>
&lt;h2 id="compiled-ade">Compiled ADE&lt;a class="anchor ms-1" href="#compiled-ade">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>The last clever thing I do with MS Access is convert my ADP file into the compiled ADE version. To manually do this there is an option in the tools menu.&lt;/p>
&lt;p>To automate this I run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cscript createADE.vbs &lt;span style="color:#e6db74">&amp;#34;path to ADP&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;path to ADE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The contents of createADE came from this &lt;a href="https://social.msdn.microsoft.com/Forums/office/en-US/01fd48a9-258e-4405-86f1-adfb2f1057ee/create-an-access-2007-ade-from-a-adp-via-commandline?forum=accessdev" target="_blank" rel="noopener noreferrer">forum post&lt;/a>
, the only change I made was to comment out some of the echo statements so it would run silently as part of my build process. It should be noted that cscript and wscript are almost identical and either will run these scripts however in a command line environment cscript is preferable, and wscript should be used in a windows environment.&lt;/p>
&lt;p>I am quite surprised at how much I have managed to do in terms of scripting the build and deployment process for MS Access. I still don’t like developing with Access but this has definitely improved things.&lt;/p></description></item><item><title>Coding myself into a corner</title><link>https://www.funkysi1701.com/posts/2016/coding-myself-into-a-corner/</link><pubDate>Thu, 25 Feb 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/coding-myself-into-a-corner/</guid><description>&lt;p>I spend an awful lot of my working life adding new features and improvements to a legacy database system.&lt;/p>
&lt;p>A &lt;strong>legacy&lt;/strong> system is an old method, technology, computer system, or application program, “of, relating to, or being a previous or outdated computer system.” Often a pejorative term, referencing a system as &amp;ldquo;&lt;strong>legacy&lt;/strong>&amp;rdquo; often implies that the system is out of date or in need of replacement.&lt;/p>
&lt;p>My particular legacy system is Microsoft Access. We use Microsoft Access to provide the front end for all our internal databases. The particular technology we use is ADP files which are only supported in Access 2000, 2003 or 2010.&lt;/p>
&lt;p>Microsoft has already dropped support for Access 2000 and 2003, and support for 2010 is due to be dropped in 2020.&lt;/p>
&lt;p>So why am I coding myself into a corner? Its simple for every feature or improvement I create in Access, I increase the amount of features I need to create or port to a new front end.&lt;/p>
&lt;p>This is a very depressing thought, everything I create will need creating again. I am not saving myself work but increasing the amount of work I need to do again.&lt;/p>
&lt;p>The bad news is that my employers like almost all businesses demand results and like a good employee I have been delivering them. I have been promised the mythical “when we are quiet” you can work on rebuilding the database front end. I know this will likely never happen so what are my options.&lt;/p>
&lt;p>&lt;strong>Do nothing&lt;/strong> I have warned my managers that this work needs doing and it is up to them to give me the resources I need. This is not an acceptable option. Firstly I am not future proofing the business, 2020 will be here before we know it. Also I am not developing myself as a developer, as the only experience I am getting is with Legacy technology that has expired or will do very soon. No one wants to employ someone who only has legacy experience.&lt;/p>
&lt;p>&lt;strong>Do something&lt;/strong> I need to keep delivering results and doing what is asked of me. Like any good engineer I should be multiplying my estimates by four, meaning that I have some time that can be used for looking at the bigger picture. This is a win-win option really. Employer gets a solution that is future proof, Employee gets valuable experience in up to date technology.&lt;/p>
&lt;p>What do you think? Have you been tied to legacy technology? Why not leave a comment below.&lt;/p></description></item><item><title>My Love/Hate Relationship with Microsoft Access</title><link>https://www.funkysi1701.com/posts/2015/microsoft-access/</link><pubDate>Fri, 24 Jul 2015 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2015/microsoft-access/</guid><description>&lt;p>For historical reasons I use Microsoft Access as the front-end for all my line of business databases.&lt;/p>
&lt;p>Access allows you to create an ADP file that can connect to your SQL Server database. However Office has dropped support for this, so the last version of office that I can use is Office 2010.&lt;/p>
&lt;p>Before I start hating on Access there are some good things about the platform. Users with very little knowledge can create a database fairly quickly. Development time is also fairly low as it doesn’t take long to create a new form, and add a few buttons which open different reports.&lt;/p>
&lt;p>For the last 5 years or so I have built a range of different forms in Access, (and even if I do say so myself), I have got quite good at creating forms that users can be more productive with. Access has the concept of a subform which is a form embedded in a form, each form can be connected to a different query and can be connected to each other so it is relatively easy to create something quite powerful.&lt;/p>
&lt;p>Access report are an easy way to create professional looking reports that can be sent out to clients, or used by management and they also have the concept of subreports, (same as subforms but embedded in a report), this means you don’t have to write one query to pull back every piece of data that shows up in a report.&lt;/p>
&lt;p>VBA or Visual Basic for Access allows you easily do things programmatically, like run something if something is selected or a button is clicked. This is not the easiest programming language to work with, however once you have used it for a while you get used to its quirks. My favourite function is IIF, the syntax is fairly simple IIF(expr, truepart, falsepart), if expr evaluates to true the truepart is executed (executed can be as simple as displaying certain text in certain conditions), if it is false the falsepart is executed, and you can also chain them together which I have done to produce something very complex looking.&lt;/p>
&lt;p>Now for the negative side of things. Access creates a binary ADP file, binary files can not be version controlled in git or subversion. This is a big problem as I want to keep track of every change I make. It also means that branching or working with others on big projects is also difficult.&lt;/p>
&lt;p>One work around I have found to this problem is &lt;a href="https://accesssvn.codeplex.com/" target="_blank" rel="noopener noreferrer">AccessSVN&lt;/a>
. This program takes an ADP and creates text files of every form and report. It also can create an ADP from these files as well, however I have had varying success with this feature so I prefer to just create the text files if possible. What I do after I have made a change to the ADP is to run AccessSVN, create text files and commit these to source control. You can then see what controls have been changed or added. It also helps with bugs as I have found that sometimes while testing access will apply a filter to a form, which will break things if deployed, which is very annoying.&lt;/p>
&lt;p>Access can only do what access was designed to do. There are some advanced features that we would like to add to our databases. Things like sending emails or uploading reports to a website. This is not Access fault as it was never designed to be able to do such things but I am often asked about what is possible.&lt;/p>
&lt;p>End of support for Office 2010 is approaching and I have plans to stop using Access but until then I need to keep supporting our existing front ends.&lt;/p></description></item></channel></rss>