<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2022 on Funky Si's Blog</title><link>https://www.funkysi1701.com/2022/</link><description>Recent content in 2022 on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 23 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/2022/index.xml" rel="self" type="application/rss+xml"/><item><title>Updating SQL Server with Docker</title><link>https://www.funkysi1701.com/posts/2022/updating-sqlserver-with-docker/</link><pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/updating-sqlserver-with-docker/</guid><description>&lt;p>This morning I was listening to a podcast where the new features coming out for SQL Server 2022 were being discussed. This starting me thinking about what would be involved in upgrading.&lt;/p>
&lt;p>Upgrading production environments is complex and there are licensing considerations to take into account. However for non production workloads like development this isn&amp;rsquo;t a problem so lets look at that first.&lt;/p>
&lt;p>In the past I have installed SQL Server Devloper Edition onto my laptop, this is fine but I have found that unless you are very careful you may end up with multiple different versions of SQL Server sitting around, and it is difficult to cleanly remove them without a fresh install of the OS.&lt;/p>
&lt;p>However in this day and age, Docker and Containers are king. My current development environment makes use of Docker and has a docker compose file which sets up SQL Server for this particular application, lets take a look.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">sqlserver&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">mcr.microsoft.com/mssql/server:2019-latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">Sql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;5432:1433&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">my-network&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sqlvolume:/var/opt/mssql&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This defines which docker image to use, in this case 2019-latest, sets up ports and the name and saves the data on a docker volume.&lt;/p>
&lt;p>If we then run SELECT @@VERSION on this instance of SQL Server we get told:&lt;/p>
&lt;pre tabindex="0">&lt;code>Microsoft SQL Server 2019 (RTM-CU13) (KB5005679) - 15.0.4178.1 (X64) Sep 23 2021 16:47:49 Copyright (C) 2019 Microsoft Corporation Developer Edition (64-bit) on Linux (Ubuntu 20.04.3 LTS) &amp;lt;X64&amp;gt;
&lt;/code>&lt;/pre>&lt;p>What if we change the docker-compose file to use 2022-latest?&lt;/p>
&lt;pre tabindex="0">&lt;code>manifest for mcr.microsoft.com/mssql/server:2022-latest not found: manifest unknown: manifest tagged by &amp;#34;2022-latest&amp;#34; is not found
&lt;/code>&lt;/pre>&lt;p>SQL Server 2022 hasn&amp;rsquo;t been released yet so there is no docker image for it yet. Try this command again in a few months when it is available.&lt;/p>
&lt;p>OK so what else can we try? What about a downgrade to 2017-latest? Will that work?&lt;/p>
&lt;p>SQL Server 2017 starts but the following error gets logged.&lt;/p>
&lt;pre tabindex="0">&lt;code>2022-02-23 21:41:15.30 Server Software Usage Metrics is disabled.
2022-02-23 21:41:15.30 spid6s Starting up database &amp;#39;master&amp;#39;.
2022-02-23 21:41:15.34 spid6s Error: 948, Severity: 20, State: 1.
2022-02-23 21:41:15.34 spid6s The database &amp;#39;master&amp;#39; cannot be opened because it is version 904. This server supports version 869 and earlier. A downgrade path is not supported.
&lt;/code>&lt;/pre>&lt;p>Doh we can&amp;rsquo;t downgrade the existing database we have. Probably a good thing really.&lt;/p>
&lt;p>Microsoft release regular updates for SQL Server called CU&amp;rsquo;s (Cumulative Updates), you can see above we are on CU13. Is there a CU14 or CU15 we could try?&lt;/p>
&lt;p>Update the docker compose to: mcr.microsoft.com/mssql/server:2019-CU14-ubuntu-20.04&lt;/p>
&lt;p>At this point I actually got an error&lt;/p>
&lt;pre tabindex="0">&lt;code>2022-02-23 21:50:20.71 Server Error: 17058, Severity: 16, State: 1.
2022-02-23 21:50:20.71 Server initerrlog: Could not open error log file &amp;#39;/var/opt/mssql/log/errorlog&amp;#39;. Operating system error = 5(Access is denied.).
&lt;/code>&lt;/pre>&lt;p>This is caused by trying to use SQL Server 2017 but it is easy to fix.&lt;/p>
&lt;p>In docker desktop there is a volumes section, find the volume you are using with SQL Server and delete the errorlog mentioned above.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Docker Desktop" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2022/docker-desktop1.png" loading="lazy"
/>
&lt;/p>
&lt;p>Now if you retry SQL will start OK.&lt;/p>
&lt;p>Repeating the SELECT @@VERSION gives us a new CU&lt;/p>
&lt;pre tabindex="0">&lt;code>Microsoft SQL Server 2019 (RTM-CU14) (KB5007182) - 15.0.4188.2 (X64) Nov 3 2021 19:19:51 Copyright (C) 2019 Microsoft Corporation Developer Edition (64-bit) on Linux (Ubuntu 20.04.3 LTS) &amp;lt;X64&amp;gt;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>Microsoft SQL Server 2019 (RTM-CU15) (KB5008996) - 15.0.4198.2 (X64) Jan 12 2022 22:30:08 Copyright (C) 2019 Microsoft Corporation Developer Edition (64-bit) on Linux (Ubuntu 20.04.3 LTS) &amp;lt;X64&amp;gt;
&lt;/code>&lt;/pre>&lt;p>How much easier is this than manually installing updates and rebooting or attempting to uninstall and reinstall SQL Server. As SQL Server 2022 isn&amp;rsquo;t out yet I can&amp;rsquo;t say for certain what issues I may encounter but hopefully it will be as easier as this. And I don&amp;rsquo;t need to backup or restore and databases they are all available as before!&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/funkysi1701/updating-sql-server-with-docker-5def" target="_blank" rel="noopener noreferrer">View on DevTo&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://funkysi1701.hashnode.dev/updating-sql-server-with-docker" target="_blank" rel="noopener noreferrer">View on Hashnode&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>dotnet is 20 years old</title><link>https://www.funkysi1701.com/posts/2022/dotnet-is-20-years-old/</link><pubDate>Mon, 14 Feb 2022 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/dotnet-is-20-years-old/</guid><description>&lt;p>Today Microsoft celebrated 20 years since the first version of dotnet was released with a special live stream event.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/67tCWKnweso" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>&lt;/iframe>
&lt;p>A lot has happened in the 20 years of dotnet (or .Net). It is my understanding that .Net was created to rival Java. When the .Net Framework was first created it was a windows only thing, but today modern .Net is a modern run anywhere platform, with .net applications running everywhere from PCs and Laptops, Raspberry Pi&amp;rsquo;s, Mobile phones and tablets (via Xamarin Forms), to Websites and Microservice APIs running on every Cloud platform out there.&lt;/p>
&lt;p>If you want to celebrate this achievment tweet with the hashtag &lt;a href="https://twitter.com/search?q=%23dotnetlovesme" target="_blank" rel="noopener noreferrer">#DotNetLovesMe&lt;/a>
or download some of the digital swag available from &lt;a href="https://github.com/dotnet-presentations/dotNET20th/tree/main/Swag" target="_blank" rel="noopener noreferrer">github&lt;/a>
&lt;/p>
&lt;p>On Thursday the 17th Feb the first preview of dotnet 7.0 is going to be released, with the latest version 6.0 only being released last November.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="History of DotNet" src="https://pbs.twimg.com/media/FLj8kj7XEAcW3ng?format=jpg&amp;amp;name=4096x4096" loading="lazy"
/>
&lt;/p>
&lt;p>The above graphic comes from the following tweet.&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">This is 20 years of &lt;a href="https://twitter.com/hashtag/dotnet?src=hash&amp;amp;ref_src=twsrc%5Etfw">#dotnet&lt;/a> releases. &lt;a href="https://twitter.com/hashtag/dotNETLovesMe?src=hash&amp;amp;ref_src=twsrc%5Etfw">#dotNETLovesMe&lt;/a> &lt;a href="https://t.co/Zxfe1SdWTq">pic.twitter.com/Zxfe1SdWTq&lt;/a>&lt;/p>&amp;mdash; Khalid ðŸŽŸ (@buhakmeh) &lt;a href="https://twitter.com/buhakmeh/status/1493220984916258817?ref_src=twsrc%5Etfw">February 14, 2022&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>What do you like about dotnet? When did you first start using it? What are you going to build with it next?&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/funkysi1701/dotnet-is-20-years-old-361e" target="_blank" rel="noopener noreferrer">View on DevTo&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://funkysi1701.hashnode.dev/dotnet-is-20-years-old" target="_blank" rel="noopener noreferrer">View on Hashnode&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>Why do I have a website?</title><link>https://www.funkysi1701.com/posts/2022/why-do-i-have-a-website/</link><pubDate>Tue, 25 Jan 2022 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/why-do-i-have-a-website/</guid><description>&lt;p>Is it to share my ideas? Is it to learn new technologies and techniques? Is it to create a following? Is it to educate others? Is it to build some kind of service? Is it some combination of all of these.&lt;/p>
&lt;h2 id="history">History&lt;a class="anchor ms-1" href="#history">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Back when the web was young and I was first learning HTML. I hand crafted web pages, adding photos I had taken with captions. If I needed a new page I just added a new html page and linked to it from another page.&lt;/p>
&lt;p>As time went on I started to learn mysql and php and my website became a hand crafted php nightmare. I also applied what I learned to help my father run the website for his camera club.&lt;/p>
&lt;p>At some point I started playing with WordPress. I have had various WordPress websites or blogs over the years. WordPress is very powerful you can do so many things, install so many plugins. WordPress runs on php and mysql and as my career started to centre around the .net space, I started to want something that was similar, so I could apply things I had learnt to my own website.&lt;/p>
&lt;p>This has led me to the current state of my website. I have a WordPress blog, with most of my oldest content, my newer content lives on dev.to and I have a Blazor webassembly site that uses the dev.to api to run my new website.&lt;/p>
&lt;p>Blazor webassembly is great, however it has some limitations which I am starting to push against. To host this as cheaply as possible I am using Azure static web apps, so no .net backend all the website is front end. I have some Azure Functions that does the backend bits that I need.&lt;/p>
&lt;p>Google and other bots are not able to find any of my pages except index, due to the way Blazor works. I have got round this by pre rendering the content using &lt;a href="https://prerender.io/" target="_blank" rel="noopener noreferrer">https://prerender.io/&lt;/a>
&lt;/p>
&lt;p>My next difficulty is how to generate a sitemap.xml or a rss feed for my blog. This has started to make me question my architecture decisions.&lt;/p>
&lt;p>I could use a hosted solution like &lt;a href="https://ghost.org/" target="_blank" rel="noopener noreferrer">ghost&lt;/a>
which is popular with a some of my peers. This would solve many of the problems I am currently facing but I wouldn&amp;rsquo;t be able to play with everything as it is hosted and therefore someone else&amp;rsquo;s problem. How important that is I will look at later.&lt;/p>
&lt;p>Another option would be to use github pages, there are quite a few ways to publish a github page, &lt;a href="https://jekyllrb.com/" target="_blank" rel="noopener noreferrer">Jekyll&lt;/a>
and &lt;a href="https://gohugo.io/" target="_blank" rel="noopener noreferrer">Hugo&lt;/a>
appear to be the most popular. Both produce static content and both are a new for me to learn. Interestingly I could also publish either to Azure Static Web apps if github pages ends up not being suitable.&lt;/p>
&lt;h2 id="split-in-two">Split in two&lt;a class="anchor ms-1" href="#split-in-two">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>I think my website needs to be split in two. I need a stable blog platform probably using Hugo and github pages. This is what I want to get indexed by the search engines and be the primary way people find out about what I am doing.&lt;/p>
&lt;p>I then have additional sites, that I use as my playground for learning new tech. I can easily link between them and I can tweak the style so they &amp;ldquo;fit&amp;rdquo; nicely together.&lt;/p>
&lt;p>I am still considering what to do with dev.to. I like that I am using it as the backend for my blog posts, and its API gives me that flexibility to display that content where I want.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/funkysi1701/why-do-i-have-a-website-1m5l" target="_blank" rel="noopener noreferrer">View on DevTo&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://funkysi1701.hashnode.dev/why-do-i-have-a-website" target="_blank" rel="noopener noreferrer">View on Hashnode&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>Using GitHub Actions</title><link>https://www.funkysi1701.com/posts/2022/using-github-actions/</link><pubDate>Mon, 10 Jan 2022 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/using-github-actions/</guid><description>&lt;p>I&amp;rsquo;ve been running my website on Azure Static Web Apps for a while and it is pretty cool.&lt;/p>
&lt;p>When you create a Static Web App on Azure you get asked for the github repo of your source code and even the branch to use.
&lt;img class="img-fluid" alt="GitHub Repo for my Static Web App" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/off7ur2tgsla4smkrhhi.png" loading="lazy"
/>
&lt;/p>
&lt;p>Once you have selected this, you get asked for the type of code to deploy, mine is Blazor Web Assembly but you can use Angular, React or Vue.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="GitHub Actions workflow creation" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ruhzjeujgl1yjxx5lng8.png" loading="lazy"
/>
You now have three variables to fill in the location in your code of the Website, the location of your Azure Functions and the output location usually wwwroot. Once you have set these three you can preview the GitHub Actions file that will be created and added to your repository.&lt;/p>
&lt;p>I get something like this&lt;/p>
&lt;pre tabindex="0">&lt;code>name: Azure Static Web Apps CI/CD
on:
push:
branches:
- feature/tempbranch
pull_request:
types: [opened, synchronize, reopened, closed]
branches:
- feature/tempbranch
jobs:
build_and_deploy_job:
if: github.event_name == &amp;#39;push&amp;#39; || (github.event_name == &amp;#39;pull_request&amp;#39; &amp;amp;&amp;amp; github.event.action != &amp;#39;closed&amp;#39;)
runs-on: ubuntu-latest
name: Build and Deploy Job
steps:
- uses: actions/checkout@v2
with:
submodules: true
- name: Build And Deploy
id: builddeploy
uses: Azure/static-web-apps-deploy@v1
with:
azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_&amp;lt;GENERATED_HOSTNAME&amp;gt; }}
repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
action: &amp;#34;upload&amp;#34;
###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
# For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
app_location: &amp;#34;Client&amp;#34; # App source code path
api_location: &amp;#34;Api&amp;#34; # Api source code path - optional
output_location: &amp;#34;wwwroot&amp;#34; # Built app content directory - optional
###### End of Repository/Build Configurations ######
close_pull_request_job:
if: github.event_name == &amp;#39;pull_request&amp;#39; &amp;amp;&amp;amp; github.event.action == &amp;#39;closed&amp;#39;
runs-on: ubuntu-latest
name: Close Pull Request Job
steps:
- name: Close Pull Request
id: closepullrequest
uses: Azure/static-web-apps-deploy@v1
with:
azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_&amp;lt;GENERATED_HOSTNAME&amp;gt; }}
action: &amp;#34;close&amp;#34;
&lt;/code>&lt;/pre>&lt;p>This github action will run when you create a Pull Request to the branch mentioned in the file, or if you push code into the branch. This code get added into the .github/workflows/ folder and is the location that all github action workflows live.&lt;/p>
&lt;p>I haven&amp;rsquo;t done much with github actions, however I have used Azure DevOps quite a bit. Over on the Azure DevOps side I have created a pipeline that deploys to a Dev environment, then a Test environment and finally a production environment.&lt;/p>
&lt;p>Lets have a look at the workflow that I ended up with and with can break down how it all works. Note I am new to Github actions so if there is a better way of doing this do let me know.&lt;/p>
&lt;pre tabindex="0">&lt;code>name: Azure Static Web Apps
on:
push:
branches:
- main
- develop
- feature/*
jobs:
dev:
runs-on: ubuntu-latest
environment:
name: Dev
name: Dev
steps:
- uses: actions/checkout@v2
with:
submodules: true
- name: Build And Deploy
id: builddeploy
uses: Azure/static-web-apps-deploy@v1
with:
azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_POND_09B18B903 }}
repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
action: &amp;#34;upload&amp;#34;
###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
# For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
app_location: &amp;#34;Blog&amp;#34; # App source code path
api_location: &amp;#34;Blog.Func&amp;#34; # Api source code path - optional
output_location: &amp;#34;wwwroot&amp;#34; # Built app content directory - optional
###### End of Repository/Build Configurations ######
test:
if: github.ref == &amp;#39;refs/heads/develop&amp;#39;
runs-on: ubuntu-latest
environment:
name: Test
name: Test
steps:
- uses: actions/checkout@v2
with:
submodules: true
- name: Build And Deploy
id: builddeploy
uses: Azure/static-web-apps-deploy@v1
with:
azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WITTY_DUNE_0A1A77903 }}
repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
action: &amp;#34;upload&amp;#34;
###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
# For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
app_location: &amp;#34;Blog&amp;#34; # App source code path
api_location: &amp;#34;Blog.Func&amp;#34; # Api source code path - optional
output_location: &amp;#34;wwwroot&amp;#34; # Built app content directory - optional
###### End of Repository/Build Configurations ######
prod:
if: github.ref == &amp;#39;refs/heads/main&amp;#39;
runs-on: ubuntu-latest
environment:
name: Prod
name: Prod
steps:
- uses: actions/checkout@v2
with:
submodules: true
- name: Build And Deploy
id: builddeploy
uses: Azure/static-web-apps-deploy@v1
with:
azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_ROCK_0AAC63D03 }}
repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
action: &amp;#34;upload&amp;#34;
###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
# For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
app_location: &amp;#34;Blog&amp;#34; # App source code path
api_location: &amp;#34;Blog.Func&amp;#34; # Api source code path - optional
output_location: &amp;#34;wwwroot&amp;#34; # Built app content directory - optional
###### End of Repository/Build Configurations ######
&lt;/code>&lt;/pre>&lt;p>The first thing I did was create three Azure Static Web Apps, I am using the free tier so while this is trippling my costs it is all still free! Doing this created three github action workflow files, I deleted two and edited the third, but before I deleted them I made a note of the AZURE_STATIC_WEB_APPS_API_TOKEN. If you look in your settings -&amp;gt; secrets for your repo you will see secrets have been created, this is the secure token that github uses to update your static web app.&lt;/p>
&lt;p>While we are in settings we might as well look at environments. I created a Prod, Test and Dev environment that I was going to use in my github actions.&lt;/p>
&lt;p>Environments can have various rules setup on them.&lt;/p>
&lt;ul>
&lt;li>Required reviewers - this is like an approver, a user specified here must aprove for the workflow to be deployed&lt;/li>
&lt;li>Wait time - I didn&amp;rsquo;t use this, but it looks like a certain amount of time can be set to pause the deployment. (I assume to do some kind of manual check)&lt;/li>
&lt;li>Deployment Branch - specify what branch are allowed to be deployed to what environments. I specified develop, main and feature branches could be deployed to the Dev environment, develop and main could go on Test and main could go on Prod&lt;/li>
&lt;li>Environment secrets - I didn&amp;rsquo;t use this as my secrets were already created, however it looks like your secrets can be associated with a specific environment&lt;/li>
&lt;/ul>
&lt;p>Now that we have the static web apps setup and the environments lets look at the github action file.&lt;/p>
&lt;p>First of all I removed the PR stuff and just concentrated on pushes. I wanted my workflow to be.&lt;/p>
&lt;ol>
&lt;li>Push to feature branch&lt;/li>
&lt;li>Deploys to Dev env&lt;/li>
&lt;li>PR feature branch to develop&lt;/li>
&lt;li>Once merged code gets pushed into develop&lt;/li>
&lt;li>Deploys to Test env&lt;/li>
&lt;li>PR develop to main&lt;/li>
&lt;li>Once merged code gets pushed into main&lt;/li>
&lt;li>Deploys to Prod env (after approval)&lt;/li>
&lt;/ol>
&lt;p>The approval on deploying to production I think is probably overkill, but I still have it setup like that for now.&lt;/p>
&lt;p>My gh action has three jobs defined as dev: test: and prod: they are all the same except they have the azure_static_web_apps_api_token that is correct for their environment.&lt;/p>
&lt;p>They also each have a environment defined eg&lt;/p>
&lt;pre tabindex="0">&lt;code>environment:
name: Prod
&lt;/code>&lt;/pre>&lt;p>Lastly Test and Prod have an if test setup, if the test is false the job won&amp;rsquo;t run. Importantly it won&amp;rsquo;t fail it just won&amp;rsquo;t run.&lt;/p>
&lt;p>For Prod this needs to only run on main branch so we have&lt;/p>
&lt;p>if: github.ref == &amp;lsquo;refs/heads/main&amp;rsquo;&lt;/p>
&lt;p>For Test this needs to only run on develop so&lt;/p>
&lt;p>if: github.ref == &amp;lsquo;refs/heads/develop&amp;rsquo;&lt;/p>
&lt;p>I could have a test for develop to only run on feature/* but I have allowed it to run everytime.&lt;/p>
&lt;p>There is loads more you can do with github actions, but hopefully this gives you a taste of some of the things you can do. I currently have a mix of Azure DevOps and github actions so I will be working on getting github actions to do more.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/funkysi1701/using-github-actions-3jo1" target="_blank" rel="noopener noreferrer">View on DevTo&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://funkysi1701.hashnode.dev/using-github-actions" target="_blank" rel="noopener noreferrer">View on Hashnode&lt;/a>
&lt;/li>
&lt;/ul></description></item><item><title>2022 Goals</title><link>https://www.funkysi1701.com/posts/2022/2022-goals/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/2022-goals/</guid><description>&lt;p>Lets have a look at what my goals were for 2021. I had eight of them, lets look at them one by one.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Azure certification&lt;/strong>. In May of this year I sat and passed the Azure Fundamentals exam. I am calling this goal as achieved.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mentoring&lt;/strong>. I didn&amp;rsquo;t do anything about working with others or mentoring, so not sure I achieved this one. However I do now work in a development team and I have been reviewing others code and having my own reviewed. We have a junior developer and I am enjoying the opportunities I have to work with him and share my wisdom.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>F#&lt;/strong>. I have done zero work with F# in 2021, so this one I didn&amp;rsquo;t achieve.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Cosmos db/Mongo db&lt;/strong>. I have worked with both of these technologies in 2021. I used Cosmos the most with my website, and storing data for it. I used Mongo/Atlas for auditing for a project I did for my previous job. I wouldn&amp;rsquo;t say I was expert in either of these, but I am starting to get a flavour of non SQL Server databases. I should also note that I am using mysql a lot in my latest job, so another non SQL Server technology that I get to use on a daily basis.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Give a talk&lt;/strong>. I said last year that maybe I would make baby steps towards doing this, and I have. In the interview for my new job I gave a short presentation (I thought it was bad, but others didn&amp;rsquo;t!) I also gave a short introduction to Blazor talk which went down well.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Mandlebrot Generator&lt;/strong>. Did nothing on this one as well. I may have googled the code but that is as far as I got.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pwned Pass Mobile App&lt;/strong>. I got an increase in users in 2021 and hence it it still running and I still pay for the API key. I am still considering what to do with it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Time for me&lt;/strong>. Achieved this one, had plenty of time for myself.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="not-a-bad-year-but-what-are-my-goals-for-2022">Not a bad year but what are my goals for 2022?&lt;a class="anchor ms-1" href="#not-a-bad-year-but-what-are-my-goals-for-2022">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Video&lt;/strong>. I have just purchased a green screen, so my first goal is to learn how to use OBS, how to light myself properly without getting horrible reflections. I have the content for my first talk, the talk I gave at work about Blazor.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Conference&lt;/strong>. Attend an in person conference. I am booked to attend Scottish Summit, however it has been postponed due to COVID-19.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Blog More&lt;/strong>. I have been neglecting writing blog posts a bit recently, so I want to do more.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Metrics&lt;/strong>. I have been recording various metrics from twitter, github etc and I would like to expand this and make it a service.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Profile Pic&lt;/strong>. My profile pic is getting a bit old, so it would be nice to update the images I use online and improve my personal brand.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>&lt;a href="https://dev.to/funkysi1701/2022-goals-24nj" target="_blank" rel="noopener noreferrer">View on DevTo&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://funkysi1701.hashnode.dev/2022-goals" target="_blank" rel="noopener noreferrer">View on Hashnode&lt;/a>
&lt;/li>
&lt;/ul></description></item></channel></rss>