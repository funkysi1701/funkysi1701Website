<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2022-07 on Funky Si's Blog</title><link>https://www.funkysi1701.com/2022/07/</link><description>Recent content in 2022-07 on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 25 Jul 2022 18:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/2022/07/index.xml" rel="self" type="application/rss+xml"/><item><title>A brief history of Source Control</title><link>https://www.funkysi1701.com/posts/2022/a-brief-history-of-source-control/</link><pubDate>Mon, 25 Jul 2022 18:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/a-brief-history-of-source-control/</guid><description>&lt;p>I have been thinking back to when I started using source control and some of the different tools I have used over the years.&lt;/p>
&lt;p>When I was learning to code it was some time after I had learned the basics that I learnt about source control. Back when I started writing webpages I would have a folder containing all my html, css, images etc and I would FTP these up to my web server. If I made a change to a file I would reupload the file I changed, or reupload all my files to make sure I didn&amp;rsquo;t miss anything.&lt;/p>
&lt;p>It was sometime later that I learnt about source control. I can&amp;rsquo;t remember exactly when, but I suspect it was after I had used it at work. (between 2006 and 2010 as a best guess, my oldest repo says it is 12 years old!)&lt;/p>
&lt;p>Source control (or version control) is the practice of tracking and managing changes to code. These tools provide a running history of code development and help to resolve conflicts when merging.&lt;/p>
&lt;img src="https://www.funkysi1701.com/images/svn.jpg" width="400px" align="left" />
&lt;p>The first source control tool I remember using was subversion. The windows client for this was called &lt;a href="https://tortoisesvn.net/downloads.html" target="_blank" rel="noopener noreferrer">TortoiseSVN&lt;/a>
and is still available today. I know this as my current job has some legacy code which still uses it.&lt;/p>
&lt;p>Back then, to use Subversion you needed to set up a linux server with subversion on it, and you would then connect over your LAN to it from your development machine. This was before the days of github, where everything was hosted on a SaaS service somewhere. I do not remember the process of getting everything setup, but with it being linux, there was no doubt a load of config files to edit, and different dependencies to install.&lt;/p>
&lt;p>Over the years I installed various web interfaces to allow &amp;ldquo;&lt;em>browsing&lt;/em>&amp;rdquo; of source code, some even had bug trackers built in. The ones I can remember are &lt;a href="https://trac.edgewall.org/" target="_blank" rel="noopener noreferrer">Trac&lt;/a>
and &lt;a href="https://www.redmine.org/" target="_blank" rel="noopener noreferrer">Redmine&lt;/a>
. Both look to still be available and you can probably install them if you want to remember way back when.&lt;/p>
&lt;img src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/03/github-octocat.png?resize=300%2C158&amp;ssl=1" width="400px" align="right" />
&lt;p>The first hosted source control tool I remember using was &lt;a href="https://bitbucket.org/product/" target="_blank" rel="noopener noreferrer">bitbucket&lt;/a>
and this as far as I can tell has only ever supported git. So I am guessing I imported my subversion repos into git ones at this point. The reason for bitbucket was chosen was it allowed private repositories for free, at that point github was probably available but only provided public repositories.&lt;/p>
&lt;p>After bitbucket the git repos where moved to Azure DevOps or Visual Studio Team Services as it was called back then. This move was mainly to take advantage of the builds and releases feature and to decommission some aging build servers.&lt;/p>
&lt;img src="https://www.funkysi1701.com/images/azuredevops.png" align="left" width="400px" />
&lt;p>This brings me to today where I have a mix of public repos on github and private repos on Azure DevOps. For building my code I use a mix of github actions and Azure Pipelines. As Microsoft own both services now, there is a fair amount of crossover between the two services, however it is far from certain which service is the future.&lt;/p>
&lt;p>Wow, my code has moved around a lot over the years. From no source control, to subversion, to git, to Bitbucket to Azure DevOps!&lt;/p></description></item><item><title>Visual Studio Keyboard Shortcuts</title><link>https://www.funkysi1701.com/posts/2022/keyboard-shortcuts/</link><pubDate>Tue, 05 Jul 2022 21:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2022/keyboard-shortcuts/</guid><description>&lt;p>I use keyboard shortcuts all the time, mostly without thinking, but they can be quite a time saver especially for frequently used tasks.&lt;/p>
&lt;p>I recently came across this list of Visual Studio ones. &lt;a href="https://docs.microsoft.com/en-us/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view=vs-2022" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-us/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio?view=vs-2022&lt;/a>
&lt;/p>
&lt;p>I was going to do a top ten, but not really sure how you rank keyboard shortcuts, so instead I will mention some of my favourites.&lt;/p>
&lt;h2 id="build-solution">Build solution&lt;a class="anchor ms-1" href="#build-solution">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>If you are using Visual Studio you need to build your code. If you are anything like me, after even the smallest change I want to see what affect that has had so a rebuild is often needed.&lt;/p>
&lt;ul>
&lt;li>Ctrl + Shift + B / Build Solution&lt;/li>
&lt;li>F5 / Run&lt;/li>
&lt;li>Ctrl + F5 / Run with no debugging&lt;/li>
&lt;/ul>
&lt;h2 id="cut-copy-paste-undo-redo">Cut, Copy, Paste, Undo, Redo&lt;a class="anchor ms-1" href="#cut-copy-paste-undo-redo">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Programming is sometimes refered to as copying and pasting from &lt;a href="https://stackoverflow.com/" target="_blank" rel="noopener noreferrer">StackOverflow&lt;/a>
, but they are always times you want to copy and paste stuff so the standard keyboard shortcuts are all here.&lt;/p>
&lt;ul>
&lt;li>Ctrl + C / Copy&lt;/li>
&lt;li>Ctrl + X / Cut&lt;/li>
&lt;li>Ctrl + V / Paste&lt;/li>
&lt;li>Ctrl + Z / Undo&lt;/li>
&lt;li>Ctrl + Y / Redo (or Undo your Undo)&lt;/li>
&lt;/ul>
&lt;h2 id="comments-in-your-code">Comments in your code&lt;a class="anchor ms-1" href="#comments-in-your-code">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Often we like to temporarily comment out a line of code to see what affect it has.&lt;/p>
&lt;ul>
&lt;li>Ctrl + K, Ctrl + C / Comment selection&lt;/li>
&lt;li>Ctrl + K, Ctrl + U /Uncomment selection&lt;/li>
&lt;/ul>
&lt;h2 id="using-statements">Using statements&lt;a class="anchor ms-1" href="#using-statements">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>I like to keep my using statements tidy, and not clutered up with ones that aren&amp;rsquo;t used anymore.&lt;/p>
&lt;ul>
&lt;li>Ctrl + R, Ctrl + G / Remove and Sort Usings&lt;/li>
&lt;/ul>
&lt;h2 id="go-to-implementation">Go to Implementation&lt;a class="anchor ms-1" href="#go-to-implementation">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>I like to move quickly between methods that a class is calling to find out what is happening so the go to implementation and go to definition shortcuts are very useful. I tend to use the right click option more than the sortcut, but I would save myself a heap of time if I learnt these shortcuts.&lt;/p>
&lt;ul>
&lt;li>F12 / Go to Definition&lt;/li>
&lt;li>Alt + F12 / Peek Definition&lt;/li>
&lt;li>Ctrl + F12 / Go to Implementation&lt;/li>
&lt;/ul>
&lt;h2 id="find-file-in-solution-explorer">Find file in Solution Explorer&lt;a class="anchor ms-1" href="#find-file-in-solution-explorer">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>You are editing a file and you have no idea what folder it is in the Solution Explorer. There is a shortcut to find out where you are.&lt;/p>
&lt;p>Ctrl + [, S / Select Active File in Solution Explorer&lt;/p>
&lt;h2 id="search">Search&lt;a class="anchor ms-1" href="#search">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Finding references or a certain string is a common activity&lt;/p>
&lt;ul>
&lt;li>Ctrl + F / Find in current file&lt;/li>
&lt;li>Ctrl + H / Replace&lt;/li>
&lt;li>Ctrl + Shift + F / Find in all files&lt;/li>
&lt;/ul>
&lt;h2 id="visual-studio-tries-to-be-helpful">Visual Studio tries to be helpful&lt;a class="anchor ms-1" href="#visual-studio-tries-to-be-helpful">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Often Visual Studio will try and be helpful with a lightbulb or similar icon, instead of clicking you can press this shortcut to&lt;/p>
&lt;ul>
&lt;li>Ctrl + . / Show Visual Studio suggestion&lt;/li>
&lt;/ul>
&lt;h2 id="learn-some-more">Learn some more&lt;a class="anchor ms-1" href="#learn-some-more">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>As I said before keyboard shortcuts are great time savers. Go check out the complete list and share with me the ones you found most useful.&lt;/p></description></item></channel></rss>