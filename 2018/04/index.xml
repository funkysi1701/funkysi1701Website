<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2018-04 on Funky Si's Blog</title><link>https://www.funkysi1701.com/2018/04/</link><description>Recent content in 2018-04 on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 30 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/2018/04/index.xml" rel="self" type="application/rss+xml"/><item><title>Let’s Encrypt is awesome</title><link>https://www.funkysi1701.com/posts/2018/lets-encrypt-is-awesome/</link><pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2018/lets-encrypt-is-awesome/</guid><description>&lt;p>Let’s Encrypt is a free way to get a SSL certificate onto your website and until recently I had never tried it. It is very easy and I think it is awesome.&lt;/p>
&lt;p>IIS is the web server software the Microsoft include with Windows 10 and Windows Server. I have it installed on my laptop and it displays the default IIS page.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2018/04/iis.jpg?resize=768%2C464&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>It is not really a good idea to host websites on your laptop, use a dedicated web server, or host with a hosting company, however the techniques are the same and it gives me something to write about!&lt;/p>
&lt;p>In order to point a domain name at what IIS on my machine was serving up I did the following:&lt;/p>
&lt;ul>
&lt;li>Do a google search for “whats my IP”, this will return your public IP. Most residential ISPs use dynamic IPs so it may change over time, (which is another reason not to host a website on your laptop!)&lt;/li>
&lt;li>Add an A record on a domain with the IP address you have just got&lt;/li>
&lt;li>Your public IP most likely points at your router not your laptop so enable port forwarding of port 80 and port 443 to the internal IP of your laptop (something like 192.168.0.11 etc)&lt;/li>
&lt;/ul>
&lt;p>Now comes the fun Let’s Encrypt stuff!&lt;/p>
&lt;p>First you need a Let’s Encrypt client, there are a lot of them out there mostly for linux flavours, however a bit of googling found a windows one. Go to &lt;a href="https://github.com/PKISharp/win-acme/releases" target="_blank" rel="noopener noreferrer">https://github.com/PKISharp/win-acme/releases&lt;/a>
and download the zip file and unzip it.&lt;/p>
&lt;p>Run the executable from the zip file and follow the onscreen prompts.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2018/04/letsencrypt.jpg?resize=768%2C480&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Press N to create a new certificate.&lt;/p>
&lt;p>Then press 1 to bind to single website found in your IIS setup&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2018/04/letsencrypt2.jpg?resize=768%2C686&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>And now magically Let’s Encrypt knows what you have setup in IIS.&lt;/p>
&lt;p>Now all you need to do is enter an email address incase a renewal fails and agree to the let’s encrypt terms and you are all setup.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2018/04/letsencrypt3.jpg?resize=768%2C920&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>How awesome and easy is that for getting your websites working with a SSL certificate. If you have IIS configured on a server, give it a try and you can SSL all your things.&lt;/p></description></item><item><title>DNS for Developers</title><link>https://www.funkysi1701.com/posts/2018/dns-for-developers/</link><pubDate>Mon, 09 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2018/dns-for-developers/</guid><description>&lt;p>DNS is the backbone of the internet and as such I believe every developer should know something about the basics and not just leave it for the sysadmin to sort.&lt;/p>
&lt;h3 id="what-is-dns">What is DNS?&lt;a class="anchor ms-1" href="#what-is-dns">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>DNS or Domain Name System is what translates Domain names to IP addresses and vice versa.&lt;/p>
&lt;h3 id="wait-what-is-an-ip-address-and-what-are-domain-names">Wait what is an IP address and what are domain names?&lt;a class="anchor ms-1" href="#wait-what-is-an-ip-address-and-what-are-domain-names">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>You do realise this is a developer blog? An IP address is a unique address on the internet and a domain name is a user friendly label for one or more of these.&lt;/p>
&lt;p>An example might be google.com which for me resolves to 216.58.204.14&lt;/p>
&lt;h3 id="how-it-works">How it works&lt;a class="anchor ms-1" href="#how-it-works">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2018/04/dns-rev-1.gif?resize=360%2C320&amp;amp;ssl=1" loading="lazy"
/>
When your browser makes a request to google.com it makes a request to your ISPs DNS Servers. This resolves google.com to 216.58.204.14&lt;/p>
&lt;p>In more detail your ISPs DNS server will forward the DNS query to another DNS server and will cache the results for a set amount of time. This is the TTL or Time To Live. Next time the ISP DNS Server will be able to reply directly without needing to forward requests.&lt;/p>
&lt;p>This forwarding and caching is what makes making a DNS change not instantaneous. The TTL needs to be reached so that no results are still being fetched from the cache of DNS servers across the globe.&lt;/p>
&lt;h3 id="dns-records">DNS Records&lt;a class="anchor ms-1" href="#dns-records">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Now we know roughly how DNS works let’s look at the most common type of records&lt;/p>
&lt;h4 id="a">A&lt;a class="anchor ms-1" href="#a">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>A (Host) records are the most simple records which translate domain names to IPs&lt;/p>
&lt;p>eg &lt;a href="https://www.google.com" target="_blank" rel="noopener noreferrer">www.google.com&lt;/a>
to 216.58.204.14&lt;/p>
&lt;h4 id="cname">CNAME&lt;a class="anchor ms-1" href="#cname">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>A CNAME (Canonical Name) record is different to an A record in that it maps a domain name to another domain name when no A record exists.&lt;/p>
&lt;p>eg &lt;a href="https://www.google.com" target="_blank" rel="noopener noreferrer">www.google.com&lt;/a>
to somethingelse.google.com&lt;/p>
&lt;p>Typically Azure makes use of CNAMEs for many of its services especially adding a custom domain name&lt;/p>
&lt;h4 id="mx">MX&lt;a class="anchor ms-1" href="#mx">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>MX stands for Mail Exchange and is used for configuring email&lt;/p>
&lt;h4 id="name-server">Name Server&lt;a class="anchor ms-1" href="#name-server">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>Every domain has a number of Name Servers which tells you what servers control the DNS settings for that domain. If you change your Name Servers then the new Name servers will be where you can change your DNS settings.&lt;/p>
&lt;p>If you want to use a service like &lt;a href="https://dnsimple.com/" target="_blank" rel="noopener noreferrer">DNSimple&lt;/a>
instead of &lt;a href="https://www.123-reg.co.uk/" target="_blank" rel="noopener noreferrer">123reg&lt;/a>
or where ever you registered your domain then all you need to do is change your Name servers.&lt;/p>
&lt;h4 id="aaaa">AAAA&lt;a class="anchor ms-1" href="#aaaa">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>Like A record but for ipv6&lt;/p>
&lt;h3 id="what-next">What next?&lt;a class="anchor ms-1" href="#what-next">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Want to put some different DNS records into practise? Buy a domain name and publish some content to it. Check out my previous post about &lt;a href="https://www.funkysi1701.com/creating-dns-records-programmatically">programmatically adding records&lt;/a>
. Want an SSL certificate? Get a wildcard one and then you can apply it to any subdomain you add to your domain.&lt;/p>
&lt;p>If you have a new website you want to publish consider which of the following is better:&lt;/p>
&lt;p>&lt;a href="https://www.example.com/newsite" target="_blank" rel="noopener noreferrer">https://www.example.com/newsite&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://newsite.example.com" target="_blank" rel="noopener noreferrer">https://newsite.example.com&lt;/a>
&lt;/p>
&lt;p>I much prefer the second option, it looks cleaner, there is no potential conflict with the parent site, no subfolder issues between production and development.&lt;/p></description></item><item><title>Code Reviews</title><link>https://www.funkysi1701.com/posts/2018/codereviews/</link><pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2018/codereviews/</guid><description>&lt;p>Reviewing code is a great habit to get into. Code reviews help share knowledge between your team members and help catch bugs before they get into production. But how do you get into the habit of reviewing and avoid the we don’t have time to do this mentality?&lt;/p>
&lt;p>Visual Studio Team Services (VSTS) has some great options that can help make code reviews second nature.&lt;/p>
&lt;h4 id="pull-requests">Pull Requests&lt;a class="anchor ms-1" href="#pull-requests">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>A lot of source control systems have the concept of pull requests. This is where you request others to review your code usually in a branch and if they approve it, merge it into a main branch.&lt;/p>
&lt;p>To create a pull request in VSTS go to the Code section and select Pull Requests. Often VSTS will make a suggestion of what branch to make a pull request for, if you don’t see this just click the New Pull request button.&lt;/p>
&lt;p>Select a branch you want to merge from and a branch that should be merged into (usually you merge into master from a feature branch). Give your pull request a title and description and select who should review your code, this can either be an individual or a group of people. You can also review all the changes that will be reviewed so you can make any last minute changes before it is reviewed.&lt;/p>
&lt;p>Now if you are anything like me you want your code merged in as soon as you have created your pull request and there is nothing stopping you reviewing your own code and clicking approve and merge on your own pull request. However &lt;a href="https://docs.microsoft.com/en-us/vsts/git/branch-policies?view=vsts" target="_blank" rel="noopener noreferrer">branch policies&lt;/a>
is a way around this problem.&lt;/p>
&lt;h4 id="branch-policies">Branch Policies&lt;a class="anchor ms-1" href="#branch-policies">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h4>
&lt;p>&lt;img class="img-fluid" alt="Branch Policy" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2018/04/save-policy-changes.png?resize=599%2C901&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Branch policies allow you to specify how your code gets merged in.&lt;/p>
&lt;p>Go to the list of branches in VSTS and select branch policy and you will see a whole host of options to customise the merge process. If you do this on the master branch you will not be able to commit any changes to master without it going through a pull request.&lt;/p>
&lt;p>The first option enables you to select how many reviewers are needed on your code. If no one else works on your project best not setting this, but for everyone else setting at least one person to review your code is a great practice.&lt;/p>
&lt;p>Next you can ensure that your pull request is linked to a work item, this helps keep ensure you are actually fixing issues and not just making change for the sake of it.&lt;/p>
&lt;p>Check for comment resolution is a good setting to enable. This ensures that if your reviewer has commented about you needing to change this line here, it ensures that you do.&lt;/p>
&lt;p>Enforce merge strategy allows you to choose between fast forward merge or squash merge.&lt;/p>
&lt;p>Build validation enables the code to be built using a build definition you have configured. This is a great way to check code builds or tests pass before it gets merged in.&lt;/p>
&lt;p>The last two options allow you to specify code reviewers and third party external services.&lt;/p></description></item></channel></rss>