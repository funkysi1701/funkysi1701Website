<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2017-10 on Funky Si's Blog</title><link>https://www.funkysi1701.com/2017/10/</link><description>Recent content in 2017-10 on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 31 Oct 2017 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/2017/10/index.xml" rel="self" type="application/rss+xml"/><item><title>Interfaces are cool!</title><link>https://www.funkysi1701.com/posts/2017/interfaces-are-cool/</link><pubDate>Tue, 31 Oct 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/interfaces-are-cool/</guid><description>&lt;p>A while back I &lt;a href="https://www.funkysi1701.com/posts/interfaces/">blogged&lt;/a>
about learning about interfaces as I didn’t really understand the value of them. I do now.&lt;/p>
&lt;p>I created an application that used interfaces so I could learn how it worked. I created a Logger Interface and created multiple classes that implemented that interface so I could swap out the different implementations easily. I created a SQL Logger and a File Logger and my code could be written and be completely unaware of which implementation it was using.&lt;/p>
&lt;p>This application uses SQL Azure and so I have a monthly bill to pay. Wouldn’t it be cool if I could reduce this bill? How about using the cheaper table storage instead?&lt;/p>
&lt;p>&lt;strong>Easy!&lt;/strong>&lt;/p>
&lt;p>Create a new class that implements my interface and all I need to do is write the three methods defined in my interface and I can swap from SQL Azure to table storage.&lt;/p>
&lt;p>Another benefit to interfaces is testing. Say I have an interface called inotification for sending notifications, I can have several implementations of this email, twitter, slack etc&lt;/p>
&lt;p>None of these implementations should be used in unit tests, as you don’t want a tweet being sent every time you run your tests. Why not create an implementation that simply returns something for each method call and doesn’t actually do anything. I can then run my tests with my fake implementation which tests my code logic but not the implementation I have chosen (this can be tested later on with integration tests or user testing if required).&lt;/p>
&lt;p>This is pretty much all I have to say about interfaces. I just like how I can swap different implementations.&lt;/p>
&lt;p>It does take a bit of work to get the interface setup. I found that when writing the second implementation the interface would need to change slightly, mostly as it was badly designed to begin with. I think for beginners there may be some value to writing multiple implementations of an interface so you can be sure your interface is good, however I am sure with experience this will not be required.&lt;/p></description></item><item><title>Creating DNS records programmatically</title><link>https://www.funkysi1701.com/posts/2017/creating-dns-records-programmatically/</link><pubDate>Mon, 16 Oct 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/creating-dns-records-programmatically/</guid><description>&lt;p>DNS is the backbone of the internet. It converts domain names into IP addresses. But how can we do clever things with it?&lt;/p>
&lt;p>Making DNS changes has always been a pain. You have to remember what company you registered your domain name with, then locate the login details for their website, login and fill in some web form and wait for the changes to replicate across the internet.&lt;/p>
&lt;p>There are various websites that assign you a custom subdomain name like name.domain.com, obviously they must do this programmatically, they don’t have a guy following the above process.&lt;/p>
&lt;p>Lets see how we could do this.&lt;/p>
&lt;p>My first thought was to make use of the DNSimple API. &lt;a href="https://developer.dnsimple.com/v2/" target="_blank" rel="noopener noreferrer">https://developer.dnsimple.com/v2/&lt;/a>
The API allows all sort of DNS changes to be made, however this is a paid service so let’s look at other options.&lt;/p>
&lt;p>Azure now has a DNS section. You can go to the portal, add a DNS zone, and then add as many A, CNAME and MX records as you need. This is of course no better than doing it manually.&lt;/p>
&lt;p>Azure offers a &lt;a href="https://docs.microsoft.com/en-us/azure/dns/dns-sdk" target="_blank" rel="noopener noreferrer">SDK&lt;/a>
and an example Visual Studio project. Lets look at how it works.&lt;/p>
&lt;p>First you need to setup some credentials to use your Azure subscription. The easiest way to do this is with powershell.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Login&lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>AzureRmAccount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$sp = New-AzureRmADServicePrincipal &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>DisplayName exampleapp &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>Password &lt;span style="color:#e6db74">&amp;#34;{provide-password}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sleep 20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>New-AzureRmRoleAssignment &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>RoleDefinitionName Contributor &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>ServicePrincipalName $sp.ApplicationId
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a AD Service Principal which has access to your Azure subscription.&lt;/p>
&lt;p>You need to get the following IDs from the Azure portal.&lt;/p>
&lt;p>subscriptionId for your subscription&lt;br>
tenantId or the Azure AD Directory ID&lt;br>
applicationId of the service principal created above&lt;br>
password you entered into the powershell script above&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> serviceCreds = &lt;span style="color:#66d9ef">await&lt;/span> ApplicationTokenProvider.LoginSilentAsync(tenantId, clientId, secret);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> dnsClient = &lt;span style="color:#66d9ef">new&lt;/span> DnsManagementClient(serviceCreds);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnsClient.SubscriptionId = subscriptionId;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSetParams = &lt;span style="color:#66d9ef">new&lt;/span> RecordSet();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.TTL = &lt;span style="color:#ae81ff">3600&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.ARecords = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;ARecord&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.ARecords.Add(&lt;span style="color:#66d9ef">new&lt;/span> ARecord(&lt;span style="color:#e6db74">&amp;#34;1.2.3.4&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSet = &lt;span style="color:#66d9ef">await&lt;/span> dnsClient.RecordSets.CreateOrUpdateAsync(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A, recordSetParams);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above code connects to Azure and creates an A record for test.funkysi1701.com that points at the ip address 1.2.3.4.&lt;/p>
&lt;p>Other DNS records can be created in a similar way.&lt;/p>
&lt;p>The above example creates a new RecordSet but you can use the following to delete or get existing records.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSet = dnsClient.RecordSets.Get(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnsClient.RecordSets.Delete(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I have found out that I can write a console app to edit my DNS records I need to change the nameservers for all my domains so I can take advantage of this new feature.&lt;/p></description></item><item><title>Discovery – My thoughts so far</title><link>https://www.funkysi1701.com/posts/2017/discovery-my-thoughts-so-far/</link><pubDate>Tue, 10 Oct 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/discovery-my-thoughts-so-far/</guid><description>&lt;p>I tried to resist but I am going to have to write about the new Star Trek series Discovery. Warning this post is going to include SPOILERS. If you read on you have been warned.&lt;/p>
&lt;p>I watched the first two episodes of the brand new Star Trek TV show. As I am an international viewer I used Netflix, if you are from the US you need to use CBS All Access. &lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/05/DAD0hTKUAAAUkTP.jpg?resize=662%2C366&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I have heard a lot of complaining that the show is not free to watch. CBS is making Star Trek Discovery to make money, if they don’t make money they will stop making it. Its as simple as that.&lt;/p>
&lt;p>&lt;a href="https://www.netflix.com" target="_blank" rel="noopener noreferrer">Netflix&lt;/a>
costs £5.99 per month and &lt;a href="https://www.cbs.com/all-access/" target="_blank" rel="noopener noreferrer">CBS All Access&lt;/a>
costs $5.99 per month. I don’t believe this is a lot of money. The 5.99 above allows you to watch any of the 726 Star Trek episodes at any time of day whenever you want as many times as you want, plus you have access to all the other movies or TV shows available. I don’t think this is too much to ask.&lt;/p>
&lt;p>Back to Discovery. I loved it! It felt like Star Trek. I had feared it might only share the name and would be an action filled TV show that had little in common with what he had seen before. I was wrong this is definitely a show that can proudly call itself Star Trek.&lt;/p>
&lt;p>&lt;strong>The Klingons&lt;/strong>&lt;/p>
&lt;p>When it was first announced that the Klingons would feature in the new show I was a bit “meh”. We had done lots with the Klingons before and they had never been my favourite alien race. &lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/09/star-trek-discovery-klingons-1002567-1280x0.jpg?resize=300%2C165&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>The look of the Klingons was also going to be changed, I have to admit this didn’t bother me. Klingons have had their look updated before. In 1966 Klingons had dark faces and smooth foreheads, in 1979 the forehead ridges were added as the first Star Trek movie was made, and now Discovery has removed all hair from Klingons. I can explain it away as productional changes, I don’t need an on screen explanation like we had on Enterprise (or even DS9).&lt;/p>
&lt;p>What I have seen so far is a menacing alien race that fits with what we have seen before with lots of references to honor, Kahless and speaking Klingon. I must admit reading all the subtitles is getting a bit tiresome, but that is a minor issue.&lt;/p>
&lt;p>&lt;strong>Conflict&lt;/strong>&lt;/p>
&lt;p>Historically Star Trek has not featured conflict between the main starfleet characters due to the idea that humanity has evolved beyond this. DS9 got round this by having Odo and Kira who are not starfleet characters so can have a little bit of conflict. Discovery has completely abandoned this idea.&lt;/p>
&lt;p>In the pilot episode, the Michael Burnham commits mutiny on her captain, even attacking her with a vulcan nerve pinch. In the third episode we finally meet the discovery crew. Gone are the TNG days where the ships crew are like a family, I am not sure I can think of a single character that would call another character “friend”. We are in a time of war so this would be expected, however I do hope we see deepening friendships form between characters.&lt;/p>
&lt;p>I am OK with the change to feature more conflict. I must admit the darkness of the third episode, did stop to make me think a bit, however by the fourth episode I was won over.&lt;/p>
&lt;p>&lt;strong>Cast&lt;/strong>&lt;/p>
&lt;p>The story is concentrated around Michael Burnham, so I do worry that other characters won’t get a look in. However from what I have seen Michael Burnham is a great character. She is a strong female character, with a intriguing back story relating to Sarek and possibly also Spock.&lt;/p>
&lt;p>Saru the alien character on the show, played by the very tall Doug Jones is great. From the trailers he was all about sensing death, but there is far more to him than that. I am looking forward to learn more about him and his threat ganglia.&lt;/p>
&lt;p>As the show has gone on we have started to learn about the other characters like Captain Lorca, Tilly and Paul Stamets.&lt;/p>
&lt;p>&lt;strong>Title Sequence&lt;/strong>&lt;/p>
&lt;p>I don’t like the opening title sequence, it feels very cheap like a draft version which hasn’t been finished yet. I was looking forward to a title sequence that would show off the USS Discovery, maybe like TNG where it warps around our own solar system. What we see is some of the tech that features in Star Trek which is nice but I want more. The theme tune while great that it features parts from the classic theme doesn’t stand on its own. I can hum all the other TV shows themes, and now after 4 episodes would struggle to do that.&lt;/p>
&lt;p>However I expect that after a while I will grow to like this more.&lt;/p>
&lt;p>&lt;strong>Overall&lt;/strong>&lt;/p>
&lt;p>I like Discovery and I will keep watching it. I want to find out what happens to the characters. There are no annoying characters like other shows have had. There is character development, none of the characters are going to finish where they started. I want more friendship between characters, but I expect that will come, I want more exploring and doing Star Trek stuff, but most of all I want more episodes, roll on next weeks show.&lt;/p>
&lt;p>Other things I noticed&lt;/p>
&lt;ul>
&lt;li>Sound effects on the bridge are awesome, it makes me feel at home&lt;/li>
&lt;li>The USS Discovery doesn’t feature in the first two episodes despite being the title of the show.&lt;/li>
&lt;li>Others have noted that Captain Georgiou has books on her shelf which feature classic episode titles&lt;/li>
&lt;/ul></description></item></channel></rss>