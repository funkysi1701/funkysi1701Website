<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2017 on Funky Si's Blog</title><link>https://www.funkysi1701.com/2017/</link><description>Recent content in 2017 on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 28 Dec 2017 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/2017/index.xml" rel="self" type="application/rss+xml"/><item><title>Looking back at 2017</title><link>https://www.funkysi1701.com/posts/2017/looking-back-at-2017/</link><pubDate>Thu, 28 Dec 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/looking-back-at-2017/</guid><description>&lt;p>As 2017 starts to draw to a close let’s look at some of the highlights from the past year.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Edward" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2015/07/DSC_0376-e1510563039193-225x300.jpg?resize=225%2C300&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;ol>
&lt;li>Edward&lt;/li>
&lt;/ol>
&lt;p>In November I became a father again and celebrated the arrival of Edward into the world. Before the birth I was worried how well my first son James would adapt to the new arrival but I am happy to say I didn’t need to, he mostly ignores the new arrival.&lt;/p>
&lt;ol start="2">
&lt;li>Star Trek&lt;/li>
&lt;/ol>
&lt;p>In September the latest Star Trek TV series Discovery arrived on Netflix. I have been very positive so far about the show, I am still positive however there are things that annoy me about the new show, however I am keen to see the next episode each week so they are definitely doing something right.&lt;/p>
&lt;ol start="3">
&lt;li>Office move&lt;/li>
&lt;/ol>
&lt;p>In May I helped my employer move to brand new &lt;a href="https://funkysi1701.com/office-move" target="_blank" rel="noopener noreferrer">offices&lt;/a>
. This was a lot of hard work, but everything went as planned and our new home is great.&lt;/p>
&lt;ol start="4">
&lt;li>Side projects &lt;img class="img-fluid" alt="Google Play" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/08/googleplay.jpg?resize=300%2C300&amp;amp;ssl=1" loading="lazy"
/>
&lt;/li>
&lt;/ol>
&lt;p>I blogged in February about having a side project but it wasn’t until later in the year that this solidified into what I am working on now. It started as a way to understand &lt;a href="https://funkysi1701.com/interfaces" target="_blank" rel="noopener noreferrer">interfaces&lt;/a>
this then led to learning Xamarin and creating an android app to help promote this blog. Troy Hunt expanded his HIBP API to include passwords that have been in data breaches, I then started working on &lt;a href="https://funkysi1701.com/pwned-pass--available-from-the-play-store" target="_blank" rel="noopener noreferrer">pwned passwords&lt;/a>
which is a simple android frontend for this.&lt;/p>
&lt;ol start="5">
&lt;li>Learning R&lt;/li>
&lt;/ol>
&lt;p>In Feb I also experimented with a new programming language &lt;a href="https://funkysi1701.com/learning-r" target="_blank" rel="noopener noreferrer">R&lt;/a>
. It started with a problem about converting exchange rates and ended with a SQL stored procedure that executed some R code, I still want to learn lots more but it was a good example of the sorts of thing you can build with R.&lt;/p>
&lt;ol start="6">
&lt;li>DNS programmatically&lt;/li>
&lt;/ol>
&lt;p>One of my most successful blogs was about how you can create &lt;a href="https://dev.to/funkysi1701/creating-dns-records-programmatically-1o3c-temp-slug-3062796" target="_blank" rel="noopener noreferrer">dns&lt;/a>
records within your application eg sites that have yourname.domain in the url. It was a great chance to look at how dns works and learn more about what azure can do to manage this. I want to expand on this and build something.&lt;/p>
&lt;p>So that was 2017, for some ideas about what 2018 might have in store for me look out for my next blog post.&lt;/p></description></item><item><title>Getting started with Azure Table Storage</title><link>https://www.funkysi1701.com/posts/2017/azure-table-storage/</link><pubDate>Sun, 17 Dec 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/azure-table-storage/</guid><description>&lt;p>Azure Table storage is cheap way to store data, however it has some drawbacks that you should be aware of.&lt;/p>
&lt;p>Azure Table storage is a simple way to store NoSQL data with key/attribute pairs. I am very familiar with storing data in SQL databases and would still choose SQL over Table storage, however Table storage is significantly cheaper so could be worth investigating depending on your project.&lt;/p>
&lt;p>&lt;a href="https://www.troyhunt.com/working-with-154-million-records-on/" target="_blank" rel="noopener noreferrer">Troy Hunt&lt;/a>
makes use of Table storage for his Have I been pwned? website so there are projects out there that make use of it to great affect.&lt;/p>
&lt;p>To work with Table storage you need to use a nuget package &lt;strong>WindowsAzure.Storage&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Install-Package WindowsAzure.Storage&lt;/strong>&lt;/p>
&lt;p>To load data from a Table in Azure Table storage I use the following code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>CloudStorageAccount storageAccount = CloudStorageAccount.Parse(connectionString);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTableClient tableClient = storageAccount.CreateCloudTableClient();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTable table = tableClient.GetTableReference(&lt;span style="color:#e6db74">&amp;#34;tablename&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TableOperation retrieveOperation = TableOperation.Retrieve&amp;lt;Entity&amp;gt;(PartitionKey, Rowkey);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>table.CreateIfNotExists();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TableResult retrievedResult = table.Execute(retrieveOperation);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Example eg = &lt;span style="color:#66d9ef">new&lt;/span> Example();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (retrievedResult.Result != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eg.ID = ((Entity)retrievedResult.Result).Id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eg.Date = ((Entity)retrievedResult.Result).Date;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> eg;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You need to create a class (called Entity in the example above) derived from TableEntity which defines the Partitionkey and Rowkey, plus and other columns you want to store in table storage. The row key and partition key uniquely identify the data in the table, think of this as the primary key of the table if you are used to SQL. This class must also contain a parameterless constructor.&lt;/p>
&lt;p>This is the only way to retrieve data, using the partitionkey and rowkey. If you want to retrieve a specific piece of data you would need to retrieve all rows and then search them for what you need. For me this is not a big problem as I only have 150 rows but if you have millions of rows you may need to think carefully how to use this.&lt;/p>
&lt;p>To save data I use a very similar piece of code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>CloudStorageAccount storageAccount = CloudStorageAccount.Parse(path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTableClient tableClient = storageAccount.CreateCloudTableClient();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CloudTable table = tableClient.GetTableReference(&lt;span style="color:#e6db74">&amp;#34;tablename&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Entity post = &lt;span style="color:#66d9ef">new&lt;/span> Entity(ID, DateTime.Now);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TableOperation insertOperation = TableOperation.InsertOrReplace(post);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>table.CreateIfNotExists();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>table.Execute(insertOperation);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I create a Entity object and then pass this as a parameter into the InsertOrReplace method.&lt;/p>
&lt;p>To delete data it is also very similar, you create an entity object and pass this as a parameter to the Delete method.&lt;/p>
&lt;p>When debugging my table storage code I found the &lt;a href="https://azure.microsoft.com/en-gb/features/storage-explorer/" target="_blank" rel="noopener noreferrer">Azure Storage Explorer&lt;/a>
very useful for seeing what data actually existed in the table and what might be throwing an error, usually something wrong with my Entity.&lt;/p>
&lt;p>I mentioned earlier that Table Storage was cheaper than SQL Azure. Well for my simple playing about with things I have found my monthly charge of £10+ has been reduced to £1+ If I were to build anything that is more than just me learning about how it works I would probably continue to use SQL but for the cost of learning new tech it is well worth giving table storage a try.&lt;/p></description></item><item><title>How to get Zero Code Changes outside of Source Control</title><link>https://www.funkysi1701.com/posts/2017/get-zero-code-changes-outside-source-control/</link><pubDate>Mon, 13 Nov 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/get-zero-code-changes-outside-source-control/</guid><description>&lt;p>Source control is bread and butter for web developers, however not so much for SQL developers and other business people. One of my goals for the coming year is to get the whole of my team using source control processes.&lt;/p>
&lt;p>One of the arguments against using source control is there will always be a few exceptions where it won’t be used. Lets look at a few scenarios to help make the case for source control.&lt;/p>
&lt;p>&lt;strong>Scenario One&lt;/strong>&lt;/p>
&lt;p>Web Dev 1 makes a change in production to fix an issue and doesn’t use source control. Web Dev 2 is working on a new feature and makes use of source control. He is given the sign-off to deploy his new feature and in the process undoes Web Dev 1’s fix.&lt;/p>
&lt;p>Management blames Web Dev 2 as they “broke” stuff during the deployment. Web Dev 2 doesn’t understand what happened and Web Dev 1 is oblivious to the entire scenario despite in reality being part of the problem.&lt;/p>
&lt;p>&lt;strong>Scenario Two&lt;/strong>&lt;/p>
&lt;p>A SQL Dev works all night to fix a problem. He deploy to production and doesn’t notice a missed where clause due to lack of sleep.&lt;/p>
&lt;p>—&lt;/p>
&lt;p>Let’s look at these two scenarios done with the whole team buying into source control.&lt;/p>
&lt;p>&lt;strong>Scenario One&lt;/strong>&lt;/p>
&lt;p>Web Dev 1 makes a change in production to fix an issue and also commits to source control. This takes him an extra 5 minutes (if that!) Web Dev 2 is working on a new feature and makes use of source control. He is given the sign-off to deploy his new feature and in the process merges Web Dev 1’s fix before he deploys to production.&lt;/p>
&lt;p>Management is happy with Web Dev 1, nothing is broken and new functionality has made the website better not worse.&lt;/p>
&lt;p>&lt;strong>Scenario Two&lt;/strong>&lt;/p>
&lt;p>A SQL Dev works all night to fix a problem. He deploy to production and doesn’t notice a missed where clause due to lack of sleep, he also commits to source control this takes him an extra 5 minutes (if that!).&lt;/p>
&lt;p>In the morning a colleague looks through the commits made during the night and queries the missing where clause. A fix is made in source control and deployed, management and the client are unaware that a problem was created and fixed.&lt;/p>
&lt;p>—&lt;/p>
&lt;p>These are simple scenarios but I cannot think of any situation where the outcome would be better to not use source control. These examples assume no continuous deployment, adding this to the system before every team has bought into source control would cause bugs and issues all over the place.&lt;/p>
&lt;p>However with a team that is 100% behind source control continuous deployment can achieve an amazing productivity boost. After every commit code could be automatically tested, reviewed by other members of the team and deployed to test environments for further analysis. Only tested code that has been reviewed can get anywhere near production environments.&lt;/p>
&lt;p>Having said all this there are ways especially on the SQL side to mitigate loosing changes while you work on training individuals and convincing management. Before any code is deployed to production do a schema compare. If you only see changes you have made you can proceed, if you don’t shout at your team.&lt;/p>
&lt;p>&lt;strong>Advantages&lt;/strong>&lt;/p>
&lt;p>Code Reviews&lt;br>
Team awareness of what is being changed&lt;br>
History of changes&lt;br>
Smoother Deployments&lt;br>
Automation&lt;br>
Better Teamwork&lt;br>
Diff changes between different versions&lt;br>
Many more&lt;/p>
&lt;p>&lt;strong>Disadvantages&lt;/strong>&lt;/p>
&lt;p>Time to learn tools&lt;br>
Remember to commit changes&lt;br>
Technologies that use binary files harder to version control&lt;/p></description></item><item><title>SQL with Visual Studio Code</title><link>https://www.funkysi1701.com/posts/2017/sql-visual-studio-code/</link><pubDate>Mon, 06 Nov 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/sql-visual-studio-code/</guid><description>&lt;p>Writing SQL queries is typically done with SQL Management Studio (SSMS). However this tool is a bit of a beast so let’s look at how you could use Visual Studio Code instead.&lt;/p>
&lt;p>Visual Studio Code is a free text editor but it is so much more than just a text editor. VS Code can be downloaded from &lt;a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">https://code.visualstudio.com/Download&lt;/a>
&lt;/p>
&lt;p>To work with SQL Server download the mssql extension. Press &lt;strong>CTRL+SHIFT+P&lt;/strong> and then Select &lt;strong>Install Extension&lt;/strong> and type &lt;strong>mssql&lt;/strong>.&lt;/p>
&lt;p>Intellisense in Visual Studio Code is brilliant, better than SSMS. Lets look at how to get it all set up.&lt;/p>
&lt;p>Create a new file and set the language type to SQL (Press &lt;strong>CTRL+K,M&lt;/strong> )&lt;/p>
&lt;p>Open the command palette, **CTRL+SHIFT+P ** and type SQL to show the mssql commands. Select the Connect command.&lt;/p>
&lt;p>Then select &lt;strong>Create Connection Profile&lt;/strong> , this creates a profile to connect with your SQL Server. Follow the prompts to get it all setup.&lt;/p>
&lt;p>Look in the bottom right corner of the status bar and you should see you are connected.&lt;/p>
&lt;p>Now if you type sql you will see a long list of SQL code snippets that you could use.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/11/vscode-sql-snippets.png?resize=662%2C348&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Choose a snippet to create, and edit it as required. When you are happy press **CTRL+SHIFT+E ** to execute.&lt;/p>
&lt;p>This is basically all there is to it. However this is an incredibly powerful way of working, the intellisense instantly tells you what database objects you can use in your query and there is a wealth of different snippets you can use.&lt;/p>
&lt;p>When returning data you get a similar view to SSMS but you can save as Excel, CSV or JSON.&lt;/p>
&lt;p>SSMS is a very graphical way of doing things, you can double click a table and see its columns or indexes. VS Code relies on TSQL commands but you have access to exactly the same information.&lt;/p>
&lt;p>For more information about VS Code and the mssql extension check out &lt;a href="https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-develop-use-vscode" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-develop-use-vscode&lt;/a>
&lt;/p></description></item><item><title>SQL with Visual Studio Code</title><link>https://www.funkysi1701.com/posts/2017/sql-with-visual-studio-code/</link><pubDate>Mon, 06 Nov 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/sql-with-visual-studio-code/</guid><description>&lt;p>Writing SQL queries is typically done with SQL Management Studio (SSMS). However this tool is a bit of a beast so let’s look at how you could use Visual Studio Code instead.&lt;/p>
&lt;p>Visual Studio Code is a free text editor but it is so much more than just a text editor. VS Code can be downloaded from &lt;a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">https://code.visualstudio.com/Download&lt;/a>
&lt;/p>
&lt;p>To work with SQL Server download the mssql extension. Press &lt;strong>CTRL+SHIFT+P&lt;/strong> and then Select &lt;strong>Install Extension&lt;/strong> and type &lt;strong>mssql&lt;/strong>.&lt;/p>
&lt;p>Intellisense in Visual Studio Code is brilliant, better than SSMS. Lets look at how to get it all set up.&lt;/p>
&lt;p>Create a new file and set the language type to SQL (Press &lt;strong>CTRL+K,M&lt;/strong> )&lt;/p>
&lt;p>Open the command palette, &lt;strong>CTRL+SHIFT+P&lt;/strong> and type SQL to show the mssql commands. Select the Connect command.&lt;/p>
&lt;p>Then select &lt;strong>Create Connection Profile&lt;/strong> , this creates a profile to connect with your SQL Server. Follow the prompts to get it all setup.&lt;/p>
&lt;p>Look in the bottom right corner of the status bar and you should see you are connected.&lt;/p>
&lt;p>Now if you type sql you will see a long list of SQL code snippets that you could use.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/11/vscode-sql-snippets.png?resize=662%2C348&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Choose a snippet to create, and edit it as required. When you are happy press **CTRL+SHIFT+E ** to execute.&lt;/p>
&lt;p>This is basically all there is to it. However this is an incredibly powerful way of working, the intellisense instantly tells you what database objects you can use in your query and there is a wealth of different snippets you can use.&lt;/p>
&lt;p>When returning data you get a similar view to SSMS but you can save as Excel, CSV or JSON.&lt;/p>
&lt;p>SSMS is a very graphical way of doing things, you can double click a table and see its columns or indexes. VS Code relies on TSQL commands but you have access to exactly the same information.&lt;/p>
&lt;p>For more information about VS Code and the mssql extension check out &lt;a href="https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-develop-use-vscode" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-develop-use-vscode&lt;/a>
&lt;/p></description></item><item><title>Interfaces are cool!</title><link>https://www.funkysi1701.com/posts/2017/interfaces-are-cool/</link><pubDate>Tue, 31 Oct 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/interfaces-are-cool/</guid><description>&lt;p>A while back I &lt;a href="https://www.funkysi1701.com/posts/interfaces/">blogged&lt;/a>
about learning about interfaces as I didn’t really understand the value of them. I do now.&lt;/p>
&lt;p>I created an application that used interfaces so I could learn how it worked. I created a Logger Interface and created multiple classes that implemented that interface so I could swap out the different implementations easily. I created a SQL Logger and a File Logger and my code could be written and be completely unaware of which implementation it was using.&lt;/p>
&lt;p>This application uses SQL Azure and so I have a monthly bill to pay. Wouldn’t it be cool if I could reduce this bill? How about using the cheaper table storage instead?&lt;/p>
&lt;p>&lt;strong>Easy!&lt;/strong>&lt;/p>
&lt;p>Create a new class that implements my interface and all I need to do is write the three methods defined in my interface and I can swap from SQL Azure to table storage.&lt;/p>
&lt;p>Another benefit to interfaces is testing. Say I have an interface called inotification for sending notifications, I can have several implementations of this email, twitter, slack etc&lt;/p>
&lt;p>None of these implementations should be used in unit tests, as you don’t want a tweet being sent every time you run your tests. Why not create an implementation that simply returns something for each method call and doesn’t actually do anything. I can then run my tests with my fake implementation which tests my code logic but not the implementation I have chosen (this can be tested later on with integration tests or user testing if required).&lt;/p>
&lt;p>This is pretty much all I have to say about interfaces. I just like how I can swap different implementations.&lt;/p>
&lt;p>It does take a bit of work to get the interface setup. I found that when writing the second implementation the interface would need to change slightly, mostly as it was badly designed to begin with. I think for beginners there may be some value to writing multiple implementations of an interface so you can be sure your interface is good, however I am sure with experience this will not be required.&lt;/p></description></item><item><title>Creating DNS records programmatically</title><link>https://www.funkysi1701.com/posts/2017/creating-dns-records-programmatically/</link><pubDate>Mon, 16 Oct 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/creating-dns-records-programmatically/</guid><description>&lt;p>DNS is the backbone of the internet. It converts domain names into IP addresses. But how can we do clever things with it?&lt;/p>
&lt;p>Making DNS changes has always been a pain. You have to remember what company you registered your domain name with, then locate the login details for their website, login and fill in some web form and wait for the changes to replicate across the internet.&lt;/p>
&lt;p>There are various websites that assign you a custom subdomain name like name.domain.com, obviously they must do this programmatically, they don’t have a guy following the above process.&lt;/p>
&lt;p>Lets see how we could do this.&lt;/p>
&lt;p>My first thought was to make use of the DNSimple API. &lt;a href="https://developer.dnsimple.com/v2/" target="_blank" rel="noopener noreferrer">https://developer.dnsimple.com/v2/&lt;/a>
The API allows all sort of DNS changes to be made, however this is a paid service so let’s look at other options.&lt;/p>
&lt;p>Azure now has a DNS section. You can go to the portal, add a DNS zone, and then add as many A, CNAME and MX records as you need. This is of course no better than doing it manually.&lt;/p>
&lt;p>Azure offers a &lt;a href="https://docs.microsoft.com/en-us/azure/dns/dns-sdk" target="_blank" rel="noopener noreferrer">SDK&lt;/a>
and an example Visual Studio project. Lets look at how it works.&lt;/p>
&lt;p>First you need to setup some credentials to use your Azure subscription. The easiest way to do this is with powershell.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Login&lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>AzureRmAccount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$sp = New-AzureRmADServicePrincipal &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>DisplayName exampleapp &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>Password &lt;span style="color:#e6db74">&amp;#34;{provide-password}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sleep 20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>New-AzureRmRoleAssignment &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>RoleDefinitionName Contributor &lt;span style="color:#960050;background-color:#1e0010">–&lt;/span>ServicePrincipalName $sp.ApplicationId
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will create a AD Service Principal which has access to your Azure subscription.&lt;/p>
&lt;p>You need to get the following IDs from the Azure portal.&lt;/p>
&lt;p>subscriptionId for your subscription&lt;br>
tenantId or the Azure AD Directory ID&lt;br>
applicationId of the service principal created above&lt;br>
password you entered into the powershell script above&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> serviceCreds = &lt;span style="color:#66d9ef">await&lt;/span> ApplicationTokenProvider.LoginSilentAsync(tenantId, clientId, secret);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> dnsClient = &lt;span style="color:#66d9ef">new&lt;/span> DnsManagementClient(serviceCreds);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnsClient.SubscriptionId = subscriptionId;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSetParams = &lt;span style="color:#66d9ef">new&lt;/span> RecordSet();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.TTL = &lt;span style="color:#ae81ff">3600&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.ARecords = &lt;span style="color:#66d9ef">new&lt;/span> List&amp;lt;ARecord&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>recordSetParams.ARecords.Add(&lt;span style="color:#66d9ef">new&lt;/span> ARecord(&lt;span style="color:#e6db74">&amp;#34;1.2.3.4&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSet = &lt;span style="color:#66d9ef">await&lt;/span> dnsClient.RecordSets.CreateOrUpdateAsync(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A, recordSetParams);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above code connects to Azure and creates an A record for test.funkysi1701.com that points at the ip address 1.2.3.4.&lt;/p>
&lt;p>Other DNS records can be created in a similar way.&lt;/p>
&lt;p>The above example creates a new RecordSet but you can use the following to delete or get existing records.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> recordSet = dnsClient.RecordSets.Get(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dnsClient.RecordSets.Delete(resourceGroupName, &lt;span style="color:#e6db74">&amp;#34;funkysi1701.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>, RecordType.A);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I have found out that I can write a console app to edit my DNS records I need to change the nameservers for all my domains so I can take advantage of this new feature.&lt;/p></description></item><item><title>Discovery – My thoughts so far</title><link>https://www.funkysi1701.com/posts/2017/discovery-my-thoughts-so-far/</link><pubDate>Tue, 10 Oct 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/discovery-my-thoughts-so-far/</guid><description>&lt;p>I tried to resist but I am going to have to write about the new Star Trek series Discovery. Warning this post is going to include SPOILERS. If you read on you have been warned.&lt;/p>
&lt;p>I watched the first two episodes of the brand new Star Trek TV show. As I am an international viewer I used Netflix, if you are from the US you need to use CBS All Access. &lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/05/DAD0hTKUAAAUkTP.jpg?resize=662%2C366&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I have heard a lot of complaining that the show is not free to watch. CBS is making Star Trek Discovery to make money, if they don’t make money they will stop making it. Its as simple as that.&lt;/p>
&lt;p>&lt;a href="https://www.netflix.com" target="_blank" rel="noopener noreferrer">Netflix&lt;/a>
costs £5.99 per month and &lt;a href="https://www.cbs.com/all-access/" target="_blank" rel="noopener noreferrer">CBS All Access&lt;/a>
costs $5.99 per month. I don’t believe this is a lot of money. The 5.99 above allows you to watch any of the 726 Star Trek episodes at any time of day whenever you want as many times as you want, plus you have access to all the other movies or TV shows available. I don’t think this is too much to ask.&lt;/p>
&lt;p>Back to Discovery. I loved it! It felt like Star Trek. I had feared it might only share the name and would be an action filled TV show that had little in common with what he had seen before. I was wrong this is definitely a show that can proudly call itself Star Trek.&lt;/p>
&lt;p>&lt;strong>The Klingons&lt;/strong>&lt;/p>
&lt;p>When it was first announced that the Klingons would feature in the new show I was a bit “meh”. We had done lots with the Klingons before and they had never been my favourite alien race. &lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/09/star-trek-discovery-klingons-1002567-1280x0.jpg?resize=300%2C165&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>The look of the Klingons was also going to be changed, I have to admit this didn’t bother me. Klingons have had their look updated before. In 1966 Klingons had dark faces and smooth foreheads, in 1979 the forehead ridges were added as the first Star Trek movie was made, and now Discovery has removed all hair from Klingons. I can explain it away as productional changes, I don’t need an on screen explanation like we had on Enterprise (or even DS9).&lt;/p>
&lt;p>What I have seen so far is a menacing alien race that fits with what we have seen before with lots of references to honor, Kahless and speaking Klingon. I must admit reading all the subtitles is getting a bit tiresome, but that is a minor issue.&lt;/p>
&lt;p>&lt;strong>Conflict&lt;/strong>&lt;/p>
&lt;p>Historically Star Trek has not featured conflict between the main starfleet characters due to the idea that humanity has evolved beyond this. DS9 got round this by having Odo and Kira who are not starfleet characters so can have a little bit of conflict. Discovery has completely abandoned this idea.&lt;/p>
&lt;p>In the pilot episode, the Michael Burnham commits mutiny on her captain, even attacking her with a vulcan nerve pinch. In the third episode we finally meet the discovery crew. Gone are the TNG days where the ships crew are like a family, I am not sure I can think of a single character that would call another character “friend”. We are in a time of war so this would be expected, however I do hope we see deepening friendships form between characters.&lt;/p>
&lt;p>I am OK with the change to feature more conflict. I must admit the darkness of the third episode, did stop to make me think a bit, however by the fourth episode I was won over.&lt;/p>
&lt;p>&lt;strong>Cast&lt;/strong>&lt;/p>
&lt;p>The story is concentrated around Michael Burnham, so I do worry that other characters won’t get a look in. However from what I have seen Michael Burnham is a great character. She is a strong female character, with a intriguing back story relating to Sarek and possibly also Spock.&lt;/p>
&lt;p>Saru the alien character on the show, played by the very tall Doug Jones is great. From the trailers he was all about sensing death, but there is far more to him than that. I am looking forward to learn more about him and his threat ganglia.&lt;/p>
&lt;p>As the show has gone on we have started to learn about the other characters like Captain Lorca, Tilly and Paul Stamets.&lt;/p>
&lt;p>&lt;strong>Title Sequence&lt;/strong>&lt;/p>
&lt;p>I don’t like the opening title sequence, it feels very cheap like a draft version which hasn’t been finished yet. I was looking forward to a title sequence that would show off the USS Discovery, maybe like TNG where it warps around our own solar system. What we see is some of the tech that features in Star Trek which is nice but I want more. The theme tune while great that it features parts from the classic theme doesn’t stand on its own. I can hum all the other TV shows themes, and now after 4 episodes would struggle to do that.&lt;/p>
&lt;p>However I expect that after a while I will grow to like this more.&lt;/p>
&lt;p>&lt;strong>Overall&lt;/strong>&lt;/p>
&lt;p>I like Discovery and I will keep watching it. I want to find out what happens to the characters. There are no annoying characters like other shows have had. There is character development, none of the characters are going to finish where they started. I want more friendship between characters, but I expect that will come, I want more exploring and doing Star Trek stuff, but most of all I want more episodes, roll on next weeks show.&lt;/p>
&lt;p>Other things I noticed&lt;/p>
&lt;ul>
&lt;li>Sound effects on the bridge are awesome, it makes me feel at home&lt;/li>
&lt;li>The USS Discovery doesn’t feature in the first two episodes despite being the title of the show.&lt;/li>
&lt;li>Others have noted that Captain Georgiou has books on her shelf which feature classic episode titles&lt;/li>
&lt;/ul></description></item><item><title>Star Trek is back with Discovery</title><link>https://www.funkysi1701.com/posts/2017/star-trek-is-back-with-discovery/</link><pubDate>Fri, 22 Sep 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/star-trek-is-back-with-discovery/</guid><description>&lt;p>In &lt;a href="https://www.funkysi1701.com/posts/star-trek-is-back-in-2017">November 2015&lt;/a>
it was announced that a new Star Trek series was going to be launched. It has been a long wait with multiple delays but Star Trek Discovery is finally here.&lt;/p>
&lt;p>Star Trek Discovery launches in the US on 24th September and in the UK on 25th September.&lt;/p>
&lt;iframe src="https://www.youtube.com/embed/UoV3kc05Nwc?rel=0" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen">&lt;/iframe>
&lt;p>Lets have a look back how we got here.&lt;/p>
&lt;p>Star Trek was created by Gene Roddenberry in the 1960s. He imagined a show where we would explore the galaxy while also exploring the human condition. He described it as a wagon train to the stars. However it was cancelled after 79 episodes and three seasons due to budget cuts and low viewers.&lt;/p>
&lt;p>After cancellation its popularity boomed in reruns. In the mid 1970s an animated series was created. But demand for Star Trek continued until a new Star Trek show was commissioned called Phase Two.&lt;/p>
&lt;p>In 1977 Star Wars came out, and the phase two idea was cancelled and turned into a movie. In 1979 we got Star Trek The Motion Picture. It went massively over budget and failed to really capture the Star Trek spirit.&lt;/p>
&lt;p>A much cheaper sequel was created in 1982 Star Trek II: The Wrath of Khan with Roddenberry taking more of a back seat. A film widely considered to be one of the best trek films. Four more feature films starring the original cast were made.&lt;/p>
&lt;p>However in 1987 Gene Roddenberry teamed up with Rick Berman and The Next Generation was created with a brand new cast. The series ran for seven seasons set roughly a century after the adventures of Kirk and Spock.&lt;/p>
&lt;p>Popularity of Star Trek soured and this led Rick Berman to help create the spin off series Deep Space 9, Voyager and lastly Enterprise along with four feature films continuing the adventures of the TNG cast. When Enterprise was cancelled in 2005, Star Trek appeared to be dead after 18 years on TV.&lt;/p>
&lt;p>However in 2009 movie creator JJ Abrams recast the classic crew for the big screen. The film was big on action, but took place in an alternative timeline allowing for familiar characters to have new adventures without interfering with events depicted in the TV shows.&lt;/p>
&lt;p>Two sequels to this film have been produced and are bringing Star Trek back into popularity. This has given rise to Discovery. Star Trek is returning to the TV screen and it is going to be great.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Discovery" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/09/gqojtfz1dhmxoiri7g8p.png?resize=662%2C372&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p></description></item><item><title>Azure Friday</title><link>https://www.funkysi1701.com/posts/2017/azure-friday/</link><pubDate>Mon, 18 Sep 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/azure-friday/</guid><description>&lt;p>I think Azure is great, but there is loads to it so I can never know about all of its features. There is a video series hosted by Scott Hanselman called &lt;a href="https://channel9.msdn.com/Shows/Azure-Friday" target="_blank" rel="noopener noreferrer">Azure Fridays&lt;/a>
which I have started to watch in an effort to keep more up to date about some of its cool features.&lt;/p>
&lt;iframe src="https://docs.microsoft.com/en-us/shows/azure-friday/debug-net-apps-in-production-snapshot-debugger-in-application-insights/player" width="960" height="540" frameborder="0" allowfullscreen="allowfullscreen">&lt;/iframe>
&lt;p>I watched this video recently and it is all about application insights and new ways you can debug your web applications by creating snapshots. I am a big fan of application insights so adding extra ways to debug my apps is a big win for me. Once I get this feature working in my code I will no doubt blog about it.&lt;/p></description></item><item><title>Azure Functions</title><link>https://www.funkysi1701.com/posts/2017/azure-functions/</link><pubDate>Tue, 12 Sep 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/azure-functions/</guid><description>&lt;p>I recently blogged about using &lt;a href="https://www.funkysi1701.com/posts/using-azure-webjobs-to-automate-stuff">Azure Web Jobs&lt;/a>
, Azure Function is another way of doing the same thing, lets look at how they work.&lt;/p>
&lt;p>(Sorry its been a while since I blogged but I suspect an erratic schedule will continue for the next few months.)&lt;/p>
&lt;p>To create an Azure Function go to the Azure portal and click add new and search for &amp;ldquo;Function App&amp;rdquo;&lt;/p>
&lt;p>Give your app a name and select the usual resource group and location settings.&lt;/p>
&lt;p>Now when you open Function Apps you should see your new app.&lt;/p>
&lt;p>I want my Function App to run on a schedule so I clicked the + next to functions and selected TimerTrigger. I am a c# programmer so I selected this option as well.&lt;/p>
&lt;p>Give your function a name and specify using the usual cron notation how often it should run. I want mine to run at 9.30pm each night so use 0 30 21 * * *&lt;/p>
&lt;p>Now comes the code bit. By default you get a window with the following code in it&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Run(TimerInfo myTimer, TraceWriter log)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.Info(&lt;span style="color:#e6db74">$&amp;#34;C# Timer trigger function executed at: {DateTime.Now}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is entirely up to you what you get your function to do. In my case I just wanted to call a URL on a schedule so I created some code that used httpclient.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Net.Http;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> Task Run(TimerInfo myTimer, TraceWriter log)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.Info(&lt;span style="color:#e6db74">$&amp;#34;Buffer 0 function executed at: {DateTime.Now}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpClient client = &lt;span style="color:#66d9ef">new&lt;/span> HttpClient();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> result = &lt;span style="color:#66d9ef">await&lt;/span> client.GetAsync(&lt;span style="color:#e6db74">&amp;#34;URL&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">string&lt;/span> resultContent = &lt;span style="color:#66d9ef">await&lt;/span> result.Content.ReadAsStringAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.Info(resultContent);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you have created your app and it has run you can use the monitor section to view success and failures.&lt;/p>
&lt;p>There is loads more you can do with Azure Function but this is a good place to start.&lt;/p></description></item><item><title>Pwned Pass – Available from the Play Store</title><link>https://www.funkysi1701.com/posts/2017/pwned-pass-available-from-the-play-store/</link><pubDate>Mon, 14 Aug 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/pwned-pass-available-from-the-play-store/</guid><description>&lt;p>Pwned Pass is now available from the &lt;a href="https://play.google.com/store/apps/details?id=pwnedpasswords.pwnedpasswords" target="_blank" rel="noopener noreferrer">Google Play Store&lt;/a>
.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Pwned Pass" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/08/Screenshot_20170813-205152.png?resize=169%2C300&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Pwned Pass is a simple android app that allows you to type in a password and tells you if it has been used in a data breach.&lt;/p>
&lt;p>Troy Hunt of &lt;a href="https://haveibeenpwned.com/" target="_blank" rel="noopener noreferrer">Have I Been Pwned?&lt;/a>
recently added a new API to his website which allows you to search his extensive database of pwned passwords, 306 million of them. I have simply created a Android frontend to this API.&lt;/p>
&lt;p>The API itself takes a SHA1 hash of the password and either returns a HTTP 200 if the password is found or a HTTP 404 if the password does not exist in the HIBP database. For more details of how Troy Hunt created this check out his &lt;a href="https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/" target="_blank" rel="noopener noreferrer">blog post&lt;/a>
.&lt;/p>
&lt;p>My app simply generates a SHA1 hash of anything that is typed in and then passes this to Troy Hunt’s API. I then get the HTTP return code so I know if the password exists or not.&lt;/p>
&lt;p>It should be noted that: &lt;strong>Do not send any password you actively use to a third-party service – even this one!&lt;/strong> I don’t log anything that you type into my app and all I am then doing is passing a SHA1 hash over SSL to HIBP. However you shouldn’t trust my word alone.&lt;/p>
&lt;p>The app itself is written in Visual Studio with Xamarin Forms in a similar fashion to the app I talked about &lt;a href="https://www.funkysi1701.com/posts/android-app-development-and-the-visual-studio-mobile-centre">last week&lt;/a>
.&lt;/p>
&lt;p>As I am using Xamarin Forms there is the potential that I may develop iPhone or UWP versions of this code in the future. With that in mind I have made use of interfaces for the android specific parts of the code.&lt;/p>
&lt;p>I also make use of the &lt;a href="https://www.nuget.org/packages/modernhttpclient/" target="_blank" rel="noopener noreferrer">modernhttpclient&lt;/a>
nuget package due to problems I encountered with httpclient and SSL. This is due to limitations of what libraries are available in mono and what has been implemented, I suspect there are better ways to solve this but that is all part of the fun.&lt;/p>
&lt;p>Please do have a look at Pwned Pass and let me know what you think. Especially if it doesn’t work or throws errors. I would like to spend time making this app as good as I can make it.&lt;/p></description></item><item><title>Android App Development and the Visual Studio Mobile Centre</title><link>https://www.funkysi1701.com/posts/2017/android-app-development-and-the-visual-studio-mobile-centre/</link><pubDate>Mon, 07 Aug 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/android-app-development-and-the-visual-studio-mobile-centre/</guid><description>&lt;p>For the past week or so I have been playing around with Xamarin and creating an android app.&lt;/p>
&lt;p>Well I now have an app in the Google Play Store. Check out &lt;a href="https://play.google.com/store/apps/dev?id=6148298088834956775" target="_blank" rel="noopener noreferrer">https://play.google.com/store/apps/dev?id=6148298088834956775&lt;/a>
. &lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/08/Screenshot_20170806-190053.png?resize=169%2C300&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Before you rush and download the app I must warn you that it doesn’t do much yet. It displays some content that is on my website and there are a few links to allow sharing of content. I have some ideas to display content from my blog and allow sharing. I also have some other ideas for apps that might actually be useful to people that are not me. If you have ideas or feature requests do let me know.&lt;/p>
&lt;p>Ok how did I go about creating this app and getting it in the app store?&lt;/p>
&lt;p>Xamarin is now part of Visual Studio so step one is install all the Xamarin features to Visual Studio and build an app.&lt;/p>
&lt;p>Next I wanted to monitor my app. Now I know Application Insights doesn’t support apps so what tools are out there? HockeyApp is something I had heard of but they are in the process of being replaced with &lt;a href="https://appcenter.ms/apps" target="_blank" rel="noopener noreferrer">Visual Studio Mobile Centre&lt;/a>
.&lt;/p>
&lt;p>It was relatively easy to hook up my app to Visual Studio Mobile Centre. First install the required nuget packages. Then add using statements and the following line to your MainActivity.cs file (these instructions are available on the Mobile Centre)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Azure.Mobile;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Azure.Mobile.Analytics;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Azure.Mobile.Crashes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Azure.Mobile.Distribute;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.Azure.Mobile.Push;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>MobileCenter.Start(&lt;span style="color:#e6db74">&amp;#34;[Unique ID]&amp;#34;&lt;/span>,&lt;span style="color:#66d9ef">typeof&lt;/span>(Analytics), &lt;span style="color:#66d9ef">typeof&lt;/span>(Crashes), &lt;span style="color:#66d9ef">typeof&lt;/span>(Distribute), &lt;span style="color:#66d9ef">typeof&lt;/span>(Push));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you can connect the Mobile Centre to your source code (VSTS in my case) and get it to run a build for every commit.&lt;/p>
&lt;p>One complexity of the build is that you need to supply a keystore file (basically a certificate to digitally sign your app). I found the best way to do this was to use Visual Studio to create the file.&lt;/p>
&lt;p>In VS2017 there is a option called Archive Manager under the tools menu. In here click the distribute button and select Ad-hoc. In the signing identity section you can create a keystore file. Enter a few details and a keystore file will be created in AppData\Local\Xamarin\Mono for Android\Keystore[keystore name][keystore name.keystore]&lt;/p>
&lt;p>Once you have added the keystore file to your build you can enable the distribute option. Now you will get an email after every build with a link to install your app.&lt;/p>
&lt;p>Every time your app crashes the details will be logged in the crashes section for you to explore and fix the issues.&lt;/p>
&lt;p>The Analytics section allows you to explore how your app is being used. You can also add Analytics.TrackEvent(&amp;ldquo;Feature X&amp;rdquo;) to measure the usage of different features.&lt;/p>
&lt;p>There are more things you can do which I will explore more at another time along with how to get your app into the Google Play Store.&lt;/p></description></item><item><title>Creating your own nuget packages with VSTS</title><link>https://www.funkysi1701.com/posts/2017/creating-nuget-packages/</link><pubDate>Mon, 31 Jul 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/creating-nuget-packages/</guid><description>&lt;p>For a while I have found myself writing the same bits of code for different web projects. This annoys me as it goes against the DRY principle (don’t repeat yourself).&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Nuget" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/07/nuget.png?resize=300%2C91&amp;amp;ssl=1" loading="lazy"
/>
One possible solution is to write your own nuget packages. You can then add this piece of code to any project you work on.&lt;/p>
&lt;p>&lt;a href="https://www.nuget.org/" target="_blank" rel="noopener noreferrer">nuget.org&lt;/a>
is the public nuget feed where any developer can download nuget packages. You could publish your nuget package here, but your might want to restrict access so better to create a private nuget feed.&lt;/p>
&lt;p>Lets look at how we create a nuget feed in Visual Studio. First thing you need to do is install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms.feed" target="_blank" rel="noopener noreferrer">Package Management&lt;/a>
extension to Visual Studio Team Services (its free for less than 5 users), this will add a packages section under the build menu.&lt;/p>
&lt;p>Before you can start using this new feature you need to add a Package Management License in the users hub.&lt;/p>
&lt;p>Once that is done you can create a feed. You need to give your feed a name, decide if only members of the current project or everyone in your account should have access to read and contribute to.&lt;/p>
&lt;p>Now you have a feed you could use the nuget package command to create a nupkg file and then nuget push command to add it to your feed. A better way is to get Visual Studio Team Services to do all the hard work.&lt;/p>
&lt;p>Create a new project in Visual Studio Team Service to house your nuget package. In the build section add an empty build definition. Choose a build agent, I am using the Hosted VS2017. Then add the following steps nuget restore, Visual Studio Build, nuget pack and nuget push.&lt;/p>
&lt;ul>
&lt;li>nuget restore – this step is only needed if your code depends on other packages. If it depends on other packages that are only in your feed you must specify your feed in the feeds and authentication section.&lt;/li>
&lt;li>Visual Studio Build – this builds your code like you would in Visual Studio. The only config I made to this step was to specify Release in configuration.&lt;/li>
&lt;li>nuget pack – this creates the nupkg file from your built project. In configuration to package specify the same as you specified in the previous step (in my case Release)&lt;/li>
&lt;li>nuget push – this publishes to your feed, so of course you need to specify your feed.&lt;/li>
&lt;/ul>
&lt;p>One last thing to configure is to enable the continuous integration option in triggers. This means whenever you push code all these steps will run and you have a new version of your nuget package.&lt;/p>
&lt;p>In Visual Studio you need to create a *.nuspec file, this contains all the meta data about your nuget package. Let look at an example.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;package&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;metadata&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;id&amp;gt;&lt;/span>$id$&lt;span style="color:#f92672">&amp;lt;/id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;title&amp;gt;&lt;/span>Nuget&lt;span style="color:#f92672">&amp;lt;/title&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;authors&amp;gt;&lt;/span>Simon Foster&lt;span style="color:#f92672">&amp;lt;/authors&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;owners&amp;gt;&lt;/span>Simon Foster&lt;span style="color:#f92672">&amp;lt;/owners&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;requireLicenseAcceptance&amp;gt;&lt;/span>false&lt;span style="color:#f92672">&amp;lt;/requireLicenseAcceptance&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;description&amp;gt;&lt;/span>An example of a nuget package.&lt;span style="color:#f92672">&amp;lt;/description&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;releaseNotes&amp;gt;&lt;/span>Release Notes&lt;span style="color:#f92672">&amp;lt;/releaseNotes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;copyright&amp;gt;&lt;/span>Copyright 2017&lt;span style="color:#f92672">&amp;lt;/copyright&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;projectUrl&amp;gt;&lt;/span>https://[yourVSaccount].visualstudio.com/nuget/&lt;span style="color:#f92672">&amp;lt;/projectUrl&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/metadata&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/package&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>One last thing to mention is version numbers. You can either change the version number in your *.nuspec file everytime you push changes. This will create stable packages like 1.0, 1.1, 1.2 etc&lt;/p>
&lt;p>However you can use the automatic version number setting in the nuget pack build step. However I have found this only ever creates pre-release packages and I haven’t found a way to upgrade a package from pre-release to stable.&lt;/p>
&lt;p>This is a really neat way to reuse your code in multiple projects. I have only been looking at this for a few days and I have already extracted code to do with emails, creating excel downloads and database related methods. I suspect that doing this will also have a side benefit of forcing me to create code with fewer dependencies so more code can be turned into a nuget package.&lt;/p></description></item><item><title>Async and Await</title><link>https://www.funkysi1701.com/posts/2017/async-and-await/</link><pubDate>Mon, 24 Jul 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/async-and-await/</guid><description>&lt;p>For a while the Async and Await commands in c# have confused me.&lt;/p>
&lt;p>Like most things the best way to learn about something is to use it in a real world example. I am currently adding an email alert feature to a website. This is an ideal example of something that would benefit from Asynchronous programming. There is no need for the webpage to wait to send 1000s of emails, lets just send a call to get started and allow the browser to carry on as normal.&lt;/p>
&lt;p>This is my first try at using async and await so feel free to suggest best practises in the comments.&lt;/p>
&lt;p>Lets start with a Send method in my EmailController.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> ActionResult Send(&lt;span style="color:#66d9ef">int&lt;/span> id, &lt;span style="color:#66d9ef">int&lt;/span> pageId, &lt;span style="color:#66d9ef">int&lt;/span> userID)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (!Authorize.checkPageIsAuthorised(userID, (Authorize.PageIds)pageId))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Redirect(&lt;span style="color:#e6db74">&amp;#34;/login&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Task&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>&amp;gt; t = SendNotifications(id,userID);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Redirect(Request.UrlReferrer.ToString());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This simply checks to see if you have permission to the page. If not redirects to the login page otherwise it makes a method call and redirects back to the page it came from.&lt;/p>
&lt;p>Lets have a look at that method call in more detail.&lt;/p>
&lt;p>Task&lt;string> t = SendNotification(id, userid);&lt;/p>
&lt;p>SendNotification doesn’t return a normal string it returns a Task&lt;string>, so lets look at how we are creating this.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> Task&amp;lt;&lt;span style="color:#66d9ef">string&lt;/span>&amp;gt; SendNotifications(&lt;span style="color:#66d9ef">int&lt;/span> id,&lt;span style="color:#66d9ef">string&lt;/span> type,&lt;span style="color:#66d9ef">int&lt;/span> userid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//logic ommitted&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> ef.SendEmail(model, emailHtmlBody);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;OK&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The return type is set to Task but it has the aysnc keyword appended to it. It also makes a call with the await keyword.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> Task SendEmail(EmailModel model,&lt;span style="color:#66d9ef">string&lt;/span> emailHtmlBody)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//logic removed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> smtp.SendMailAsync(message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So that is it. My first bit of code that uses Async and Await. My controller calls a method asynchronously which then calls another method asynchronously which sends emails asynchronously.&lt;/p>
&lt;p>Async – This enables the Await keyword to be used in the method&lt;/p>
&lt;p>Await – This is where things get asynchronous. The await keyword allows the code to wait asynchronously for the long running code to complete.&lt;/p></description></item><item><title>How good is your SSL?</title><link>https://www.funkysi1701.com/posts/2017/how-good-is-your-ssl/</link><pubDate>Mon, 17 Jul 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/how-good-is-your-ssl/</guid><description>&lt;p>&lt;img class="img-fluid" alt="Troy Hunt SSL expert" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/07/Troy-Hunt-Profile-Photo.jpg?resize=150%2C150&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I recently watched Troy Hunt’s &lt;a href="https://www.pluralsight.com/courses/https-every-developer-must-know" target="_blank" rel="noopener noreferrer">What Every Developer Must Know about HTTPS&lt;/a>
course on Pluralsight. Its very good and really make you think about SSL certificates and how to correctly implement them.&lt;/p>
&lt;p>One thing in particular Troy mentions is the website &lt;a href="https://www.ssllabs.com/ssltest/index.html" target="_blank" rel="noopener noreferrer">SSL Labs&lt;/a>
. This website allows you to test a websites implementation of SSL. A grade of A to F is assigned with A being the best and F being the worst.&lt;/p>
&lt;p>Troy Hunt has a &lt;a href="https://www.troyhunt.com/do-you-really-want-bank-grade-security/" target="_blank" rel="noopener noreferrer">blog&lt;/a>
post where he discusses how Australian Banks score. Lets look at a few UK banks.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Bank&lt;/strong>&lt;/th>
&lt;th>&lt;strong>SSL Certificate&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Grade&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Home Page Under SSL&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>HSBC&lt;/td>
&lt;td>&lt;a href="https://www.hsbc.co.uk" target="_blank" rel="noopener noreferrer">www.hsbc.co.uk&lt;/a>
&lt;/td>
&lt;td>B&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Nationwide&lt;/td>
&lt;td>onlinebanking.nationwide.co.uk&lt;/td>
&lt;td>C&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NatWest&lt;/td>
&lt;td>&lt;a href="https://www.nwolb.com" target="_blank" rel="noopener noreferrer">www.nwolb.com&lt;/a>
&lt;/td>
&lt;td>C&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Barclaycard&lt;/td>
&lt;td>&lt;a href="https://www.barclaycard.co.uk" target="_blank" rel="noopener noreferrer">www.barclaycard.co.uk&lt;/a>
&lt;/td>
&lt;td>A-&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Barclays&lt;/td>
&lt;td>bank.barclays.co.uk&lt;/td>
&lt;td>A-&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lloyds Bank&lt;/td>
&lt;td>&lt;a href="https://www.lloydsbank.com" target="_blank" rel="noopener noreferrer">www.lloydsbank.com&lt;/a>
&lt;/td>
&lt;td>A&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Royal Bank of Scotland&lt;/td>
&lt;td>&lt;a href="https://www.rbsdigital.com" target="_blank" rel="noopener noreferrer">www.rbsdigital.com&lt;/a>
&lt;/td>
&lt;td>C&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Standard Chartered&lt;/td>
&lt;td>&lt;a href="https://www.sc.com" target="_blank" rel="noopener noreferrer">www.sc.com&lt;/a>
&lt;/td>
&lt;td>C&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Virgin Money&lt;/td>
&lt;td>uk.virginmoney.com&lt;/td>
&lt;td>A+&lt;/td>
&lt;td>Y&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Santander&lt;/td>
&lt;td>retail.santander.co.uk&lt;/td>
&lt;td>A-&lt;/td>
&lt;td>N&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>On the whole the ratings are all quite good with all being in the range A-C. However I have also indicated if they have SSL on the home page. Only 4 out 10 website listed above have the home page load under SSL.&lt;/p>
&lt;p>Why does this matter as long as the login is under SSL? Any page that loads over http is potentially at risk from a man in the middle attack. A fake malicious home page could contain links to any page and trick users into entering personal information.&lt;/p>
&lt;p>If you want to test a bank or other website not listed here. Go to &lt;a href="https://www.ssllabs.com/ssltest/index.html" target="_blank" rel="noopener noreferrer">https://www.ssllabs.com/ssltest/index.html&lt;/a>
and type the address that is on the SSL certificate in to the search. The good news is that this site scores a A.&lt;/p>
&lt;p>Troy mentions that there is rapid growth in the adoption of SSL, there is also rapid growth in improving ratings. One of these banks went from a C to an A during the course of writing this blog.&lt;/p></description></item><item><title>Writing your first test</title><link>https://www.funkysi1701.com/posts/2017/writing-your-first-test/</link><pubDate>Mon, 10 Jul 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/writing-your-first-test/</guid><description>&lt;p>Whenever I write a new test I have to think how best to do it. Hopefully I can summarise a few tips here to help get started.&lt;/p>
&lt;h3 id="arrange-act-assert">Arrange Act Assert&lt;a class="anchor ms-1" href="#arrange-act-assert">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>The first thing I think about when writing a test is Arrange, Act, Assert. Arrange, Act, Assert is a pattern for writing the tests.&lt;/p>
&lt;p>&lt;strong>Arrange&lt;/strong> – This gets things in order ready to execute the test.&lt;/p>
&lt;p>&lt;strong>Act&lt;/strong> – This executes the method you want to test.&lt;/p>
&lt;p>&lt;strong>Assert&lt;/strong> – This compares the value produced in the Act step with a known value typically with a method similar to the following&lt;/p>
&lt;p>Assert.AreEqual(expected value, actual value)&lt;/p>
&lt;p>Say for example you wanted to test a method called ReturnsTrue() which does nothing but returns a value of true. This method is in a class called ReturnsTrueClass&lt;/p>
&lt;p>The Arrange step in this example would be.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>ReturnsTrueClass t = &lt;span style="color:#66d9ef">new&lt;/span> ReturnsTrueClass();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Act step in this example would be.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> result = t.ReturnTrue();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Assert step in this example would be.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Assert.AreEqual(&lt;span style="color:#66d9ef">true&lt;/span>, result);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a stupidly simple example but hopefully you get the idea of how you can build all your tests with these three steps.&lt;/p>
&lt;p>Recently I saw a tweet complaining that someone has mixed up expected and actual in the Assert statement.&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">There is a minor but special hell reserved for those who mix up the expected and actual parameters in Assert.Equals&lt;/p>&amp;mdash; Keith Williams (@zogface) &lt;a href="https://twitter.com/zogface/status/882737770095149056?ref_src=twsrc%5Etfw">July 5, 2017&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>At first glance this probably isn’t the worst mistake to make as if your tests are all passing actual and expected are the same.&lt;/p>
&lt;p>However tests will fail, that is the whole point of them, you can then fix bits of code. If you have mixed up actual and expected it adds extra time to debugging and figuring out what values are produced from your code and what you are expecting it to produce. It may be your test uses a mocking framework and somewhere in there, there is an issue, with mixed up expected/actual you may assume a problem in your code rather than the test.&lt;/p>
&lt;p>Also, how do you make such an error? When I type Assert.AreEquals() in Visual Studio, Visual Studio tells me what each parameter does, it takes a matter of seconds to do this, just by hovering over the code.&lt;/p>
&lt;p>One last tip to say about tests. Write your tests to test the behaviour of your application.&lt;/p></description></item><item><title>Uploading Files to AWS</title><link>https://www.funkysi1701.com/posts/2017/uploading-files-to-aws/</link><pubDate>Mon, 03 Jul 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/uploading-files-to-aws/</guid><description>&lt;p>I am a fan of Azure but today I have been looking at AWS. Specifically how to upload and download files.&lt;/p>
&lt;p>AWS S3 stores files in Buckets. I already had an AWS S3 account setup with a Bucket. I am going to assume you have got a bucket setup and concentrate on the code to get files in and out.&lt;/p>
&lt;p>First step is to use nuget to install the AWS packages. In nuget the packages you want are called AWSSDK.Core and AWSSDK.S3.&lt;/p>
&lt;p>The using statements you want to use are called Amazon.S3 and Amazon.S3.Transfer, not sure why this doesn’t match nuget, this difference caught me out a couple of times.&lt;/p>
&lt;p>Now to the code that uploads files&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>AmazonS3Client AWSclient = &lt;span style="color:#66d9ef">new&lt;/span> AmazonS3Client(accessKeyID, secretAccessKeyID, Amazon.RegionEndpoint.EUWest1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TransferUtility fileTransferUtility = &lt;span style="color:#66d9ef">new&lt;/span> TransferUtility(AWSclient);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> (FileStream streamWriter = &lt;span style="color:#66d9ef">new&lt;/span> FileStream(path, FileMode.Open))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TransferUtilityUploadRequest fileTransferUtilityRequest = &lt;span style="color:#66d9ef">new&lt;/span> TransferUtilityUploadRequest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BucketName = &lt;span style="color:#e6db74">&amp;#34;flawlessimages&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream = streamWriter,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key = fileName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fileTransferUtility.Upload(fileTransferUtilityRequest);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets break it down and look at what it does.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>AmazonS3Client AWSclient = &lt;span style="color:#66d9ef">new&lt;/span> AmazonS3Client(accessKeyID, secretAccessKeyID, Amazon.RegionEndpoint.EUWest1);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates an instance of AmazonS3Client, we are passing the Access Key and Secret Access Key both of which can be found from your Amazon S3 account My Security Credentials section. Amazon.RegionEndpoint.EUWest1 specifies the amazon data centres that your bucket is located in.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>TransferUtility fileTransferUtility = &lt;span style="color:#66d9ef">new&lt;/span> TransferUtility(AWSclient);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates an instance of TransfterUtility using the AmazonS3Client instance we created in the previous step.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> (FileStream streamWriter = &lt;span style="color:#66d9ef">new&lt;/span> FileStream(path, FileMode.Open))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This opens up a filestream from a files path and specifies that the file should be opened.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>TransferUtilityUploadRequest fileTransferUtilityRequest = &lt;span style="color:#66d9ef">new&lt;/span> TransferUtilityUploadRequest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BucketName = &lt;span style="color:#e6db74">&amp;#34;flawlessimages&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream = streamWriter,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key = fileName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fileTransferUtility.Upload(fileTransferUtilityRequest);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This last step specifies which bucket to upload to, what input stream to upload and the Key to use. Key is just AWS way of referring to files, more commonly referred to as the filename.&lt;/p>
&lt;p>This is all you need to do to upload a file to your Bucket. The file will be located at &lt;a href="https://s3-eu-west-1.amazonaws.com/[bucketname]/[filename]" target="_blank" rel="noopener noreferrer">https://s3-eu-west-1.amazonaws.com/[bucketname]/[filename]&lt;/a>
, however by default it will not be downloadable until you set Read permission to everyone, once you do that anyone who has the link will be able to download your file.&lt;/p>
&lt;p>This is the same permission level as any file you have on your webserver, however AWS has a better way.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> (s3Client = &lt;span style="color:#66d9ef">new&lt;/span> AmazonS3Client(accessKeyID, secretAccessKeyID, Amazon.RegionEndpoint.USEast1))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GetPreSignedUrlRequest request1 = &lt;span style="color:#66d9ef">new&lt;/span> GetPreSignedUrlRequest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BucketName = bucketName,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key = filename,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expires = DateTime.Now.AddMinutes(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> urlString = s3Client.GetPreSignedURL(request1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here we are generating a url to download the file, but we are specifying that it is only valid for 5 minutes. This means that if you share the url it will only work for 5 minutes, after that AWS will give an access denied message.&lt;/p>
&lt;p>This is much better security than you have on a typical web server, and easy to implement, every time a user clicks on a download link you generate a new presigned url and send the download to the browser, as long as this process doesn’t take longer than 5 minutes the user will never know.&lt;/p></description></item><item><title>Using Azure WebJobs to Automate Stuff</title><link>https://www.funkysi1701.com/posts/2017/using-azure-webjobs-to-automate-stuff/</link><pubDate>Mon, 26 Jun 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/using-azure-webjobs-to-automate-stuff/</guid><description>&lt;p>I keep hearing about Azure WebJobs but I have never used them. Time to change this.&lt;/p>
&lt;p>WebJobs are a feature of Azure App Service that can run a script at a specific time. In my case I would like to hit a specific url of my website at the same time every day.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="WebJobs" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/06/addkeepalivewebjob.png?resize=313%2C615&amp;amp;ssl=1" loading="lazy"
/>
To the right you can see an example of the WebJobs form on the Azure portal that you need to fill in.&lt;/p>
&lt;p>You need to supply a name for your webjob.&lt;/p>
&lt;p>You need to upload the script that will run in my case I used a powershell script. My script consisted of which basically just loads the url specified.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>$progressPreference = &lt;span style="color:#e6db74">&amp;#34;silentlyContinue&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$result = Invoke-WebRequest -Uri (&lt;span style="color:#e6db74">&amp;#34;https://www.google.com&amp;#34;&lt;/span>) -Method Get -UseBasicParsing;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Type refers to if your job will be triggered or run continuously, I want it to be triggered.&lt;/p>
&lt;p>Triggers refers to if you want it to be scheduled or manual, something that you can run on an ad hoc basis. I of course want scheduled.&lt;/p>
&lt;p>If you are familiar with the linux CRON then the next box will make sense to you for everyone else I will try and make sense of it. The box consists of 6 numbers which can either have a value or a *. The numbers correspond to the following {second} {minute} {hour} {day} {month} {day of the week}.&lt;/p>
&lt;p>A hourly job would be expressed as 0 0 * * * *, ie every day of week, every month, every day, every hour and only when minute and second equals zero. For more help with this check out the &lt;a href="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-create-web-jobs#CreateScheduledCRON" target="_blank" rel="noopener noreferrer">MSDN docs&lt;/a>
about it. I want to use 0 30 21 * * * to run daily at 9.30pm.&lt;/p>
&lt;p>That’s it everything setup, now time to wait and see if it works.&lt;/p>
&lt;p>&lt;strong>Oh no!&lt;/strong>&lt;/p>
&lt;p>It failed to run at the specified time.&lt;/p>
&lt;p>The reason for this is the scheduler requires the feature Always On to be turned on which is not available in the free App Service. Before you reach for your wallets, I found a solution on this &lt;a href="https://tomssl.com/2016/12/20/how-to-get-azure-webjobs-to-run-indefinitely-for-free/" target="_blank" rel="noopener noreferrer">blog post&lt;/a>
that allows them to run on the free tier.&lt;/p>
&lt;p>The thinking behind this solution is you need to keep the website alive throughout the day so Tom has created a script that does this. His script can be found on his blog or on his &lt;a href="https://github.com/TomChantler/Self-KeepAlive" target="_blank" rel="noopener noreferrer">github page&lt;/a>
.&lt;/p>
&lt;p>Set this script up to run every 5 minutes (0 */5 * * * *) like the example above.&lt;/p>
&lt;p>The nextthing you need to do is create a Custom connection string in the Application Settings blade called SecretThing. Tom’s script references this to access the website and keep it alive. The password you need to put in SecretThing can be found in you publish profile (downloaded from the Overview blade in the Azure portal). For more details and a better explanation check out &lt;a href="https://tomssl.com/2016/12/20/how-to-get-azure-webjobs-to-run-indefinitely-for-free/" target="_blank" rel="noopener noreferrer">Tom’s blog&lt;/a>
.&lt;/p>
&lt;p>One last thing to mention about WebJobs is that you can see details about when they have run at https://[YourWebAppName].scm.azurewebsites.net/azurejobs/#/jobs and this can be a great place to help debug your scripts.&lt;/p></description></item><item><title>Fiddler and APIs</title><link>https://www.funkysi1701.com/posts/2017/fiddler-and-apis/</link><pubDate>Mon, 19 Jun 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/fiddler-and-apis/</guid><description>&lt;p>A while ago I blogged about &lt;a href="https://www.funkysi1701.com/2017/04/17/automation-promotion/">promoting&lt;/a>
my blog with Buffer. At the time I made use of the nuget package &lt;a href="https://www.nuget.org/packages/BufferAPI/" target="_blank" rel="noopener noreferrer">BufferAPI&lt;/a>
but lets look at some improvements I can make.&lt;/p>
&lt;p>The BufferAPI package worked great from my console app, but when I tried to use it from a Controller in an MVC app I never got it to work. Lets look at the API docs and see if I can rewrite it.&lt;/p>
&lt;p>There are two main types of API calls GET which gets data from the server and POST which posts data to the server. These come from the types of HTTP requests.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Alt Text" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wozrfdoqvtjaoxs7j1v.jpg" loading="lazy"
/>
&lt;/p>
&lt;p>I quickly figured out how to use the GET API call to authenticate using &lt;a href="https://api.bufferapp.com/1/profiles.json?access_token=XXXX" target="_blank" rel="noopener noreferrer">https://api.bufferapp.com/1/profiles.json?access_token=XXXX&lt;/a>
&lt;/p>
&lt;p>However POST was defeating me. That was until I remembered &lt;a href="http://www.telerik.com/fiddler" target="_blank" rel="noopener noreferrer">Fiddler&lt;/a>
.&lt;/p>
&lt;p>I had heard Troy Hunt (and others) talk of using Fiddler to examine what data is being passed among websites. Troy uses it to do a man in the middle test to see what information can be stolen.&lt;/p>
&lt;p>It is really easy to setup, install Fiddler, click yes to a few security warnings and you can see what information is being passed from your code to remote APIs.&lt;/p>
&lt;p>Once I had Fiddler installed I could compare what information is being passed between a successful API call using the BufferAPI nuget package and an unsuccessful API call using my code.&lt;/p>
&lt;p>Fiddler also showed that passing my authentication token in a POST request is much better. Despite both GET and POST being encrypted when using HTTPS, anything at either end that logs URLs will have a log of your username and password.&lt;/p>
&lt;p>If you have not tried Fiddler, give it a try especially if you are doing things with API calls.&lt;/p></description></item><item><title>How do I add Power BI data to a webpage?</title><link>https://www.funkysi1701.com/posts/2017/how-do-i-add-power-bi-data-to-a-webpage/</link><pubDate>Mon, 12 Jun 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/how-do-i-add-power-bi-data-to-a-webpage/</guid><description>&lt;p>Last week I talked about &lt;a href="https://www.funkysi1701.com/2017/06/05/businessintelligence/">Power BI&lt;/a>
, what it is and some of the different services you can use with it. This week lets add some of that data to a simple web page.&lt;/p>
&lt;p>For this example I am going to add the google analytics data from this website to this page.&lt;/p>
&lt;p>First login to your Power BI &lt;a href="https://app.powerbi.com/" target="_blank" rel="noopener noreferrer">https://app.powerbi.com/&lt;/a>
&lt;/p>
&lt;p>Click the get data link at the bottom left.&lt;/p>
&lt;p>Click My Organisation to bring up the app search box.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="Alt Text" src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46c1lyxy053xcq66fowf.jpg" loading="lazy"
/>
&lt;/p>
&lt;p>Click the Apps tab and search for “google” in the search box, you should then see Google Analytics, click into this and then click the get it now button.&lt;/p>
&lt;p>Log into your google account. If you have multiple google accounts I found it worked best to sign out of all of them or run this in an incognito window.&lt;/p>
&lt;p>Once you are signed in you should see a list of the different google analytics data you have, select the one you want to use and click import.&lt;/p>
&lt;p>Power BI will then go away and start loading the data.&lt;/p>
&lt;p>Once loaded go to Reports and select the Google Analytics that has been loaded. If you have more than one, it is a good idea to rename each one eg Corporate Site Google Analytics, Blog Google Analytics so you won’t get mixed up.&lt;/p>
&lt;p>In the file menu select Publish to web and agree that you are OK for this to be made public.&lt;/p>
&lt;p>You will then be given a piece of HTML code that starts with &amp;lt;iframe copy this onto your web page. Reload your webpage and you should see something similar to mine below.&lt;/p>
&lt;p>It should be noted that while you can but the webpage containing the iframe behind a login page, the data could still be accessed if you knew the url contained within the iframe, this is why the link can be emailed and continue to work.&lt;/p></description></item><item><title>What the heck is Business Intelligence?</title><link>https://www.funkysi1701.com/posts/2017/businessintelligence/</link><pubDate>Mon, 05 Jun 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/businessintelligence/</guid><description>&lt;p>The term &lt;strong>Business Intelligence (BI)&lt;/strong> refers to technologies, applications and practices for the collection, integration, analysis, and presentation of business information. The purpose of Business Intelligence is to support better business decision making. Essentially, Business Intelligence systems are data-driven Decision Support Systems (DSS). Business Intelligence is sometimes used interchangeably with briefing books, report and query tools and executive information systems.&lt;/p>
&lt;h3 id="what-is-power-bi">What is Power BI?&lt;a class="anchor ms-1" href="#what-is-power-bi">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;strong>Power BI&lt;/strong> is a business analytics service provided by Microsoft. It provides interactive visualisations with self-service business intelligence capabilities, where end users can create reports and dashboards by themselves, without having to depend on any information technology staff or database administrator.&lt;/p>
&lt;p>Microsoft describe it as follows: &lt;strong>Power BI&lt;/strong> is a suite of business analytics tools that deliver insights throughout your organisation. Connect to hundreds of data sources, simplify data prep, and drive ad hoc analysis. Produce beautiful reports, then publish them for your organisation to consume on the web and across mobile devices. Everyone can create personalised dashboards with a unique, 360-degree view of their business. And scale across the enterprise, with governance and security built-in.&lt;/p>
&lt;h3 id="what-can-you-do-with-it">What can you do with it?&lt;a class="anchor ms-1" href="#what-can-you-do-with-it">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>One of the first thing you can do with Power Bi is connect some of the apps that you use.&lt;/p>
&lt;p>To sign up to use Power BI go to &lt;a href="https://powerbi.microsoft.com/en-us/" target="_blank" rel="noopener noreferrer">https://powerbi.microsoft.com/en-us/&lt;/a>
&lt;/p>
&lt;p>Once you are signed in click the get data link in the bottom left corner and browse through the apps you can use.&lt;/p>
&lt;p>If your website uses google analytics you can connect it up to Power BI and see some cool analytics. The below map was generated from some google analytics data, you can see that this website has had users across the globe, with UK and USA getting a lot of hits. &lt;img class="img-fluid" alt="Business Intelligence from Google Analytics" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/06/Capture.jpg?resize=662%2C349&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Another thing you can do is connect Azure Application Insights. This provides some similar data to google analytics about who is visiting your site.&lt;/p>
&lt;p>If your code is hosted in Visual Studio Team Services you can get some cool analytics from your commit history. &lt;img class="img-fluid" alt="Business Intelligence from VSTS" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/06/Capture-1.jpg?resize=662%2C177&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>There is a huge long list of apps you can connect to power BI so you can start getting all sorts of analysis very easily. I am hopefully going to talk another time about getting custom data into Power BI.&lt;/p></description></item><item><title>Have I Been Pwned?</title><link>https://www.funkysi1701.com/posts/2017/have-i-been-pwned/</link><pubDate>Mon, 29 May 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/have-i-been-pwned/</guid><description>&lt;p>Have you heard of the website &lt;a href="https://haveibeenpwned.com" target="_blank" rel="noopener noreferrer">https://haveibeenpwned.com&lt;/a>
?&lt;/p>
&lt;p>Well you should have. Have I Been Pwned is a website created by security expert Troy Hunt that keeps track of data breaches and allows you to search and find ones that affect you. As I write this &lt;a href="https://www.troyhunt.com/" target="_blank" rel="noopener noreferrer">Troy Hunt&lt;/a>
has tracked 3,752,984,562 pwned accounts from 216 pwned websites.&lt;/p>
&lt;h3 id="what-does-pwned-mean">What does “pwned” mean?&lt;a class="anchor ms-1" href="#what-does-pwned-mean">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>pwn means to compromise or control, specifically another computer (server or PC), website, gateway device, or application. (as defined on wikipedia)&lt;/p>
&lt;p>Originally, pwn and its variants were pronounced /ˈoʊn/ in the same way as the verb own, the tail of the p being “silent”.&lt;/p>
&lt;p>In terms of this site Troy Hunt defines it as:&lt;/p>
&lt;p>&lt;quote>A &amp;ldquo;breach&amp;rdquo; is an incident where a hacker illegally obtains data from a vulnerable system, usually by exploiting weaknesses in the software. All the data in the site comes from website breaches which have been made publicly available.&lt;/quote>&lt;/p>
&lt;h3 id="what-can-i-do">What can I do?&lt;a class="anchor ms-1" href="#what-can-i-do">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>As an individual you can search for your email address in Have I Been Pwned, I am in 7 data breaches.&lt;/p>
&lt;p>As a person responsible for an email domain you can search and find which of your users are in a data breach.&lt;/p>
&lt;p>You can also sign up to get notified of any future data breaches you might get caught up in.&lt;/p>
&lt;p>If you are in a data breach change your password. If you use the same password across multiple sites or services change them as well. Consider using a &lt;a href="https://www.troyhunt.com/only-secure-password-is-one-you-cant/" target="_blank" rel="noopener noreferrer">password manager&lt;/a>
so you can have unique complex passwords for every services you use and not have to worry about forgetting them.&lt;/p>
&lt;p>If you look after a website or service then follow Troy Hunt. Think about security, is your site vulnerable to SQL injection, do you store passwords with reversible encryption?&lt;/p>
&lt;h3 id="how-worried-should-i-be">How worried should I be?&lt;a class="anchor ms-1" href="#how-worried-should-i-be">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Data breaches are happening more and more often. Its not showing any sign of slowing down, in fact I expect there to be lots more in the years to come. However there are things you can do to mitigate the damage of being in a breach.&lt;/p>
&lt;ul>
&lt;li>Use a password manager&lt;/li>
&lt;li>Don’t share passwords between sites&lt;/li>
&lt;li>Regularly change your passwords&lt;/li>
&lt;li>Think of passwords as pass phrases and include spaces between the different words&lt;/li>
&lt;/ul>
&lt;p>Consider what information a company has about you. How worried would you be if this became public knowledge? Consider if you want this online, weigh up the benefits etc&lt;/p></description></item><item><title>Office Move</title><link>https://www.funkysi1701.com/posts/2017/office-move/</link><pubDate>Mon, 01 May 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/office-move/</guid><description>&lt;p>&lt;img class="img-fluid" alt="New Rack" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/04/20170422_191127-e1493403982560-169x300.jpg?resize=169%2C300&amp;amp;ssl=1" loading="lazy"
/>
For the past few weeks my software developing has been taking a back seat as I planned and coordinated the IT requirements of an office move.&lt;/p>
&lt;p>The company I work for has been working out of a converted barn, but as the company has grown we have outgrown the building and for quite a while it has been a real squeeze to get everyone in. We now have a shiny new offices with plenty of room for growth.&lt;/p>
&lt;p>It was at the start of the year when I first started getting involved with the new office. At that time building work was about to begin. The office had concrete floors so in order to get network and power points in the floor, channels would have to be cut into the concrete for the floor boxes and cable runs.&lt;/p>
&lt;p>At the old office our servers were in a cabinet in the corner of the room which meant they could be quite loud especially when the fans were going full pelt. Our American owners were supplying brand new IT equipment and we would have a dedicated server room.&lt;/p>
&lt;p>Soon a weekly conference call was setup so we could coordinate with the IT people in America and the various different contractors that would help deliver our new office.&lt;/p>
&lt;p>One thing I was particularly proud of was YDS. York Data Services (YDS) is an ISP I have worked with in the past at a previous job and I was able to continue my relationship with them and they were contacted and became our primary internet supplier.&lt;/p>
&lt;p>Unfortunately most ISPs have to deal with BTOpenreach who have a bit of a monopoly on getting phone lines or leased lines installed. The initial estimate we were given was two weeks after we were due to move in. It was looking like we would move in and two weeks later we would get an internet connection. We were in the process of getting quotes for a temporary internet connection when BT contacted us and could get us connected up. &lt;img class="img-fluid" alt="New Office" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/05/18121045_1302238519862436_8711390769620542649_o.jpg?resize=300%2C225&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Soon afterwards a huge cabinet and two pallets full of equipment was delivered. Two days later a team was dispatched to rack everything up. On the rack we had the following equipment: 4 x UPS, 4 x Network Switches, 2 x Routers (for 2 x Leased Lines from different providers, the secondary connection has not been installed yet), 2 x Palo Alto Firewall devices, 2 x New Servers.&lt;/p>
&lt;p>Just prior to our move we had a rack full of equipment but no patch cables, nothing connected up and I was beginning to get concerned that we would not be ready in time.&lt;/p>
&lt;p>Thankfully a team was dispatched to help out over the weekend of the move, with the patch cables being delivered only hours beforehand. I worked closely with them and we worked late into the night. By the end of the Friday night our domain controller had been moved and its IP address updated. DHCP scopes had been setup for the new network. Once that was done we could get the WiFi points connected up (These had already been fitted to the ceiling).&lt;/p>
&lt;p>The following day we moved our existing servers and updated their IP addresses and got everything patched up. Furniture started arriving so desks could start being setup and phones connected up. Everything was slotting into place, and for the first time our new office was starting to look like an office.&lt;/p>
&lt;p>By the time it got to Monday the only problem was the phone number had not transferred as requested (something else to blame on BT) All staff could either connect via an Ethernet cable or connect to our brand new WiFi network and had access to all the IT services they had at the old office. Another minor issue was the NAS we used for backups had to be reset as it couldn’t communicate with the domain so no one could login, luckily this didn’t affect the data on it.&lt;/p>
&lt;p>From my perspective the move was a massive success considering how complex and how many different people had been involved.&lt;/p></description></item><item><title>Interfaces</title><link>https://www.funkysi1701.com/posts/2017/interfaces/</link><pubDate>Mon, 27 Mar 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/interfaces/</guid><description>&lt;p>I am trying to understand interfaces and when to use them in my code.&lt;/p>
&lt;p>An interface defines a contract and any class that implements that interface agrees to fulfil that contract.&lt;/p>
&lt;p>Lets look at an example as this tends to be how I learn best.&lt;/p>
&lt;p>Most applications require some sort of data to work from so lets start by defining IData which can load data.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">IData&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Blog LoadData(&lt;span style="color:#66d9ef">string&lt;/span> Connectionstring);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>My interface defines one method LoadData and outputs an object called Blog (I will explain why in a minute)&lt;/p>
&lt;p>A common data source is a SQL database so we could define a SQL class that implements IData.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SQL&lt;/span> : IData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Blog LoadData(&lt;span style="color:#66d9ef">string&lt;/span> Connectionstring)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Blog blog = &lt;span style="color:#66d9ef">new&lt;/span> Blog();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">using&lt;/span> (SqlConnection con = &lt;span style="color:#66d9ef">new&lt;/span> SqlConnection(Connectionstring))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> con.Open();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//etc&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We could also get data from an RSS feed of a blog (hence why I called the object Blog earlier)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">XML&lt;/span> : IData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Blog LoadData(&lt;span style="color:#66d9ef">string&lt;/span> Connectionstring)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> XmlDocument myXmlDocument = &lt;span style="color:#66d9ef">new&lt;/span> XmlDocument();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> myXmlDocument.Load(Connectionstring);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Blog blog = &lt;span style="color:#66d9ef">new&lt;/span> Blog();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> (XmlNode RootNode &lt;span style="color:#66d9ef">in&lt;/span> myXmlDocument.ChildNodes)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//etc&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Both classes implement IData and have a method called LoadData which has a string parameter and outputs a blog object. The string parameter is either a connection string to a SQL database or the URL of the rss feed. Not sure if there is a better way of doing this bit, maybe the name of the string needs making more generic.&lt;/p>
&lt;p>Now we have some classes that implement an interface what can we do with them. Lets write a class called GetData which gets data but doesn’t care if it comes form the rss feed or a SQL database.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">GetData&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> IData &lt;span style="color:#ae81ff">_&lt;/span>repo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> GetData(IData repo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">_&lt;/span>repo = repo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Blog LoadData(&lt;span style="color:#66d9ef">string&lt;/span> Connectionstring)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> original = &lt;span style="color:#ae81ff">_&lt;/span>repo.LoadData(Connectionstring);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> original;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When we call GetData we can either pass in XML or SQL as the class is not tied to either implementation. We could even write other classes that implement IData for testing purposes.&lt;/p>
&lt;p>My full code can be found on &lt;a href="https://github.com/funkysi1701/InterfaceExample" target="_blank" rel="noopener noreferrer">github&lt;/a>
.&lt;/p>
&lt;p>The advantages of writing code in this way include code that is easier to extend, easier to test and easier to maintain. This is only the start of my understanding and I am sure this is going to be a topic I come back to in the next few weeks.&lt;/p></description></item><item><title>Learning R</title><link>https://www.funkysi1701.com/posts/2017/learning-r/</link><pubDate>Mon, 27 Feb 2017 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2017/learning-r/</guid><description>&lt;p>&lt;img class="img-fluid" alt="R" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2017/02/Exchange-Rate-Calculator.jpg?resize=300%2C202&amp;amp;ssl=1" loading="lazy"
/>
Today I spent some time learning the R language.&lt;/p>
&lt;p>The problem I was trying to solve was to convert local prices of some items into Euros. I had been using a fixed exchange rate for all data, but as exchange rates fluctuate so much this is incorrect.&lt;/p>
&lt;p>My first though was to find a free API that I could query to get the values I wanted. The first API I found didn’t cover all the currencies, the next one I found I burnt through the free allowance in one pass.&lt;/p>
&lt;p>A colleague of mine mentioned using R to solve this, he sent me some links and I set out to write my first piece of R code.&lt;/p>
&lt;p>My finished code can be found on &lt;a href="https://github.com/funkysi1701/ExchangeRate/blob/master/script.R" target="_blank" rel="noopener noreferrer">github&lt;/a>
and I will attempt to explain some of it.&lt;/p>
&lt;p>R defines functions fairly simply&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>nameoffunction &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">function&lt;/span>(arg1, arg2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>arg1 &lt;span style="color:#f92672">*&lt;/span> arg2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I have created a function that takes 2 parameters date and currency. I know I have about 10 different currencies that I want to get currencies for and I want to loop through each day so I will need to pass in a date.&lt;/p>
&lt;p>The source of my exchange rate information is the &lt;a href="https://www.xe.com" target="_blank" rel="noopener noreferrer">www.xe.com&lt;/a>
website, its historical exchange rate page passes currency and date into the query string so I should be able to build up a string containing all the different elements.&lt;/p>
&lt;p>All programming language can concatenate strings and R is no different. R uses paste()&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>var &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">paste&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;World&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>However R has an annoying feature in this function. I would expect that var in the above example would contain &amp;ldquo;HelloWorld&amp;rdquo;, it doesn’t it contains &amp;ldquo;Hello World&amp;rdquo;. Why it automatically adds a space I don’t know?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>var &lt;span style="color:#f92672">&amp;lt;-&lt;/span> &lt;span style="color:#a6e22e">paste&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;World&amp;#34;&lt;/span>, sep&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I am not entirely sure what all of the code does but I can take a good guess.&lt;/p>
&lt;p>read_html() I would guess loads a html page, html_nodes() finds all the html tags of a certain type on the page, in my case &amp;lt;table&amp;gt;, html_table() reads the first table it finds.&lt;/p>
&lt;p>table1[2] selects the second column, and head() selects a specific number of rows. I want the first row and second column so I combine these two as head(table1[2],1)&lt;/p>
&lt;p>Now that I have found my exchange rate what do I do with it? R can read and write to SQL Server so why not store this info in a SQL lookup table. I can then use this data in a stored procedure when I process my data.&lt;/p>
&lt;p>To query sql you can use sqlQuery(), it has two parameters, a sql connection and a TSQL command (eg a SELECT, INSERT, UPDATE statement)&lt;/p>
&lt;p>I use a while loop to loop through every day between 1st October 2016 and today and look up the exchange rate for each currency.&lt;/p>
&lt;p>For now I am manually running this R script, however there are ways to run R directly from SQL Server which I may well investigate. I could then have a SQL job to run this on a schedule, maybe once a day to get the latest exchange rates. I also would like to do something a bit cleverer like only getting exchange rates for the days that I need them by querying existing database tables.&lt;/p></description></item></channel></rss>