<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2016 on Funky Si's Blog</title><link>https://www.funkysi1701.com/2016/</link><description>Recent content in 2016 on Funky Si's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 24 Nov 2016 20:00:45 +0000</lastBuildDate><atom:link href="https://www.funkysi1701.com/2016/index.xml" rel="self" type="application/rss+xml"/><item><title>What should be in Source Control?</title><link>https://www.funkysi1701.com/posts/2016/what-should-be-in-source-control/</link><pubDate>Thu, 24 Nov 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/what-should-be-in-source-control/</guid><description>&lt;p>I am currently working on source code that is over 5Gb in size. This is mostly due to a poorly thought out folder structure, there are code files, images and Excel files all jumbled together. I think a clear distinction should be made between source code and data.&lt;/p>
&lt;h3 id="source-code">Source Code&lt;a class="anchor ms-1" href="#source-code">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>I will define source code as anything that is written in order to compile and run the project. If it is a webpage it will be all the HTML, CSS and Javascript or any file used to produce these. I would also include any configuration files and files used to build/deploy the website or project. Anything that is compiled from your source files can safely be ignored.&lt;/p>
&lt;h3 id="data">Data&lt;a class="anchor ms-1" href="#data">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>I would define data as anything that is added to the project during its life. So if you have an upload option, anything that is uploaded I would describe as data. The site should still function without (or very little) data.&lt;/p>
&lt;h3 id="images">Images&lt;a class="anchor ms-1" href="#images">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Images can fit into both groups. Any icons or images attached to the functionality of the project I would class as source code. However anything that is uploaded should be classed as Data.&lt;/p>
&lt;h3 id="databases">Databases&lt;a class="anchor ms-1" href="#databases">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>The database should also be classed as both. The data, anything that is inside a database table should normally be classed as data. Stored Procedures, Functions and Views are all Source Code and would benefit from version control.&lt;/p>
&lt;h3 id="source-control--backup">Source Control != Backup&lt;a class="anchor ms-1" href="#source-control--backup">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Source control is not an excuse not to backup things. Don’t just commit files to source control so you know you can restore them if you need to. Files in general in source control are there so you can see how they changed over time as the code base changed. Files in you backup are a snapshot of what the application was at a point in time and will include ALL the data.&lt;/p>
&lt;p>One last point before I end. If you are hosting on a Cloud Computing platform like Azure it gives you an easy way to distinguish between Data and Code.&lt;/p>
&lt;p>Anything in your&lt;/p>
&lt;ul>
&lt;li>Web App = Code&lt;/li>
&lt;li>Blob Storage = Data&lt;/li>
&lt;li>SQL = Data/Code&lt;/li>
&lt;/ul>
&lt;p>Each project is unique and there will always be exceptions to these suggestions but I think this is a good goal to have. What do you think?&lt;/p></description></item><item><title>Getting control of a codebase</title><link>https://www.funkysi1701.com/posts/2016/getting-control-of-a-codebase/</link><pubDate>Thu, 17 Nov 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/getting-control-of-a-codebase/</guid><description>&lt;p>So recently I started working on a new codebase. I will be honest when I first saw it, it was a mess. Here are a few of the things I did to try and regain control.&lt;/p>
&lt;p>I was given access to the source code on Visual Studio Team Services. However this consisted of a single commit 3 months ago. When I looked at what was running on the production server it was clear that changes were being made live with no regard for source control.&lt;/p>
&lt;p>The first thing I did was commit everything that was running live into source control.&lt;/p>
&lt;p>Next I created a SQL Server Data Tools (SSDT) project to keep track of all the database objects. Previously there was a folder with some stored procedures in it, but these did not match with what was currently running.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2015/12/sql-server-2012-management-studio-splash-screen.png?resize=300%2C204&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I now had in source control the current state of the website and the database, so I knew I could get things back to this state if I made some bad changes.&lt;/p>
&lt;p>Lets start by looking at the website code I had. There was no solution file, the only way to look at the website was to setup my local IIS to run what was in the website folder. I could then use Visual Studio to &amp;ldquo;open&amp;rdquo; my local IIS website and attach to process to debug it.&lt;/p>
&lt;p>Next I Looked at Default.aspx to see how the website worked. The majority of the website code was stored in the database stored procedures. After the tag there was a &amp;lt;% %&amp;gt; which contained a Response.Write(RunSP.RunStoredProcedure(Parameter1, Parameter2, &amp;hellip;) command, which executed a stored procedure and the results of the stored procedure was the html code including any javascript that the webpage needed to display. I will be honest I have never seen any code like it. My guess is that the developer was secretly a DBA and wanted to make any web page changes by just changing how the stored procedures work.&lt;/p>
&lt;p>This meant that the website is not going to do anything without a backup of the database running, and meant my SSDT project was going to be vital. However the database was in a bad state, it consisted of a fair few broken objects and SSDT would not build.&lt;/p>
&lt;p>Using find I went through each of the broken database objects to find where in the code they were being used. Luckily most were referenced in commented out code, so I just removed all the broken database objects. The database could now be built. However there was a dependency on the users table of another database. (This was the developers solution to sharing logins between websites) As I was using SSDT I added a database dependency, problem solved for now.&lt;/p>
&lt;p>Next I tried publishing my database. SQL CMD encountered a parsing error. The reason for this was my SPs contained javascript eg $(document), SQL CMD uses $(DatabaseName) as variables for different database so it was getting itself confused.&lt;/p>
&lt;p>My solution was to use Find and Replace to replace all the $ with &amp;rsquo; + CHAR(36) + '&lt;/p>
&lt;p>So I now have a SSDT project that builds and publishes but still no website project.&lt;/p>
&lt;p>To get the website running from Visual Studio I started off creating a .Net 4 website project and added Entity Framework 5 and MVC 3 via nuget. I then copied all the website code into the new project, and with a bit of work I got it to build. Most of the work was relating to namespaces and referencing the correct one and moving the EF model from AppCode to a custom named folder. A bit of trial and error later I had a version of the website that could be run from Visual Studio.&lt;/p>
&lt;p>I have not deployed my new version of the website as it needs further testing. No automated testing or even a smoke test checklist currently exist.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/11/Visual-Studio-Team-Services.png?w=960&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>As my source code is hosted on Visual Studio Team Services (VSTS), I can get VSTS to build each commit and check I haven’t broken the build. This is not that helpful at the moment, hopefully one day I will have automated tests that can be run here as well.&lt;/p>
&lt;p>Wow, I feel like I have done loads with this code so far but there is loads more still to do. I need to understand more about the business processes behind the code with a hope to understand why some architectural decisions have been made. I want to refactor the code as much as is possible, I would like to remove much of the html/javascript from the stored procedures as I can’t see that there is any advantage to running a website like this. Please correct my if I am wrong.&lt;/p></description></item><item><title>LINQ</title><link>https://www.funkysi1701.com/posts/2016/linq/</link><pubDate>Thu, 06 Oct 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/linq/</guid><description>&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/10/step30.jpg?w=515&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;h3 id="what-is-linq">What is LINQ?&lt;a class="anchor ms-1" href="#what-is-linq">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>&lt;strong>LINQ&lt;/strong> is an acronym for Language Integrated Query, which describes where it’s used and what it does. The Language Integrated part means that LINQ is part of programming language syntax. In particular, both C# and VB are languages that ship with .NET and have LINQ capabilities.&lt;/p>
&lt;h3 id="how-do-i-use-linq-in-my-c-code">How do I use LINQ in my C# code?&lt;a class="anchor ms-1" href="#how-do-i-use-linq-in-my-c-code">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>To use LINQ the first thing you need to do is add the LINQ using statement.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System.Linq;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In your code you need a datasource, for this example I am going to use a simple array, but it can be anything eg SQL, XML etc&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span>[] data = &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>[&lt;span style="color:#ae81ff">10&lt;/span>] { &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>, &lt;span style="color:#ae81ff">7&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#ae81ff">9&lt;/span> };
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next you need a LINQ query. (Note I know the Q in LINQ means query, so I have just written query query, if you are one of those people who hates seeing PIN number you might not like this blog post.) A LINQ query is very similar to a T-SQL query, so if like me you are good with databases this should make sense to you.&lt;/p>
&lt;p>In T-SQL you can have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> num
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WHERE&lt;/span> num &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In LINQ this becomes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> query =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">from&lt;/span> num &lt;span style="color:#66d9ef">in&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">where&lt;/span> num == &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> num;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally you need to do something with the query you have written. I am just going to print the results of my query to console.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> num &lt;span style="color:#66d9ef">in&lt;/span> query)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.Write(num);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="what-other-sql-like-syntax-can-i-use">What other SQL like syntax can I use?&lt;a class="anchor ms-1" href="#what-other-sql-like-syntax-can-i-use">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>In T-SQL you can control ordering using ORDER BY, LINQ has a similar syntax orderby&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">orderby&lt;/span> num &lt;span style="color:#66d9ef">descending&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In T-SQL you can use GROUP BY, to do something similar with LINQ&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">group&lt;/span> num &lt;span style="color:#66d9ef">by&lt;/span> num.Type &lt;span style="color:#66d9ef">into&lt;/span> type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> type
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> type &lt;span style="color:#66d9ef">in&lt;/span> query)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.Write(type.Key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> num &lt;span style="color:#66d9ef">in&lt;/span> type)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.Write(num);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="joins">JOINS&lt;a class="anchor ms-1" href="#joins">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>So you thought joining tables was a SQL Server only thing. Think again you can do this in LINQ&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> joinquery =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">from&lt;/span> cust &lt;span style="color:#66d9ef">in&lt;/span> customers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">join&lt;/span> prod &lt;span style="color:#66d9ef">in&lt;/span> products &lt;span style="color:#66d9ef">on&lt;/span> prod.CustomerId &lt;span style="color:#66d9ef">equals&lt;/span> cust.Id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> { ProductName = prod.Name, CustomerName = cust.CompanyName };
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="conclusion">Conclusion&lt;a class="anchor ms-1" href="#conclusion">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>There are loads more LINQ functionality that you can use. While writing this blog I found &lt;a href="https://code.msdn.microsoft.com/101-LINQ-Samples-3fb9811b" target="_blank" rel="noopener noreferrer">https://code.msdn.microsoft.com/101-LINQ-Samples-3fb9811b&lt;/a>
which has loads of examples of different queries that you can write with LINQ.&lt;/p>
&lt;p>This has inspired me to use LINQ more in my code and learn more about the different queries that could be written.&lt;/p></description></item><item><title>Looking back Ten years</title><link>https://www.funkysi1701.com/posts/2016/looking-back-ten-years/</link><pubDate>Thu, 29 Sep 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/looking-back-ten-years/</guid><description>&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/09/10-year-term-life-insurance.gif?resize=471%2C314" loading="lazy"
/>
&lt;/p>
&lt;p>Next month I will celebrate ten years working at my current job, two weeks after that I will start a new chapter of my life at a new company. Lets take this opportunity to look back ten years at some of the great stuff I have achieved.&lt;/p>
&lt;h3 id="2006">2006&lt;a class="anchor ms-1" href="#2006">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>In 2006 I had no IT experience. If you were to ask me where Event Logs could be found I wouldn’t know, and the letters DNS meant nothing to me. I was quiet and shy but hard working. The idea of making IT my career hadn’t occurred to me, this was just a job.&lt;/p>
&lt;p>I started off life doing first line support and compiling health and safety files onto CD-ROMs (known by the company as Eurofiles) with HTML. At the time the company had a mix of Windows 2000 and Windows XP, using MS Office 2003. Server wise I can’t remember exactly but I think two domain controllers, a database server and a backup server using a tape drive. At this point in time I don’t believe I did a lot with the servers but I think the servers were running Windows Server 2005.&lt;/p>
&lt;p>As time went on I learnt more and more about what the company did and how stuff worked.&lt;/p>
&lt;h3 id="nagios">Nagios&lt;a class="anchor ms-1" href="#nagios">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>One of my early achievements was setting up a nagios server. I have blogged about &lt;a href="https://www.funkysi1701.com/posts/2014/i-love-nagios/">Nagios&lt;/a>
before, but it is a server monitoring system that runs on linux. I am extremely proud of what I have achieved here, no one else in the company had my knowledge of how nagios worked. Initially I even experimented with using a cheap mobile phone connected to the serial port (remember when PCs had these?) to send SMS messages to alert of down time. However this was abandoned when I burned through all the credit on this phone.&lt;/p>
&lt;p>Nagios is still used today, and my current team have been shown how to extend the system as the business changes. My philosophy has always been if we have a problem that Nagios didn’t warn us about we need an extra nagios test. These days the nagios web interface is publicly available on the internet so can be checked from anywhere (assuming the office internet is up!) and a mobile app replaces the SMS idea we originally had.&lt;/p>
&lt;h3 id="2011">2011&lt;a class="anchor ms-1" href="#2011">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>At the end of 2010 the IT Manager resigned, then the Developer resigned and finally the Lead Developer resigned. I was alone. I was IT Manager. I negotiated my first pay rise since joining the company. I was IT.&lt;/p>
&lt;p>Wow things were stressful back then. I had so much to learn but somehow I managed. I learnt how to Interview, yes I have employed some clangers along the way, but also some great staff. As well as internal staff I learnt to deal with contractors. We had contractors to help with our internal systems and also contractors to do development work. One thing I have learnt about contractors is that you will always have to chase them at some point to deliver what you are paying them for.&lt;/p>
&lt;h3 id="server-migration">Server Migration&lt;a class="anchor ms-1" href="#server-migration">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Around the start of 2011 our email server started to show its age. Exchange 2003 had a hard limit on the size of its information store and we were rapidly approaching this. Along with an IT contractor I worked to migrate to Exchange 2010, this was a huge project and caused all sorts of issues which we just worked through. Since then I have done other migrations so Windows Server 2012 and also virtualized many servers in 2013.&lt;/p>
&lt;h3 id="bandwidth">Bandwidth&lt;a class="anchor ms-1" href="#bandwidth">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>A major limit with our infrastructure has always been the internet connection coming in. For a while we tried to load balance three ADSL connections, but the upload speed was always a limiting factor. It was a major victory for the simplification of our network when we got a leased line installed into our head office, helped by a government grant we gave us free installation. Not content with this I did the same again for our second York office, including the free installation.&lt;/p>
&lt;h3 id="learning-development">Learning Development&lt;a class="anchor ms-1" href="#learning-development">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>Since I started I have always been learning development stuff. But in the past few years I have learnt a massive amount helped largely by two main things. My boss passing lots of my responsibility onto others and dedicating lots of my time to development tasks, and also the opportunity to learn with our outsourced development team.&lt;/p>
&lt;h3 id="finishing-off">Finishing off&lt;a class="anchor ms-1" href="#finishing-off">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>There are a few things that have been ongoing that we have wanted to change since I started which I can’t really take the credit for as they are not complete yet, but I am proud as they may be finished in the next few months.&lt;/p>
&lt;p>The company stores calendar information in one giant excel spreadsheet, this is being replaced by outlook calendars.&lt;/p>
&lt;p>Our last Windows Server 2003 server and tape drive is being decommissioned. This is the only server that has been running for the entire time I have been here.&lt;/p>
&lt;p>The way the company keeps track of work coming in and who does what is being reviewed. Over the years many people have tried to adapt the old database that one of the directors created in Access many years ago. I did a major overhaul recently to delete unused columns and added extra invoicing functionality. What is needed is a fresh system, maybe a CRM can do everything they want. I wish them lots of luck in doing this as I know it won’t be easy but it has to be done.&lt;/p>
&lt;h3 id="2016">2016&lt;a class="anchor ms-1" href="#2016">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h3>
&lt;p>There are many other projects and pieces of work that I have done that I am proud of. In 2016 I will leave a stable IT department. All clients are on Windows 10 and using Office 2010. We have virtual servers running Server 2012 and are using some great services from Azure to run our SaaS websites. There are of course things I would have liked to achieve, and things I wish I had done differently but on the whole it feels like the right time to move on, especially now long running projects are starting to conclude.&lt;/p></description></item><item><title>10 Ways to Survive as an IT Manager</title><link>https://www.funkysi1701.com/posts/2016/10-ways-to-survive-as-an-it-manager/</link><pubDate>Thu, 22 Sep 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/10-ways-to-survive-as-an-it-manager/</guid><description>&lt;p>So after five and a bit years of being an IT Manager here is some advice I have learned along the way in no particular order. On the whole I have enjoyed myself but it has been a real challenge at times.&lt;/p>
&lt;h2 id="1-figure-out-what-plates-are-still-spinning">1. Figure out what plates are still spinning&lt;a class="anchor ms-1" href="#1-figure-out-what-plates-are-still-spinning">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Being an IT Manager is all about keeping everything running all of the time. A bit like spinning 5 or 6 plates. You have plates for your servers and network infrastructure, you have plates for bespoke databases that you maintain, you have plates for your staff (including any external contractors), you have plates for any websites or apps that you develop. That is a lot of plates to keep spinning and that before you start thinking about what your boss wants you to deliver. Make sure you know what is happening with all these plates, which ones are happy, which ones are on the way to the floor and which ones you need to get the glue out and repair.&lt;/p>
&lt;h2 id="2-make-it-someone-elses-problem">2. Make it someone else’s problem&lt;a class="anchor ms-1" href="#2-make-it-someone-elses-problem">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>If you can blame someone else do so. If your internet goes down it is your ISPs fault. If your website dies its your hosting company’s fault. Take responsibility for problems but if when something goes wrong you can pick up the phone and ask for help, it will make your life easier.&lt;/p>
&lt;h2 id="3-hire-good-staff">3. Hire good staff&lt;a class="anchor ms-1" href="#3-hire-good-staff">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Hiring poor staff wastes time and money and makes you look bad by others. Demand the highest salary band for new staff that you can afford and don’t agree to hiring anyone that you have doubts about. It is easy to bow to the pressure to get someone quickly but this will always result in worse problems in the long run. Once you have a good team do your best to keep them, and warn upper management of the problems if staff leaves (basically make it their problem not yours!).&lt;/p>
&lt;h2 id="4-learn-learn-learn">4. Learn, Learn, Learn&lt;a class="anchor ms-1" href="#4-learn-learn-learn">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>You may or may not have the opportunity to go on training courses. Whatever your situation spend time learning new stuff that will benefit the company and yourself. You can learn a lot by reading online, you can petition for training from your managers, you can fund training yourself, you can ask for help from your different suppliers. The more you learn, the more you can do and the more useful you can be to the company, plus the more interesting you will find the job.&lt;/p>
&lt;h2 id="5-say-no">5. Say No!&lt;a class="anchor ms-1" href="#5-say-no">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Don’t be afraid to say no. You will always be asked to do the impossible and if something is impossible say so at the start. It wastes everyone’s time if you spend a lot of time trying to do the impossible. Always give your reasons for saying no, and if you always say no people will think you are unhelpful. A better way to say no is to come up with a better solution. No I can’t do it your way but here is a better solution.&lt;/p>
&lt;h2 id="6-dont-give-estimates">6. Don’t give estimates&lt;a class="anchor ms-1" href="#6-dont-give-estimates">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>If you are asked how long something will take you don’t answer straight away or give an exaggerated estimate. Go away and spend some time thinking of everything that is involved before replying. There will always be something that you forgot to consider when first asked about it and looking at the different components will help plan out the work needed as well as provide an estimate.&lt;/p>
&lt;h2 id="7-know-what-to-tell-your-boss-and-what-not-to">7. Know what to tell your boss, and what not to&lt;a class="anchor ms-1" href="#7-know-what-to-tell-your-boss-and-what-not-to">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>This is a hard one to get the balance right for. You need to tell your boss enough so that they appreciate all that you do, but too much and they will stop listening and accuse you of talking in technobabble. I have never got the balance right with this one. I have always aired on the side of not telling my boss enough, and hence they don’t realize that I saved the day on Sunday night as everything is working again on Monday. Do repeat yourself. If your server is running low on resources start asking for replacement hardware early, and increase the frequency and the panic in line with the problems it is causing.&lt;/p>
&lt;h2 id="8-understand-the-problems-of-the-business">8. Understand the problems of the business&lt;a class="anchor ms-1" href="#8-understand-the-problems-of-the-business">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/09/bhrzpww6aehdx1wvrrug.jpg?w=800&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Businesses need to make money. If the one you work for isn’t making enough money you will soon be looking for another. If you work for IT you will quickly start to see the problems of the business, think about what simple changes IT could make to improve things that would benefit the whole company. Some of your suggestions won’t go anywhere, but some may have a massive impact. I can think of a few changes that IT have spearheaded that I am very proud of, upgrading our internet connection, simplifying or automating processes and delivering new versions of software.&lt;/p>
&lt;h2 id="9-ask-for-help">9. Ask for help&lt;a class="anchor ms-1" href="#9-ask-for-help">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Don’t be afraid of asking for help. There are lots of places to look for help. Other departments could take more on, you could recruit extra help, you could hire external contractors. You can ask questions on support forums like &lt;a href="https://serverfault.com/" target="_blank" rel="noopener noreferrer">ServerFault&lt;/a>
or &lt;a href="https://stackoverflow.com/" target="_blank" rel="noopener noreferrer">StackOverflow&lt;/a>
, many software re-sellers or other suppliers are a good point of contact for questions about things they supply. Microsoft Support was also invaluable for a server issue.&lt;/p>
&lt;h2 id="10-think-about-disasters">10. Think about disasters&lt;a class="anchor ms-1" href="#10-think-about-disasters">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Write a disaster recovery plan or backup policy. Yes there will always be something more important that needs doing, but just stop for a moment to think how you would feel if everything died on your watch. The one thing you can rely on with technology is that it will fail at some point. A back of the envelope plan of action is better than no plan at all, even better is a detailed plan of what to do when each and every service you rely on fails. Plan additional services with an idea of adding extra redundancy. Always have multiple Domain Controllers, think about what data you could run from the Cloud. VMs could be replicated to the Cloud, and servers could be run from there.&lt;/p></description></item><item><title>Imposter Syndrome</title><link>https://www.funkysi1701.com/posts/2016/imposter-syndrome/</link><pubDate>Thu, 15 Sep 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/imposter-syndrome/</guid><description>&lt;p>This week I handed in my notice at a job I have had for almost ten years. In a few weeks time I will start a brand new job as a web applications developer.&lt;/p>
&lt;p>This is a great achievement for me and a great chance to learn and expand my development skills.&lt;/p>
&lt;p>However moments after I handed my notice in, a huge wave of uncertainty enveloped me. I have read about this and I think I was suffering from an attack of &lt;strong>Imposter Syndrome&lt;/strong>.&lt;/p>
&lt;p>&lt;em>Despite external evidence of their competence, those with the syndrome remain convinced that they are frauds and do not deserve the success they have achieved. Proof of success is dismissed as luck, timing, or as a result of deceiving others into thinking they are more intelligent and competent than they believe themselves to be.&lt;/em>&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/09/1429677066685.rendition-medium.jpg?w=598&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I started to convince myself I couldn’t do the job I had just accepted and that moments after I arrived on my first day I would be found out as a fraud and kicked out the door.&lt;/p>
&lt;p>My logical brain was no match for the Imposter Syndrome. Having been kicked out the door of this new job, I would become penniless in no time with no employer (even my previous boss wouldn’t want me back) or recruitment agency willing to speak with me.&lt;/p>
&lt;p>OK lets see if we can fight off the Imposter Syndrome and look at a possible worse case scenario. I start at my new job, it is very hard work and a month or so later I have to move on.&lt;/p>
&lt;p>No employer ever would sack me on my first day. My first day will be lots of learning how they do things, looking at procedures. I have lots of experience of learning new things, looking at procedures and if I put the work in I can make this new job a success. I have lots of good ideas and useful experience that no one at my new company has.&lt;/p>
&lt;p>I don’t know what the solution is to Imposter Syndrome other than to try and ignore it by thinking positively and the knowledge that I have done amazing things in the last ten years and I will do the same in the next ten.&lt;/p></description></item><item><title>Happy 50th Star Trek</title><link>https://www.funkysi1701.com/posts/2016/happy-50th-star-trek/</link><pubDate>Thu, 08 Sep 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/happy-50th-star-trek/</guid><description>&lt;p>On September 8th 1966 a TV show called Star Trek first aired. Today 50 years later people around the world are still watching Star Trek.&lt;/p>
&lt;p>I was going to blog about the Star Trek story, but instead why not watch this video.&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Bzi6CmUDabQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>&lt;/iframe></description></item><item><title>DZone</title><link>https://www.funkysi1701.com/posts/2016/dzone/</link><pubDate>Thu, 25 Aug 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/dzone/</guid><description>&lt;p>For a while now I have been sharing some of my blog posts on the &lt;a href="https://dzone.com/" target="_blank" rel="noopener noreferrer">Dzone&lt;/a>
website.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/08/dzone_02.png?w=400&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>The Dzone website allows users to submit links to content and I have been submitting the content I have created on this website. This is how Dzone describes themselves:&lt;/p>
&lt;p>With over 1 Million members, DZone.com is one of the web’s largest communities and publishers of technical content for software professionals. Developers from all over the world come to DZone for the latest and best content to hone their skills and advance their careers.&lt;/p>
&lt;p>Well this week I have been invited to join the &lt;a href="https://dzone.com/pages/mvb" target="_blank" rel="noopener noreferrer">MVB&lt;/a>
(Most Valuable Blogger) programme. The hope is that more of my readers will find my content from the DZone website.&lt;/p>
&lt;p>The DZone team will soon start sharing my content on the DZone website and I hope this will result in even more people reading what I have to say.&lt;/p>
&lt;p>If nothing else this is clearly telling me that my blog is making a difference, people are taking note of me and what I have to say. I need to keep going and keep writing articles and be more consistent.&lt;/p></description></item><item><title>Amazon Web Services Pt 2</title><link>https://www.funkysi1701.com/posts/2016/amazon-web-services-pt-2/</link><pubDate>Thu, 04 Aug 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/amazon-web-services-pt-2/</guid><description>&lt;p>Last time I started looking at Amazon Web Services and how it differed from Azure. I am going to continue looking at what it can do.&lt;/p>
&lt;h2 id="virtual-machines">Virtual Machines&lt;a class="anchor ms-1" href="#virtual-machines">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Lets look at what you can do with Virtual Machines. I selected to create a new Virtual Machine (or as AWS calls them an EC2 Instance)&lt;/p>
&lt;p>First you choose a name for your VM and then the OS that runs on it. There are 5 main OSes to choose from Windows Server, Amazon Linux and a selection of the most common Linux flavours.&lt;/p>
&lt;p>You can then download a certificate to secure your VM.&lt;/p>
&lt;p>Like Azure, AWS takes a few moments to create your VM. While I wait I can see that AWS has configured a firewall so only my current IP can connect to it.&lt;/p>
&lt;p>Once the VM is ready you can download an RDP file. However to get the login details you need to decrypt the password using the certificate you downloaded when you created the VM.&lt;/p>
&lt;p>It is interesting to compare the difference in security between Azure and AWS. Azure allows the resetting of passwords of VMs directly from its console, however I suspect that in AWS if you loose your certificate (AWS states they don’t keep a copy of this) you would have to recreate your VM.&lt;/p>
&lt;p>Like with the Websites the default name of the VM is much less user-friendly than what you get from Azure. However I suspect there are other options I haven’t spotted that may customise these.&lt;/p>
&lt;h2 id="azure-portal-vs-aws-console">Azure Portal vs AWS Console&lt;a class="anchor ms-1" href="#azure-portal-vs-aws-console">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>I really like the Azure Portal. It feels like something that has been designed so you can easily access all the options for a specific Azure feature.&lt;/p>
&lt;p>The AWS Console probably has all the same options as with Azure however I don’t think it looks half as good, and will take me a while looking through menus to find the equivalent options. Part of this is due to my unfamiliarity with AWS, so will get easier with time.&lt;/p></description></item><item><title>Amazon Web Services</title><link>https://www.funkysi1701.com/posts/2016/amazon-web-services/</link><pubDate>Thu, 21 Jul 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/amazon-web-services/</guid><description>&lt;p>I am a big fan of Azure but I know zero about its biggest rival – Amazon Web Services or AWS.&lt;/p>
&lt;p>So lets sign up for a free trial and see what it can do. &lt;img class="img-fluid" alt="Amazon Web Services" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/07/aws-300x169.png?resize=300%2C169" loading="lazy"
/>
&lt;/p>
&lt;p>The AWS free trial is available from &lt;a href="https://aws.amazon.com/free/" target="_blank" rel="noopener noreferrer">https://aws.amazon.com/free/&lt;/a>
and lasts for 12 months. From memory I think the Azure free trial lasted only one month.&lt;/p>
&lt;p>To start you need to login with your amazon account and create an AWS account. This requires your name and address and your payment info (you will only get billed if use services not covered by your free trial).&lt;/p>
&lt;p>Interestingly AWS requires you to verify your identity via an automated phone call. (I don’t recall doing anything like this for Azure but please correct me if I am wrong.)&lt;/p>
&lt;p>Once you are logged in you get a series of links displaying all the different services that are available. First impression is this is a simpler view to Azure’s portal with a similar amount of services. At the top right is an option to select which region you want to use, in Azure I use North Europe and West Europe, AWS has Ireland and Frankfurt.&lt;/p>
&lt;h2 id="create-a-web-app">Create a Web App&lt;a class="anchor ms-1" href="#create-a-web-app">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>First thing to try is setting up a website. I selected create a web app and I get a page asking me for its basic details (very similar to Azure, however AWS asked what language your code is written in, Azure handles all of these) AWS websites appear to support a host of different options similar to Azure.&lt;/p>
&lt;p>The actual creation of your website takes a few moments (like on Azure). However the default URL for websites is similar to &lt;a href="http://test.vjbbimyv7w.eu-central-1.elasticbeanstalk.com/" target="_blank" rel="noopener noreferrer">http://test.vjbbimyv7w.eu-central-1.elasticbeanstalk.com/&lt;/a>
which is not quite as nice as the Azure equivalent &lt;a href="http://test.azurewebsites.net" target="_blank" rel="noopener noreferrer">http://test.azurewebsites.net&lt;/a>
&lt;/p>
&lt;p>Azure has a host of command lines available via powershell. AWS has a similar command line interface called AWS CLI, including the option to deploy from git to your website.&lt;/p>
&lt;p>AWS Toolkit for Visual Studio is an extension that allows for the publishing of websites to AWS. (Just like you can publish to Azure)&lt;/p>
&lt;p>As I learn more about AWS I will continue to blog about it. &lt;a href="https://www.funkysi1701.com/2016/08/04/amazon-web-services-pt-2/">Amazon Web Services Pt 2&lt;/a>
&lt;/p></description></item><item><title>Clever things with MS Access</title><link>https://www.funkysi1701.com/posts/2016/clever-things-ms-access/</link><pubDate>Thu, 07 Jul 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/clever-things-ms-access/</guid><description>&lt;p>I hate MS Access and especially developing with it as you can’t do any thing clever with it.&lt;/p>
&lt;p>&lt;strong>Wrong, Wrong, Wrong!&lt;/strong>&lt;/p>
&lt;p>There are a few clever things I have been able to script to make developing with it passable. I still would rather use Visual Studio but this improves the experience a fair bit.&lt;/p>
&lt;h2 id="source-control">Source Control&lt;a class="anchor ms-1" href="#source-control">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Access files are binary (I use the ADP/ADE file format but I assume other Access file formats have the same problem) and so you can’t diff them to see what has changed. This is bad.&lt;/p>
&lt;p>However there is a solution to this. A tool called Access SVN and can be downloaded from &lt;a href="https://accesssvn.codeplex.com/" target="_blank" rel="noopener noreferrer">https://accesssvn.codeplex.com/&lt;/a>
, this gives you a way to extract to text files all the forms and reports that are in Access. Before every commit I would manually run this tool on my ADP file and extract to text files, then I would commit these text files to source control and could easily see what had changed in each commit.&lt;/p>
&lt;p>Despite the name Access SVN, the tool is not tied to subversion, you can use any source control system, I use git.&lt;/p>
&lt;p>Also included in this tool is a way to do this with the command line, so you can make this a build step on your build server. I have not used this extensively yet, but the syntax is fairly simple&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>asvn.exe e &lt;span style="color:#e6db74">&amp;#34;path to Access file&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;path to txt files&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;*.*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The filter at the end &lt;em>.&lt;/em> allows you to specify what to extract so you could extract all forms/reports beginning with D with &amp;ldquo;&lt;em>.D&lt;/em>&amp;rdquo;. I had trouble using &lt;em>.&lt;/em> because the names of my forms/reports contain characters not allowed in a windows file name. I am sure there is a way round this but I haven’t had chance to look into it further yet.&lt;/p>
&lt;h2 id="testing-ms-access">Testing MS Access&lt;a class="anchor ms-1" href="#testing-ms-access">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>Surely testing is not possible with MS Access? I would have agreed with that statement the other day until I found a neat way of testing if a feature is enabled.&lt;/p>
&lt;p>Firstly a bit of background. I develop using MS Access 2003 because the design view is far easier to use, however because it is out of support all my users use MS Access 2010. MS Access 2010 has a feature called Tabbed Documents which allows all forms and reports to open in new tabs so you can easily switch between them. This feature can only be enabled in MS Access 2010 and has no effect if opening with MS Access 2003.&lt;/p>
&lt;p>If you use Access SVN on your Access file with tabbed documents turned on and off you will see UseMDIMode: 0 and UseMDIMode: 1 show up in the Database properties file. UseMDIMode: 0 means that tabbed documents is turned on.&lt;/p>
&lt;p>In powershell I can now write a test to see if UseMDIMode: 0 can be found in the database properties file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Get-Content &lt;span style="color:#e6db74">&amp;#34;General\Database properties.dbp.txt&amp;#34;&lt;/span> | Select-String &lt;span style="color:#e6db74">&amp;#34;UseMDIMode: 0&amp;#34;&lt;/span> -quiet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the test passes True will be returned, if it fails null will be returned.&lt;/p>
&lt;p>On my build server I scripted the extraction of Database properties.dbp.txt from the ADP file with asvn.exe before running this test. While not strictly needed as Database properties.dbp.txt should be in source control, it is possible that someone could forget to extract the text files from the ADP, with this step you are always testing what is enabled in the binary file.&lt;/p>
&lt;h2 id="ms-access-connection-strings">MS Access Connection Strings&lt;a class="anchor ms-1" href="#ms-access-connection-strings">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>While developing with MS Access I often swap the database connection to point to my local machine or a build server. I always try and remember to only ever commit with this set to the live database to avoid obvious problems.&lt;/p>
&lt;p>The other day I found on &lt;a href="https://stackoverflow.com/questions/16411430/change-access-server-connection-from-command-line" target="_blank" rel="noopener noreferrer">stackoverflow&lt;/a>
a way to script this. I love this! I can include this step in my deployment process and it will overwrite what ever the connection string is in source control with what your production environment needs.&lt;/p>
&lt;p>All you need to run this step is, (note it is spaces between the parameters not commas)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cscript connect.vbs Project.adp &lt;span style="color:#e6db74">&amp;#34;ServerName&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;DatabaseName&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The contents of connect.vbs can be found on the &lt;a href="https://stackoverflow.com/questions/16411430/change-access-server-connection-from-command-line" target="_blank" rel="noopener noreferrer">stackoverflow article&lt;/a>
. It is also possible to pass username and password if your environment requires this.&lt;/p>
&lt;h2 id="compiled-ade">Compiled ADE&lt;a class="anchor ms-1" href="#compiled-ade">&lt;i class="fas fa-link">&lt;/i>&lt;/a>&lt;/h2>
&lt;p>The last clever thing I do with MS Access is convert my ADP file into the compiled ADE version. To manually do this there is an option in the tools menu.&lt;/p>
&lt;p>To automate this I run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cscript createADE.vbs &lt;span style="color:#e6db74">&amp;#34;path to ADP&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;path to ADE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The contents of createADE came from this &lt;a href="https://social.msdn.microsoft.com/Forums/office/en-US/01fd48a9-258e-4405-86f1-adfb2f1057ee/create-an-access-2007-ade-from-a-adp-via-commandline?forum=accessdev" target="_blank" rel="noopener noreferrer">forum post&lt;/a>
, the only change I made was to comment out some of the echo statements so it would run silently as part of my build process. It should be noted that cscript and wscript are almost identical and either will run these scripts however in a command line environment cscript is preferable, and wscript should be used in a windows environment.&lt;/p>
&lt;p>I am quite surprised at how much I have managed to do in terms of scripting the build and deployment process for MS Access. I still don’t like developing with Access but this has definitely improved things.&lt;/p></description></item><item><title>Periodic Table of DevOps</title><link>https://www.funkysi1701.com/posts/2016/periodic-table-devops/</link><pubDate>Thu, 30 Jun 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/periodic-table-devops/</guid><description>&lt;p>The periodic table lists all the chemical elements and groups them together based on some key properties. Today I found an article about the &lt;a href="https://xebialabs.com/periodic-table-of-devops-tools/" target="_blank" rel="noopener noreferrer">periodic table of DevOps&lt;/a>
.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/06/https-xebialabs.com-assets-files-infographics-periodic-table-of-devops-v2.png?resize=1024%2C572&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>I am not going to discuss every element but I thought I might go through some that I have heard of or used.&lt;/p>
&lt;ul>
&lt;li>Github – The repository of lots of open source software. My Github can be found at &lt;a href="https://github.com/funkysi1701" target="_blank" rel="noopener noreferrer">https://github.com/funkysi1701&lt;/a>
&lt;/li>
&lt;li>Amazon Web Services – The second most popular cloud computing provider (not sure why this isn’t number 3?)&lt;/li>
&lt;li>Git – The distributed source control system that everyone uses these days.&lt;/li>
&lt;li>Azure – The number one cloud provider, I have used this a lot, mostly with websites but also with some of their other features like Traffic Manager.&lt;/li>
&lt;li>Bitbucket – like Github but allows private repositories. I have used this extensively for work based projects that I don’t want to be public.&lt;/li>
&lt;li>Google Cloud Platform – don’t know much about this one, but no surprise that google wants a piece of the cloud computing pie.&lt;/li>
&lt;li>Selenium – This is a product I want to play about with as allows front end testing with a browser.&lt;/li>
&lt;li>Rackspace – Before we made the jump to Azure we made use of some Rackspace servers.&lt;/li>
&lt;li>Subversion – The first source control system that I used, but been using git so long now not sure I can remember how it worked.&lt;/li>
&lt;li>Visual Studio – The IDE from Microsoft that I use to write code. I am a big fan as it does everything I could want.&lt;/li>
&lt;li>TeamCity – The continuous integration software that I have been using to automate my deployments.&lt;/li>
&lt;li>MSBuild – This is used by Visual Studio to build your software and can also be used by your deployment scripts.&lt;/li>
&lt;li>Trello – A website that allows you to create a board of ideas or things to do.&lt;/li>
&lt;li>Slack – Brings all your communication together in one place. It’s real-time messaging, archiving and search for modern teams.&lt;/li>
&lt;li>New Relic – A software analytics tool suite used by developers, ops, and software companies to understand how your applications are performing. Useful but find myself favouring Application Insights (part of Azure) more now.&lt;/li>
&lt;li>Nagios – Yay nagios is on the list! My favourite server monitoring system.&lt;/li>
&lt;li>Splunk – This application can be used to search, monitor and analyse all your log files to find out what is happening. Don’t currently use it but I have tried it out in the past.&lt;/li>
&lt;/ul>
&lt;p>What is your favourite DevOps tool? Why not leave a comment below?&lt;/p></description></item><item><title>Automatic Git Tagging</title><link>https://www.funkysi1701.com/posts/2016/automatic-git-tagging/</link><pubDate>Thu, 16 Jun 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/automatic-git-tagging/</guid><description>&lt;p>One of the features of git is the ability to tag a point in my change history with a tag. For a while now I have been manually tagging my code whenever I do a release, so I can easily work out what has changed by doing a diff between two tags.&lt;/p>
&lt;p>Now that I am automating my release process with TeamCity I am thinking about how to manage my tags better.&lt;/p>
&lt;p>TeamCity has a setting called VCS Labeling which comes in very handy.
&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/06/Untitled.jpg?w=1595&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Configuring it is fairly simple as it only has three settings.&lt;/p>
&lt;p>&lt;strong>VCS root to label&lt;/strong>: This is obviously the url to your git repository
&lt;strong>Labeling pattern&lt;/strong>: This is the text of the label to be added.
&lt;strong>Label successful builds only&lt;/strong>: Do you really want to add a tag if the build failed?&lt;/p>
&lt;p>A tag needs to have a unique name, so adding a tag just called &lt;strong>deployed&lt;/strong> won’t work. When I used to add tags manually I used the naming convention of &lt;strong>deployedyyyymmdd&lt;/strong>. While this naming convention is possible with TeamCity I use something a bit more complex to provide more information about what has been deployed.&lt;/p>
&lt;p>TeamCity provides lots of parameters that can be used in your build steps and also in the Labeling pattern box. I started off using &lt;strong>deployed-build-%system.build.number%&lt;/strong> as my tag which just marks git with the TeamCity build number.&lt;/p>
&lt;p>When I run a TeamCity deployment I don’t always use the same configuration options, I deploy locally, to a test server or to production and sometimes I just deploy the frontend or the backend. How cool would it be to include this information in the tag text?&lt;/p>
&lt;p>Well the next step was to change my Labeling pattern to &lt;strong>deployed-build-%system.build.number%-%ServerName%-%DatabaseName%-%FrontEndPath%&lt;/strong>, this adds the backend database config settings and the path the frontend was deployed to. Now when looking at git you can see commits marked with multiple tags, one for each deployment that succeeded and the tag will indicate the settings used during that deployment.&lt;/p>
&lt;p>Now I will never forget to add the tag after a release as the adding of a tag is part of the deployment process, if the deployment fails the tag won’t be added. I can test my deployment to test and git will show if this has been successful, and when I deploy live this will also show up.&lt;/p>
&lt;p>How do you use tags? Do you mark successful builds with a tag? Why not let me know or leave a comment below.&lt;/p></description></item><item><title>I’m 100 blog posts old</title><link>https://www.funkysi1701.com/posts/2016/i-m-100-blog-posts-old/</link><pubDate>Thu, 02 Jun 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/i-m-100-blog-posts-old/</guid><description>&lt;p>That’s right this is the one hundredth post that I have written on this blog.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="100-posts-old-L-fwCF_f" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/06/100-posts-old-L-fwCF_f-300x247.jpeg?resize=300%2C247" loading="lazy"
/>
&lt;/p>
&lt;p>&lt;strong>So what have I learned in the past 100 posts?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>It is easier to write a blog before you become a parent. More recently I am increasingly finding it difficult to find the time to blog. It used to be that I could write on an evening, but now James is around I often prefer to play with him, or more often stop him crawling where he shouldn’t.&lt;/li>
&lt;li>I like my job. The inspiration for most of this site is my day job and as you can read, I do a wide variety of different things, but I have a lot more to learn as well.&lt;/li>
&lt;li>Finding your niche is hard. 100 posts in and I am still not sure what my niche is. I started out with the broad niche of IT and what I do, I then considered something about IT and fatherhood but I don’t think that topic is really me. My current thinking is maybe DevOps especially as my role these days fits squarely between Development and Operations.&lt;/li>
&lt;li>Its time for a refresh. I have been meaning to change the theme of this site for some time and I feel after 100 posts now is as good as time as any. I want to emphasise my skills and what I am learning and increase the emphasis on DevOps, which I think will be my niche.&lt;/li>
&lt;li>Watching visitor numbers is addictive. Every day I look at how many people have looked at my blog, but I have yet to see a pattern between what I write and how many reads I get. Is my writing getting better? I don’t know. Are more people reading? Probably not. Will I keep going? Yes&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>So what is next?&lt;/strong>&lt;/p>
&lt;p>Hopefully a refreshed look in the next few months. Hopefully regular posts. If there is something you want to see on here drop me a message via any of the social media links or put a comment below.&lt;/p>
&lt;p>&lt;strong>What is my favourite post?&lt;/strong>&lt;/p>
&lt;p>Maybe &lt;a href="https://www.funkysi1701.com/2015/05/30/user-groups-and-f/">User Groups and F#&lt;/a>
which proved very popular and got me to start going to user groups something I still enjoy today. I also like &lt;a href="https://www.funkysi1701.com/2016/02/25/coding-myself-into-a-corner/">Coding Myself Into A Corner&lt;/a>
which got me to start thinking more if I was giving myself future problems. But there are many others I like such as &lt;a href="https://www.funkysi1701.com/2015/09/03/baby-magic-and-becoming-a-father/">James and Becoming a father&lt;/a>
&lt;/p></description></item><item><title>Brothers, TNG S4 E3 Review, The Battle Bridge</title><link>https://www.funkysi1701.com/posts/2016/brothers-tng-s4-e3-review-battle-bridge/</link><pubDate>Thu, 26 May 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/brothers-tng-s4-e3-review-battle-bridge/</guid><description>&lt;p>My latest podcast can be found &lt;a href="http://www.trekmate.org.uk/brothers-tng-s4-e3-review-the-battle-bridge/" target="_blank" rel="noopener noreferrer">http://www.trekmate.org.uk/brothers-tng-s4-e3-review-the-battle-bridge/&lt;/a>
and feedback can be left on the trekmate forums &lt;a href="http://forum.trekmatefamily.com/2016/05/brothers-tng-s4-e3-review-the-battle-bridge/" target="_blank" rel="noopener noreferrer">http://forum.trekmatefamily.com/2016/05/brothers-tng-s4-e3-review-the-battle-bridge/&lt;/a>
&lt;/p>
&lt;p>Data jeopardizes an emergency mission to save an ill child when he gets a signal from his creator.&lt;/p>
&lt;p>Today James and Lou discuss (Brothers) and what we think of it, with tonight’s guest host Simon Foster, Funky Si.&lt;/p>
&lt;p>Credit: &lt;a href="http://images.wikia.com/memoryalpha/en/images/1/1a/TNG_maintitle_3-7v2.ogg" target="_blank" rel="noopener noreferrer">Main Title Theme (TV Edit)&lt;/a>
was arranged by &lt;a href="http://en.memory-alpha.org/wiki/Dennis_McCarthy" target="_blank" rel="noopener noreferrer">Dennis McCarthy&lt;/a>
and composed by &lt;a href="http://en.memory-alpha.org/wiki/Jerry_Goldsmith" target="_blank" rel="noopener noreferrer">Jerry Goldsmith&lt;/a>
and &lt;a href="http://en.memory-alpha.org/wiki/Alexander_Courage/" target="_blank" rel="noopener noreferrer">Alexander Courage&lt;/a>
&lt;/p>
&lt;p>You can download the MP3 version of this show by &lt;a href="http://media.blubrry.com/trekmate/p/media.blubrry.com/previouslyalpha/p/media.blubrry.com/trekmatesupplemental/p/media.blubrry.com/loutrekshow/p/media.techpodcasts.com/loutrekshow/p/www.trekmate.org.uk/battlebridge/tbb-s4e03-.mp3" target="_blank" rel="noopener noreferrer">clicking here. (might have to right click, save as.)&lt;/a>
&lt;/p></description></item><item><title>Running Windows on Raspberry Pi</title><link>https://www.funkysi1701.com/posts/2016/windows-10-raspberry-pi-3/</link><pubDate>Thu, 05 May 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/windows-10-raspberry-pi-3/</guid><description>&lt;p>Last year you may remember me talking about playing with a Raspberry Pi. Well since then my Raspberry Pi has been sat on a desk collecting dust.&lt;/p>
&lt;p>This week I attended Leeds Sharp and the topic was &lt;strong>Running Windows on Raspberry Pi&lt;/strong> and this has inspired me again to do something with a Pi.&lt;/p>
&lt;p>But first what did I learn.&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Here are a couple more of pics of last nights &lt;a href="https://twitter.com/LeedsSharp?ref_src=twsrc%5Etfw">@LeedsSharp&lt;/a> &lt;a href="https://t.co/QvlsYjNFvB">https://t.co/QvlsYjNFvB&lt;/a> &lt;a href="https://twitter.com/hashtag/RaspberryPi?src=hash&amp;amp;ref_src=twsrc%5Etfw">#RaspberryPi&lt;/a> &lt;a href="https://twitter.com/hashtag/MSIoT?src=hash&amp;amp;ref_src=twsrc%5Etfw">#MSIoT&lt;/a> &lt;a href="https://t.co/60o4wiiPSv">pic.twitter.com/60o4wiiPSv&lt;/a>&lt;/p>&amp;mdash; Richard Tasker 🇬🇧 (@ritasker) &lt;a href="https://twitter.com/ritasker/status/725970415189909504?ref_src=twsrc%5Etfw">April 29, 2016&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>I had heard that a cut down version of Windows 10 could be installed on the newer Raspberry Pi’s, but I hadn’t really understood how cut down the version of windows is. Having now seen it demonstrated the OS consists of a single page with a few menu options.&lt;/p>
&lt;p>The real power of Windows 10 IoT is when you connect remotely to it. There are a couple of ways to do this, PowerShell (check out &lt;a href="https://ms-iot.github.io/content/en-US/win10/tools/CommandLineUtils.htm" target="_blank" rel="noopener noreferrer">https://ms-iot.github.io/content/en-US/win10/tools/CommandLineUtils.htm&lt;/a>
for a few commands), and of course connecting Visual Studio to your Pi.&lt;/p>
&lt;p>When I had previously played with a Pi, it had been with bash scripts and linux commands. The beauty of installing Windows IoT is that you can write c# code, something I do in my day job so theoretically I should find it easier.&lt;/p>
&lt;p>The demonstration at Leeds Sharp was pretty impressive. If you are a fan of the Big Bang Theory you may recall Sheldon playing a Theremin. Well it is actually possible to construct a Theremin from a couple of sensors and a Raspberry Pi. The code for which is on &lt;a href="https://github.com/ritasker/IoTDemos" target="_blank" rel="noopener noreferrer">github&lt;/a>
.&lt;/p>
&lt;p>Now that I have been inspired what shall I do?&lt;/p>
&lt;p>My Raspberry Pi won’t support Windows 10 IoT, so I need to buy the latest version. I am thinking of buying a kit so I can play about with a breadboard, LEDs and resistors. Maybe not build a robot straight away but certainly try doing something that connects to the GPIO pins.&lt;/p>
&lt;p>If you have any suggestions leave a comment below.&lt;/p></description></item><item><title>Exchange Web Services</title><link>https://www.funkysi1701.com/posts/2016/exchange-web-services/</link><pubDate>Thu, 21 Apr 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/exchange-web-services/</guid><description>&lt;p>Where I work we use a really old fashioned way of recording where in the country employees are: Excel!&lt;/p>
&lt;p>For years I have been trying to persuade staff to use calendars in Exchange. Outlook is great for looking at one or two people’s calendars at once but quickly gets unmanageable for looking at ten or more peoples availability.&lt;/p>
&lt;p>Recently I have started looking into how easy it is to query this information to give a custom view.&lt;/p>
&lt;p>Microsoft provide an API to query exchange information called Exchange Web Services or EWS. I have only used EWS with my Exchange 2010 setup, but the documentation mentions working with Exchange 2007 and older or Exchange online.&lt;/p>
&lt;p>Here are the basics of what I have tried. Fire up Visual Studio and from nuget install EWS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Install-Package Microsoft.Exchange.WebServices
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I started off with a simple Console App to see how it all worked, and then extended it to a MVC website. I found querying exchange directly was slow, but it is easy enough to cache information in a database.&lt;/p>
&lt;p>To start you need to create an Exchange Service object, by specifying the version of Exchange you are using.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>ExchangeService service = &lt;span style="color:#66d9ef">new&lt;/span> ExchangeService(ExchangeVersion.Exchange2010);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next you need to pass the URL you are using to access Exchange.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>service.Url = &lt;span style="color:#66d9ef">new&lt;/span> Uri(&lt;span style="color:#e6db74">&amp;#34;mail.example.com&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To access information from exchange you need to pass some Exchange credentials, ideally a username and password that has access to view all the calendars you want to look at.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>service.Credentials = &lt;span style="color:#66d9ef">new&lt;/span> WebCredentials(&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next pass the email address of the user who owns the calendar you want to look at.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>service.ImpersonatedUserId = &lt;span style="color:#66d9ef">new&lt;/span> ImpersonatedUserId(ConnectingIdType.SmtpAddress, &lt;span style="color:#e6db74">&amp;#34;me@example.com&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>My particular exchange server has a self signed SSL certificate which is not going to be trusted by remote clients. The following line ignores this validation check and makes my program connect.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>System.Net.ServicePointManager.ServerCertificateValidationCallback = (sender, certificate, chain, sslPolicyErrors) =&amp;gt; &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now that we have connected to exchange we just need a few lines to look for events in the calendars.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Initialize the calendar folder object with only the folder ID.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CalendarFolder calendar = CalendarFolder.Bind(service, WellKnownFolderName.Calendar, &lt;span style="color:#66d9ef">new&lt;/span> PropertySet());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Set the start and end time and number of appointments to retrieve.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CalendarView cView = &lt;span style="color:#66d9ef">new&lt;/span> CalendarView(startDate, endDate);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Limit the properties returned to the appointment&amp;#39;s subject, start time, and end time.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cView.PropertySet = &lt;span style="color:#66d9ef">new&lt;/span> PropertySet(AppointmentSchema.Subject, AppointmentSchema.Start, AppointmentSchema.End);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Retrieve a collection of appointments by using the calendar view.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FindItemsResults&amp;lt;Appointment&amp;gt; appointments = calendar.FindAppointments(cView);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now that you have an appointments object you can loop through each element with a foreach loop. In my case I assign each elements Subject to a variable, which I can then do what I like with (display in a console window, save to a database, display in an MVC website.)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">foreach&lt;/span> (Appointment a &lt;span style="color:#66d9ef">in&lt;/span> appointments)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (a.Subject != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subject += a.Subject.ToString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>My website queries a SQL database which I can easily populate with a console app that runs at regular intervals throughout the day.&lt;/p>
&lt;p>There is a lot more I want to do with this project as this is only the basics of what you can do with Exchange Web Services. So expect more blog posts on this subject as I expand its functionality and learn new ways of doing things.&lt;/p></description></item><item><title>Revisiting Team City</title><link>https://www.funkysi1701.com/posts/2016/revisiting-teamcity/</link><pubDate>Thu, 24 Mar 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/revisiting-teamcity/</guid><description>&lt;p>Last year I blogged about &lt;a href="http://www.funkysi1701.com/2015/04/01/teamcity/">Team City&lt;/a>
, well I have been looking at it again recently. In that time they have even changed their logo!&lt;/p>
&lt;p>Lets start with thinking about what I want my Continuous Integration server to do.&lt;/p>
&lt;ol>
&lt;li>Check out my code from source control (usually master but all feature branches would be even better)&lt;/li>
&lt;li>Configure specific setting for build&lt;/li>
&lt;li>Build my code&lt;/li>
&lt;li>Build my databases&lt;/li>
&lt;li>Run any unit tests&lt;/li>
&lt;li>(Optional) Run deployment to Azure Test/Live site&lt;/li>
&lt;/ol>
&lt;p>There are probably other things I want to achieve but I will start with these six.&lt;/p>
&lt;ol>
&lt;li>Checking out code from source control is something Team City does out of the box, so I can safely say I have done this now. It even monitors a branch for changes and initiates a new check out.&lt;/li>
&lt;li>Team City allows you to create specific build steps so in theory you can have multiple builds for every variation of settings that you want for your code. I have not tried this yet apart from building with the default config, but I don’t expect it will be too difficult.&lt;/li>
&lt;li>I have managed to get my code to build with Team City, it took a bit of tweaking the different build steps but wasn’t too difficult. Team City has a visual studio build agent which takes you solution file and does what it needs to. The one problem I have found with this step is that I get errors with my tests if I select a Debug config instead of Release.&lt;/li>
&lt;li>Databases are always the problem part of the deployment. So far I have manually deployed my databases but I intend on revisit this step. A &lt;a href="https://stackoverflow.com/questions/21555038/how-can-i-execute-sql-scripts-using-teamcity" target="_blank" rel="noopener noreferrer">stackoverflow&lt;/a>
post suggests that I can run SQL code via Team City in the following way by creating a command line executable:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Command executable: c:&lt;span style="color:#ae81ff">\P&lt;/span>rogram Files&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft SQL Server&lt;span style="color:#ae81ff">\1&lt;/span>00&lt;span style="color:#ae81ff">\T&lt;/span>ools&lt;span style="color:#ae81ff">\B&lt;/span>inn&lt;span style="color:#ae81ff">\s&lt;/span>qlcmd.exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Command parameters: -S &lt;span style="color:#f92672">[&lt;/span>ServerName&lt;span style="color:#f92672">]&lt;/span> -i &lt;span style="color:#f92672">[&lt;/span>PathToSQLScript&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I have yet to try this but I am hopefully that it will just work. Dropping a database and restoring a back and then running different SQL scripts is all possible from TSQL, so I should be OK. Watch this space for more details.&lt;/p>
&lt;ol start="5">
&lt;li>Running the unit tests got me stuck for a while. I tried setting it up using VSTest or MSTest neither worked mainly because a config file wasn’t being copied with the test binaries. When I tried using NUnit it just worked. The tests that failed gave me a few config settings to change.&lt;/li>
&lt;li>I have powershell scripts that deploy to Azure websites, I think that these could form the basis of a deployment to Azure. Again the difficult step here may end up being deploying all the different databases to Azure. This is also the riskiest step as I need to connect to live servers which is why I will leave this to last, at the very least I could generate scripts that do a full deployment.&lt;/li>
&lt;/ol>
&lt;p>That’s it for now. Once I have this all working I will revisit again with details of the database steps as I am expecting a few challenges to overcome. What have you used a CI Server for? Are there other things I want to achieve from a project like this? Why not contact me or leave a comment below&lt;/p></description></item><item><title>Model View Controller (MVC)</title><link>https://www.funkysi1701.com/posts/2016/model-view-controller-mvc/</link><pubDate>Thu, 17 Mar 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/model-view-controller-mvc/</guid><description>&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/03/27.jpg?w=327&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>Model View Controller or MVC is a software architectural pattern for implementing user interfaces on computers. It divides a given software application into three interconnected parts, so as to separate internal representations of information from the ways that information is presented to or accepted from the user.&lt;/p>
&lt;p>I have been trying to get my head around the concept of MVC for a while, hopefully writing this article will help solidify my understanding of it.&lt;/p>
&lt;p>One of the core concepts of MVC is the ability to separate concerns so you can concentrate your energies on one aspect of the application.&lt;/p>
&lt;p>&lt;strong>Model&lt;/strong> This is the data. If your application uses a database the model often mirrors what you have in the database and concerns itself retrieving information from the database.&lt;/p>
&lt;p>&lt;strong>View&lt;/strong> This concerns itself with displaying the data to the user. Typically this is the html pages of your application.&lt;/p>
&lt;p>&lt;strong>Controller&lt;/strong> This concerns itself with actually doing things and deals with user interaction. Typically it will get data from the view and send data to the model.&lt;/p>
&lt;p>The three concerns can be developed in isolation as they do not depend on each other, for larger development teams you can even divide up development much easier that a traditional app.&lt;/p>
&lt;p>The basic concept of MVC I get and understand, however I find myself getting bogged down in the details.&lt;/p>
&lt;p>The database doesn’t matter. I need to remember this and not get sidetracked in writing custom methods to connect to the database which end up unmanageable. I know SQL, so can easily write SQL commands to copy data into the format I need for my app. The app I am currently working on involves a large amount of existing data, and I need to concentrate on the MVC parts and worry about the database later.&lt;/p>
&lt;p>In previous attempts I have tried to build my model against many tables, but instead I can write a query against many tables and insert that into one table which the Model can then use.&lt;/p>
&lt;p>Changing the model often results in an error informing you that the context has changed since the database was created. The easy solution to this in my case is to drop the database and allow entity framework to recreate the database each time. As long as my database contains no new data, I won’t loose anything.&lt;/p>
&lt;p>One of the core advantages of MVC is the ability to test it or even use test driven development (TDD). I haven’t really dabbled with testing yet as I am still trying to get my head around the fundamentals, but once I have made some progress with my app I want to test, so next time I get asked to add a new feature I have no fear about breaking stuff.&lt;/p>
&lt;p>For the first time I have got an app with a working Authentication system from the start. And it is remarkably easy to implement with one keyword. Adding &lt;strong>[Authorize]&lt;/strong> to the top of your controller is all that is needed. Building the actual Authentication system is relatively easy from Visual Studio, as it has templates for Azure AD, Forms Based, Open Auth like google/twitter etc.&lt;/p>
&lt;p>It is still very early days for my MVC app and my understanding of it, but I feel I have turned the corner and can actually build something with it now, rather than be stuck in a downward spiral of confusion.&lt;/p>
&lt;p>What do you think about MVC why not leave a comment below? For more info about MVC I have been looking at &lt;a href="http://www.asp.net/mvc" target="_blank" rel="noopener noreferrer">http://www.asp.net/mvc&lt;/a>
which has more information and tutorials.&lt;/p></description></item><item><title>Surface Book Review</title><link>https://www.funkysi1701.com/posts/2016/surface-book-review/</link><pubDate>Thu, 10 Mar 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/surface-book-review/</guid><description>&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/02/en-INTL-PDP0-Surface-Book-CR9-00001-P2.jpg?w=780&amp;amp;ssl=1" loading="lazy"
/>
I have just bought myself a new laptop, but it is not just any laptop it is a &lt;a href="https://www.microsoftstore.com/store/msuk/en_GB/pdp/productID.332604800" target="_blank" rel="noopener noreferrer">Microsoft Surface Book&lt;/a>
.&lt;/p>
&lt;p>I think this is probably the first time I have bought myself a top of the range laptop and after a few days of use I am loving it.&lt;/p>
&lt;p>The Surface Book is the latest in Microsoft’s Surface line of tablets but the first to feature a keyboard and be more like a traditional laptop. The keyboard is detachable from the keyboard so you can use the Surface Book like a tablet.&lt;/p>
&lt;p>As it is a top of the range laptop, it was not cheap, so if price is a significant factor in your laptop choice this is not the machine for you. Microsoft are trying to compete with Apple’s Macbook range.&lt;/p>
&lt;p>So what did I get for my money:&lt;/p>
&lt;ul>
&lt;li>Windows 10 Pro&lt;/li>
&lt;li>16Gb RAM&lt;/li>
&lt;li>512Gb SSD (Formatted Size nearer 474Gb)&lt;/li>
&lt;li>6th Generation Intel Core i7 Processor&lt;/li>
&lt;li>Surface Pen&lt;/li>
&lt;li>13.5-inch touch screen&lt;/li>
&lt;/ul>
&lt;p>I have only had the device for a few days but these are my thoughts so far. My primary reason for buying this is for doing development work with Visual Studio and SQL Server.&lt;/p>
&lt;p>I really like the Surface Pen. This is a feature that I didn’t think I would use much. The Pen connects via bluetooth and allows interaction with the touch screen. The pressure sensitive screen allows all sort of touch actions to be performed.&lt;/p>
&lt;p>I especially like the choice of keyboards that are offered when the physical keyboard is detached. You can have either a on screen keyboard which you can type with pen or fingers, an on screen keyboard that splits in half or you can write with the pen. This is an amazing feature. My handwriting is not good but most of the time it understands my scrawl. With this option you can hand write a tweet or fill in a form on a webpage. For speed I would not recommend this form of input for large amounts of text, but for browsing the web of when you are just clicking on links it is great.&lt;/p>
&lt;p>Windows Hello – I can unlock windows just by looking at my screen. How cool is that! It was really easy to setup, it just takes a photo of your face and next time you login all you need to do it look at the screen. Note if you are working in tablet mode, make sure the tablet is the correct way up.&lt;/p>
&lt;p>It’s not all brilliant though. Detaching the screen is fiddly and sometimes takes a few moments to do. A few times I have felt I needed another hand but I am sure the more I do this the easier I will find it to do.&lt;/p>
&lt;p>Battery life isn’t great especially when running off the tablet only. This is due to the machine having two batteries, one in the base and one in the screen so with keyboard attached you have much longer use times. Actually I am finding the battery is lasting longer now that I have used it for a few days.&lt;/p>
&lt;p>The screen has a very high resolution 3000 x 2000 but using clever zooming technology everything is still readable and not tiny. However I use Remote Desktop a lot and this caused me a problem. When RDPing the remote session used the host screen resolution which made everything tiny on my servers. The solution to this can be found on &lt;a href="https://superuser.com/questions/891413/remote-connection-desktop-manager-2-7-does-not-support-dpi-scaling-anymore" target="_blank" rel="noopener noreferrer">SuperUser&lt;/a>
and involved using Microsoft’s Remote Desktop Connection Manager, a cool bit of software for managing multiple RDP sessions. This is actually an improvement on the way I usually work, but until I found the answer this was annoying.&lt;/p>
&lt;p>Another minor annoyance with the keyboard is that you can’t press Ctrl-Alt-Del with one hand. Normally this isn’t a requirement but if the screen locks while I have my son on my lap I am stuck, but I won’t blame the surface book for this.&lt;/p>
&lt;p>When I got my Surface Book I was also given a Microsoft Wireless Display Adapter. I am not a fan of this bit of tech as I can’t get it to work. I briefly got my old laptop to connect but my Surface Book keeps telling me NO!&lt;/p>
&lt;p>Overall I like the Surface Book. It is certainly the nicest laptop I have ever used. Now that I have the docking station I can connect two monitors, have a wired internet connection and it becomes a proper work horse. What does everyone else think? Better than Apple’s range of laptops?&lt;/p></description></item><item><title>Trying Out Azure Active Directory</title><link>https://www.funkysi1701.com/posts/2016/trying-out-azure-active-directory/</link><pubDate>Thu, 03 Mar 2016 20:00:45 +0000</pubDate><guid>https://www.funkysi1701.com/posts/2016/trying-out-azure-active-directory/</guid><description>&lt;p>One of my plans is to create new MVC Webapps for my companies databases. Once I publish these I will need to secure them so only staff have access.&lt;/p>
&lt;p>The traditional way to do this would be insert membership tables into my database. The user then has to remember another username and password and I have to secure the storage of these credentials. Lots of work for everyone.&lt;/p>
&lt;p>&lt;img class="img-fluid" alt="" src="https://storageaccountblog9f5d.blob.core.windows.net/blazor/wp-content/uploads/2016/03/arch.png?w=600&amp;amp;ssl=1" loading="lazy"
/>
&lt;/p>
&lt;p>There is a better way by using Azure Active Directory. You have probably heard of Active Directory, if you are a SysAdmin you probably use it all the time to manage your corporate users and computers. Azure Active Directory is an extension of this into the Cloud.&lt;/p>
&lt;p>I have blogged in the past about using Azure but this is the first time I have tried connecting my internal domain to Azure. There is a &lt;a href="https://vlabs.holsystems.com/vlabs/technet?eng=VLabs&amp;amp;auth=external&amp;amp;src=vlabs&amp;amp;altadd=true&amp;amp;labid=13535" target="_blank" rel="noopener noreferrer">Virtual Lab&lt;/a>
which helped me try out some of these ideas.&lt;/p>
&lt;p>The first thing I did was to create a new Directory in Azure. I did this via the old portal (manage.windowsazure.com) it might be possible via the new portal but I don’t know how yet.&lt;/p>
&lt;p>Click New, select App Services &amp;gt; Active Directory &amp;gt; Directory and select Custom Create. Select Create new directory, give it a name and a domain name and select a region from the drop down. Then add a Global Admin for this directory.&lt;/p>
&lt;p>There is a tool called &lt;a href="https://www.microsoft.com/en-us/download/details.aspx?id=47594" target="_blank" rel="noopener noreferrer">Azure Active Directory Connect&lt;/a>
. Download and Install this with express settings on one of your domain controllers. You need to specify a domain admin account to access your domain and the Azure Global Admin account you just created.&lt;/p>
&lt;p>At this point I went to bed so I am not sure how long it tool to sync all the domain information but by morning it was all showing in the users list on Azure.&lt;/p>
&lt;p>All my user accounts are showing with a @contoso.onmicrosoft.com, it is possible to use custom domains but I haven’t figured out that step yet. I made a change in my Active Directory and a while later that change was showing in Azure AD.&lt;/p>
&lt;p>So now what? Open up Visual Studio and see if I can use Azure to Authenticate.&lt;/p>
&lt;p>I selected to create a new MVC web project and clicked the change authenticate option. One of the options was Work and School Accounts, I then selected Cloud Single Organization and entered contoso.onmicrosoft.com. I then ran this app and it authenticated using Azure using my domain password. Really impressed at how easy that was.&lt;/p>
&lt;p>The app then shows up on Azure in the old portal. In Applications you can see a list of which users have access to your app and configure few other app related settings.&lt;/p>
&lt;p>This is a long way off being useful in my actual app, but it shows that the basics of what I am trying to do does work. Anyone done anything similar with Azure AD? How did you get on?&lt;/p></description></item></channel></rss>